<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[OS开发中遇到的问题汇总-持续更新]]></title>
    <url>%2F2018%2F12%2F22%2FOS%E5%BC%80%E5%8F%91%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%2F</url>
    <content type="text"><![CDATA[1. 调试的时候发现定义的局部变量始终为nil。在「lldb」中通过「po」命令来查看总是提示变量未找到。且编译的时候提示：‘XXXX’ was compiled with optimization - stepping may behave oddly; variables may not be available分析：工程在编译之后被优化了，导致单步调试的时候程序表现异常，变量也都不能访问了。这是由于编译的时候选择的是 release，而 release 的时候是会做很多优化，导致上述结果。 解决方法：把编译方式改为Debug。 2. 解决标准时间个北京时间相差的8个小时12345678NSDateFormatter *dateFormatter = [[NSDateFormatter alloc]init];[dateFormatter setDateFormat:@&quot;yyyy-MM-dd HH:mm:ss&quot;];NSDate *date = [dateFormatter dateFromString:@&quot;2013-2-25 12:22:00&quot;];NSTimeZone *zone = [NSTimeZone systemTimeZone];NSInteger interval = [zone secondsFromGMTForDate:date]; NSDate *fireDate = [date dateByAddingTimeInterval: interval];NSLog(@&quot;%@&quot;,fireDate); 3.自定义键盘展示收启动画12345678910111213141516171819202122232425262728293031323334[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];- (void)keyboardWillShow:(NSNotification *)notification &#123;NSDictionary *userInfo = [notification userInfo];NSValue *animationDurationValue = [userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey];NSTimeInterval animationDuration;[animationDurationValue getValue:&amp;animationDuration];[UIView beginAnimations:nil context:nil];[UIView setAnimationDuration:animationDuration];NSValue* aValue = [userInfo objectForKey:UIKeyboardFrameEndUserInfoKey];CGRect keyboardRect = [aValue CGRectValue];CGRect rect = self.view.frame;rect.origin.y = -(keyboardRect.size.height-44);self.view.frame = rect;[UIView commitAnimations];&#125;- (void)keyboardWillHide:(NSNotification *)notification &#123;NSDictionary* userInfo = [notification userInfo];NSValue *animationDurationValue = [userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey];NSTimeInterval animationDuration;[animationDurationValue getValue:&amp;animationDuration];[UIView beginAnimations:nil context:nil];[UIView setAnimationDuration:animationDuration];self.view.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height);[UIView commitAnimations];&#125; 4. XCODE8支持IOS7设备调试的方法首先我们如果使用Xcode8新建的工程，默认支持的最低版本是iOS8，如果想支持iOS7 我们可以手动改动版本到7.0（自己在） Target添加 不支持真机调试 是因为 /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport 里面有类似这样的一些文件夹，如果这些文件夹中没有包含我们真机的系统，则不能进行真机测试。但是我们可以通过将相应的配置包添加入这个文件夹来解决问题： 👇链接，里面有从iOS4.2到9.1所有版本的配置包 ],拖进去 重启电脑即可。 https://pan.baidu.com/s/1hsx4VAk 提取密码 h5zt 5. 检测项目中是否使用广告标示符IDFA提交appStore审核时出现如下提示。但APP里没有集合任何广告SDK.且没有明确使用获取广告标示的方法 [[ASIdentifierManager sharedManager] advertisingIdentifier]。只是因为shareSDK的原因集成了 AdSupport.framework库。故怀疑是SDK用了. 检测方法： //在项目的根目录下用终端执行 grep -r advertisingIdentifier . 如图得到结果，shareSDK中的新浪微博sdk包含 6. UITabBar顶部分割线问题最近需要自定义一个中间有凸出按钮的UITabBar,发现tabbar的上方有一条细细的分割线，导致中间按钮总是被截断，很不美观。 其实这条分割线是ShadowImage，所以只需要用透明图片替换他就可以。解决方法如下： 123456789101112131415161718192021//改变tabbar 线条颜色CGRect rect = CGRectMake(0, 0, FullScreenWidth, 1);UIGraphicsBeginImageContext(rect.size);CGContextRef context = UIGraphicsGetCurrentContext();CGContextSetFillColorWithColor(context,[UIColor clearColor].CGColor);CGContextFillRect(context, rect);UIImage *img = UIGraphicsGetImageFromCurrentImageContext();UIGraphicsEndImageContext();[self.tabBar setShadowImage:img];[self.tabBar setBackgroundImage:[[UIImage alloc]init]]; 缺一不可，否则将无法改变分割线颜色 7. ShareSDK—SMS_SDKv1.1.1版本替换问题项目中用到了ShareSDK的分享sdk和短信sdk,最近由于ShareSDK的这两个sdk更新导致短信获取验证码总是出问题。进行替换后，验证码可以正常收到，但是自己的服务器总是无法验证通过，经过和售后沟通，最终问题是，iosV1.1.1 和 android1.3之后，服务器地址更换https://web.sms.mob.com/sms/verify 8. Objective-C GCC Code Block Evaluation C Extension ({…})语法12345678910111213141516171819202122//代码结构化方法//Objective-C GCC Code Block Evaluation C Extension (&#123;…&#125;)语法_label = (&#123;UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(10, 60, 300, 60)];label.backgroundColor = [UIColor darkGrayColor];label.textColor = [UIColor blackColor];label.font = [UIFont systemFontOfSize:12.0f];label.numberOfLines = 0;label.text = @&quot; Objective-C GCC Code Block Evaluation C Extension (&#123;…&#125;)语法&quot;;label;&#125;); 9. iOS9废弃设置状态栏颜色的方法1234567[[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];修改方式是将info.plist里面的View controller-based status bar appearance设置为YES，然后在控制器里重写方法- (UIStatusBarStyle)preferredStatusBarStyle &#123;return UIStatusBarStyleLightContent;&#125; 10. 图文混排1234567891011121314151617- (NSMutableAttributedString *)address&#123;NSMutableAttributedString *attrStr = [[NSMutableAttributedString alloc] initWithString:@&quot; 中国 福州 &quot;];UIImage *image = [UIImage imageNamed:@&quot;digital_entrance_addressIndicatorRight&quot;];NSTextAttachment *attachment = [[NSTextAttachment alloc] init];attachment.image = image;attachment.bounds = CGRectMake(0, 0, 25, 11);[attrStr insertAttributedString: [NSAttributedString attributedStringWithAttachment:attachment] atIndex:0];image = [UIImage imageNamed:@&quot;digital_entrance_addressIndicatorLeft&quot;];attachment = [[NSTextAttachment alloc] init];attachment.image = image;attachment.bounds = CGRectMake(0, 0, 25, 11);[attrStr appendAttributedString:[NSAttributedString attributedStringWithAttachment:attachment]];return attrStr;&#125; 11. 行间距1234567891011- (NSAttributedString *)setLineSpaceWith:(CGFloat)space font:(UIFont *)font text:(NSString *)text&#123; NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc]init]; paragraphStyle.lineSpacing = space - (font.lineHeight - font.pointSize); NSDictionary *dic = @&#123;NSParagraphStyleAttributeName: paragraphStyle&#125;; NSAttributedString *attr = [[NSAttributedString alloc]initWithString:text attributes:dic]; return attr; &#125; 12.RAC信号量12345678910111213141516171819202122232425@weakify(self);[[[[[[[self requestAccessToSinaWeiboSignal]then:^RACSignal *&#123;//等待,用于连接两个信号，当第一个信号完成，才会连接then返回的信号,注意使用then，之前信号的值会被忽略掉.@strongify(self);return self.searchText.rac_textSignal;&#125;]filter:^BOOL(NSString *text) &#123;//过滤@strongify(self);return [self isValidSearchText:text];&#125;]throttle:0.5]//节流flattenMap:^RACStream *(NSString *text) &#123;//映射@strongify(self);return [self signalForSearchWithText:text];&#125;]deliverOn:[RACScheduler mainThreadScheduler]]//分发subscribeNext:^(NSDictionary *jsonSearchResult) &#123;//订阅NSArray *statuses = jsonSearchResult[@&quot;statuses&quot;];NSArray *tweets = [statuses linq_select:^id(id item) &#123;return [RWTweet tweetWithStatus:item];&#125;];[self.resultsViewController displayTweets:tweets];&#125; error:^(NSError *error) &#123;NSLog(@&quot;error:%@&quot;,error);&#125;]; 13. git clone遇到的坑git clone项目有二种方式： 1.使用http url克隆, git clone http://xxxx.git 2.使用 SSH url 克隆，需要在克隆之前先配置和添加好 SSH key, 并且必须拥有权限。 配置ssh key的方法bogon:~ wangpo$ ssh-keygen -t rsa -C “wangpo@syswin.com“ -b 4096…..一直回车出现👇提示代表成功 12345678910111213141516Your identification has been saved in /Users/devil/.ssh/id_rsa. Your public key has been saved in /Users/devil/.ssh/id_rsa.pub. The key fingerprint is: SHA256:cBM85BXm3xnPFhFCmgFYhygVLZxGHGYgCKYo5ko0FPc devil@devildeMacBook-Pro.local The key&apos;s randomart image is: +---[RSA 2048]----+ |o+oo .*X@o*+.o o.| |=.. o.oXoB. + . .| |++ E+ =..o .. | |= . o . . . =.| | o S . o +| |o . | |. | | | | | +----[SHA256]-----+ 会在 ~/.ssh/生成2个文件：id_rsaid_rsa.pub将id_rsa.pub里面的内容，👇 拷贝到gitLab对应的settings/SSH Key里 1234ssh-rsaAAAAB3NzaC1yc2EAAAABIwAAAQEAlgjiMw7AskxbvpQY9rmZPQxQBzh9laxFvbaini2EgmQkNsXBA9WJOXn2YBJauoiVsdUKBWA97avjsobrTxsCYvFr1yQQvTfTlbqlqGNIhQc/3HjTl2pIkClpDWvBrRN+jpyESS4MNbfOL1qjT4c/QhGvj6U6HrN6kUyn58oyyJpTzOLG74AZELJ2Led57QvTw1yJXZuAMWioR0A3BGd25fdocLX3ebux6ya8AsloOVYfsAqGlggrARe6FXjLfMH4a/nxaAdiDYVXU/Vr1ybK9P7SfyEDGJi3JtgiPUlA6vPxUCE+9IJPQaqqeqCGzrJ6G/XO7om1v9YLLG/H/ZN2tQ== test key从公司搭建的gitLab上clone项目时，各种尴尬各种坑 1、采用http的方式一直提示，经过查询时gitLab的服务器缓存大小的限制RPC failed; HTTP 504 curl 22 The requested URL returned error: 504 Gateway Time-out The remote end hung up unexpectedly 2、采用ssh的方式则一直提示输入密码，三次之后提示没有权限，期间一直怀疑ssh配置问题，最终定位到gitLab服务缺少域名解析，需要添加hosts指向对应的ip再次clone的时候会在 /用户/wangpo/.ssh的文件夹里多一个know_hosts的文件，里面包含添加的host主机，终于clone成功 14. safari不能解析html代码第一步：shift+command+T让代码以纯文本显示。（你会发现窗口上方的标尺等栏目消失了） 第二步：文本编辑 &gt; 偏好设置——在“打开和存储”栏目中，勾上“将HTML文件显示为HTML代码而不显示为格式化的文本”，勾掉“给纯文本文件添加.txt扩展名”。 第三步：存储文件。这样得到的文件双击会在浏览器中以网页显示，右键选择“文本编辑（TextEdit）”打开时，会以代码格式显示，仍可继续编辑。 15. iOS crash 日志堆栈解析https://mp.weixin.qq.com/s/6gyRe8EHIJzgutvQq01KEA 16. 17. https://www.cnblogs.com/jgCho/p/5199834.html18. NSStringDrawingTruncatesLastVisibleLine富文本算高的时候，如果指定numberOfLines，当文本过多时，算出的高度为实际值，需要指定NSStringDrawingTruncatesLastVisibleLine 1234567- (CGSize)sizeWithAttributedStr:(NSAttributedString *)str&#123;CGRect rect = [str boundingRectWithSize:(CGSize)&#123;SCREEN_WIDTH - _goodsView.right - 20, 40&#125;options:NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingTruncatesLastVisibleLinecontext:nil];return rect.size;&#125; 19. 快捷键 shift + command + o 快速定位文件 shift + command + j 在项目导航中显示当前文件 (在大项目中尤其好用,推荐!) command + L 定为到文件的指定行 control + i 对选中文字 重新格式化缩进 20.123456#ifdef DEBUG#define LGLog(fmt, ...) NSLog((@&quot;%s [Line %d] &quot; fmt), __PRETTY_FUNCTION__, __LINE__, ## __VA_ARGS__);#else#define LGLog(...)#endif 21. static vs const静态局部变量 / 全局变量 / 静态全局变量，存储在静态存储区。内存直到程序结束才会销毁。 static修饰局部变量:将局部变量量的本来分配在栈区改为分配在静态存储区，也就改 变了了局部变量的⽣生命周期。 static修饰全局变量:本来是在整个源程序的所有⽂件都可见，可以使⽤用extern关键字来引⽤用这个全局变量量static修饰后，改为只在申明⾃己的文件可见，即修改了作用域。 const修饰的是其右边的值，也就是const右边的这个整体的值不能改变。NSString const *str = @“test”;str = @“hahh”;//可以修改 NSString * const str = @“test”;Str = @“d”;//不能修改 ⼀一般联合使用static和const来定义⼀个只能在本文件中使用的，不不能修改的变量static NSString *const name = @“23”; 22.Color Offscreen-Rendered Yellow 开启后会把那些需要离屏渲染的图层高亮成黄色，这就意味着黄色图层可能存在性能问题。 Color Hits Green and Misses Red 如果shouldRasterize被设置成YES，对应的渲染结果会被缓存，如果图层是绿色，就表示这些缓存被复用；如果是红色就表示缓存会被重复创建，这就表示该处存在性能问题了。 Color Blended layers标示混合的图层会为红色,不透明的图层为绿色，通常我们希望绿色的区域越多越好。 Color copied images标示被Core Animation拷贝的图片。这主要是因为该图片的色彩格式不能被GPU直接处理，需要在CPU这边做转换，假如在主线层做这个操作对性能会有一定的影响。 Color misaligned images被缩放的图片会被标记为黄色,像素不对齐则会标注为紫色。 UILabel使用非clearColor的时候，如果frame坐标有float值，会因像素不能对其，而出现锯齿化，UILabel会产生一些灰色细线 23. 安装 Homebrew:https://brew.sh /usr/bin/ruby -e “$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 24. 关于短视频滚动列表，滑动slider不灵敏问题的解决办法 由于UI给的thumbImage图片过小，默认UISlider开始拖动的手势范围只有thumbImage的大小之内.为了解决这个问题需要创建一个子类继承于UISlider.重写其中的方法,将会增加Y轴方向thumbImage的触控范围 12345678910111213- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value&#123;//y轴方向改变手势范围 rect.origin.y = rect.origin.y - 10; rect.size.height = rect.size.height + 20; return CGRectInset ([super thumbRectForBounds:bounds trackRect:rect value:value], 10 ,10); &#125; * /* 直接拖动UISlider，此时touch时间在150ms以内，UIScrollView会认为是拖动自己，从而拦截了event，导致UISlider接受不到滑动的event。但是只要按住UISlider一会再拖动，此时此时touch时间超过150ms，因此滑动的event会发送到UISlider上。 */ 12345678910111213 - (UIView*)hitTest:(CGPoint)point withEvent:(UIEvent*)event &#123; UIView*view = [super hitTest:point withEvent:event]; if([view isKindOfClass:[UISlider class]]) &#123; //如果响应view是UISlider,则scrollview禁止滑动 self.scrollEnabled = NO; &#125;else&#123; //如果不是,则恢复滑动 self.scrollEnabled = YES; &#125; return view; &#125; ### 25 ReactNative To run your app on iOS: cd /Users/wangpo8/AwesomeProject react-native run-ios - or - Open ios/AwesomeProject.xcodeproj in Xcode Hit the Run button To run your app on Android: cd /Users/wangpo8/AwesomeProject Have an Android emulator running (quickest way to get started), or a device connected react-native run-android]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识点总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[历史博客链接]]></title>
    <url>%2F2018%2F10%2F11%2F%E5%8E%86%E5%8F%B2%E5%8D%9A%E5%AE%A2%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[https://po1987.wang/2018/03/30/微信小程序初探/ https://po1987.wang/2018/05/01/ReactiveCocoa教程-学习笔记1/ https://po1987.wang/2018/05/01/ReactiveCocoa教程-学习笔记2/ https://po1987.wang/2018/05/02/YYModel的实践/ https://po1987.wang/2018/05/30/基于GitHub-Pages-Hexo-NexT搭建个人博客/ https://po1987.wang/2018/05/31/安装Cocoapods/ https://po1987.wang/2018/05/31/创建自己的CocoaPods私有库-公共库/ https://po1987.wang/2018/05/31/直播流程/ https://po1987.wang/2018/06/04/iOS性能优化初探/ https://po1987.wang/2018/06/06/性能优化之ASDK-Texture/ https://po1987.wang/2018/06/08/测试驱动开发（TDD）-XCTest/ https://po1987.wang/2018/06/10/行为驱动开发（BDD）-Kiwi/ https://po1987.wang/2018/08/09/Runtime相关文章转载/https://po1987.wang/2018/08/10/RunLoop相关技术点/ https://po1987.wang/2018/08/12/类与对象基础数据结构/ https://po1987.wang/2018/08/16/block嵌套时-weakify-self-，-strongify-self-的配对使用/ https://po1987.wang/2018/08/16/调用系统相机-相册代码片段/ https://po1987.wang/2018/08/17/Objective-C-Associated-Objects-的实现原理/ https://po1987.wang/2018/08/23/MAC搭建基于Nginx的RTMP流媒体服务器/ https://po1987.wang/2018/08/28/音视频之音频采集Audio-Unit/ https://po1987.wang/2018/08/29/音视频之视频采集（GPUImage）过程/ https://po1987.wang/2018/10/09/耗电量优化/https://po1987.wang/2018/10/12/技术贴传送门/ https://po1987.wang/2018/10/12/面试题汇总/ https://po1987.wang/2018/10/12/iOS-9-10-11-12-适配/]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>历史博客</tag>
      </tags>
  </entry>
</search>
