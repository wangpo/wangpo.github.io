<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ÊäÄÊúØË¥¥‰º†ÈÄÅÈó®]]></title>
    <url>%2F2018%2F10%2F12%2F%E6%8A%80%E6%9C%AF%E8%B4%B4%E4%BC%A0%E9%80%81%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Block http://www.narutoyq.cc/block-ÁÆÄ‰ªã/ http://www.narutoyq.cc/block-Â±ÄÈÉ®ÂèòÈáè/ http://www.narutoyq.cc/block-ÂΩ¢ÂèÇÂèòÈáè/ http://www.narutoyq.cc/block-ÊàêÂëòÂèòÈáè/ http://www.narutoyq.cc/block-ÈùôÊÄÅÂèòÈáè/ http://www.narutoyq.cc/block-block‰øÆÈ•∞Á¨¶/ http://www.narutoyq.cc/block-Âæ™ÁéØÂºïÁî®/ Â§öÁ∫øÁ®ã http://xuyafei.cn/post/draft/ios-thread GCD https://mp.weixin.qq.com/s/IeVG2V00zqH7UZh6AfyKnw iOSÂ§öÁ∫øÁ®ãÔºö„ÄéNSOperation„ÄÅNSOperationQueue„ÄèËØ¶Â∞ΩÊÄªÁªì https://mp.weixin.qq.com/s/7lAWCUlq2V7_IQ1F7FnfcQ Runloop Ê∑±ÂÖ•ÁêÜËß£runloop https://blog.ibireme.com/2015/05/18/runloop/ Runtime RuntimeÂÆåÁæéÊÄªÁªì https://www.jianshu.com/p/6b905584f536 Associated Objects http://esoftmobile.com/2014/02/18/associated-objects/ http://blog.leichunfeng.com/blog/2015/06/26/objective-c-associated-objects-implementation-principle/ KVC &amp; KVO KVC https://www.jianshu.com/p/45cbd324ea65 KVO https://www.jianshu.com/p/e59bb8f59302 ‰∫ã‰ª∂ÁöÑ‰º†ÈÄíÂíåÂìçÂ∫î Âè≤‰∏äÊúÄËØ¶ÁªÜÁöÑiOS‰πã‰∫ã‰ª∂ÁöÑ‰º†ÈÄíÂíåÂìçÂ∫îÊú∫Âà∂ https://www.jianshu.com/p/2e074db792ba https://www.jianshu.com/p/3e53d4d5f293 Ê∫êÁ†ÅËß£Êûê Alamofire ÁöÑËÆæËÆ°‰πãÈÅì https://juejin.im/entry/5947ae51a0bb9f006bdd3241 SRWebSocketÊ∫êÁ†ÅÊµÖÊûê https://www.jianshu.com/p/cdb7a886789a ÁªÑ‰ª∂Âåñ ÁªÑ‰ª∂ÂåñÊñπÊ°àÊé¢Á¥¢ https://blog.cnbang.net/tech/3080/ ÊÄßËÉΩ App Ë¥®Èáè‰∏éÊÄßËÉΩÂ¶Ç‰Ωï‰øùËØÅ https://xiaozhuanlan.com/topic/2601359478]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[iOS_9_10_11_12_ÈÄÇÈÖç]]></title>
    <url>%2F2018%2F10%2F12%2FiOS-9-10-11-12-%E9%80%82%E9%85%8D%2F</url>
    <content type="text"><![CDATA[iOS9ÈÄÇÈÖç1„ÄÅiOS9ÂºïÂÖ•‰∫ÜÊñ∞ÁâπÊÄßAPP Transport Security(ATS),ÊâÄ‰ª•Âú®Xcode7‰∏≠ÂèëÁé∞ÁΩëÁªúËÆøÈóÆÂ§±Ë¥•„ÄÇÂπ∂ËæìÂá∫ÈîôËØØ‰ø°ÊÅØThe resource could not be loaded because the App Transport Security policy requires the use of a secure connection Êñ∞ÁâπÊÄßË¶ÅÊ±ÇAppÂÜÖËÆøÈóÆÁöÑÁΩëÁªúÂøÖÈ°ª‰ΩøÁî® HTTPS ÂçèËÆÆ„ÄÇ ‰ΩÜÊòØÁé∞Âú®ÂÖ¨Âè∏ÁöÑÈ°πÁõÆ‰ΩøÁî®ÁöÑÊòØ HTTP ÂçèËÆÆ+HTTPSÂçèËÆÆ„ÄÇ ÊúÄÁªàÊâæÂà∞‰ª•‰∏ãËß£ÂÜ≥ÂäûÊ≥ïÔºö Âú®Info.plist‰∏≠Ê∑ªÂä† NSAppTransportSecurity Á±ªÂûã Dictionary „ÄÇ Âú® NSAppTransportSecurity ‰∏ãÊ∑ªÂä† NSAllowsArbitraryLoads Á±ªÂûã Boolean ,ÂÄºËÆæ‰∏∫ YES ËøôÊ†∑Â∞ÜÊí§ÂõûHTTP‰∏çÂÆâÂÖ®ËØ∑Ê±Ç„ÄÇ 2„ÄÅBitcode iOSÂπ∂‰∏çÂº∫Âà∂‰ΩøÁî®Ôºå‰ΩÜÊòØXcode7ÈªòËÆ§‰ºöÂºÄÂêØBitcode. Ëß£ÂÜ≥ÊñπÊ≥ï‰∏ÄÔºöÊõ¥Êñ∞Á¨¨‰∏âÊñπÂ∫ìlibrary,‰ΩøÂÖ∂ÂåÖÂê´Bitcode Ëß£ÂÜ≥ÊñπÊ≥ï‰∫åÔºöÂÖ≥Èó≠Bitcode 3„ÄÅURL Scheme Âú®iOS9‰∏≠ÔºåÂ¶ÇÊûú‰ΩøÁî®URL schemeÂøÖÈ°ªÂú®‚ÄùInfo.plist‚Äù‰∏≠Â∞Ü‰Ω†Ë¶ÅÂú®Â§ñÈÉ®Ë∞ÉÁî®ÁöÑURL schemeÂàó‰∏∫ÁôΩÂêçÂçïÔºåÂê¶Âàô‰∏çËÉΩ‰ΩøÁî®„ÄÇ iOS11ÈÄÇÈÖç1„ÄÅÊ∑ªÂä†ÂêØÂä®Âõæ375812@3x‚Äî11252436 2„ÄÅif (@available(iOS 11.0, *)) { self.tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;} else { self.automaticallyAdjustsScrollViewInsets = NO;}3„ÄÅ_tableView.estimatedRowHeight = 0;_tableView.estimatedSectionHeaderHeight = 0;_tableView.estimatedSectionFooterHeight = 0; 4„ÄÅÊ®™Â±èÊí≠ÊîæÔºåËá™Âä®ÈöêËóèhomeIndicator (void)updateHomeIndicatorAutoHidden:(BOOL)hidden{ self.homeIndicatorAutoHidden = hidden; if (@available(iOS 11.0, *)) { [self setNeedsUpdateOfHomeIndicatorAutoHidden]; }} (BOOL)prefersHomeIndicatorAutoHidden{ return self.homeIndicatorAutoHidden;} 6„ÄÅÂ∑•ÂÖ∑Êù°‰∏çËÉΩË¢´HomeIndicatorÈÅÆÁõñ [self.commentBar mas_makeConstraints:^(MASConstraintMaker *make) { make.bottom.equalTo(self.view).offset(-SafeAreaBottomHeight); make.width.centerX.equalTo(self.view); make.height.mas_equalTo(BFSCommentBarHeight); }]; 7„ÄÅÂÆèÂÆö‰πâ 12345678910111213141516#define VIEW_SAFE_AREA_INSETS(view) (&#123;UIEdgeInsets i; if(@available(iOS 11.0, *)) &#123;i = view.safeAreaInsets;&#125; else &#123;i = UIEdgeInsetsZero;&#125; i;&#125;)#define BFLStatusBarHeight (isIPhoneX ? 44 : 20)#define BFLNavBarHeight (isIPhoneX ? 88 : 64)#define BFLTabBarHeight (isIPhoneX ? 83 : 49)#define SafeAreaBottomHeight (isIPhoneX ? 34 : 0)#define KPlayerSmallWindowHeight ((KPlayerSmallWindowWidth*(9.0/16.0) + (isIPhoneX ? 44 : 0)) //Â∞èÂ±èÊí≠ÊîæÂô®#define isIPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)iPhoneXÁöÑÂ±èÂπïÂ∞∫ÂØ∏ 375*812 Á´ñÂ±èÂÆâÂÖ®Âå∫ÂüüÔºà44Ôºå0Ôºå34Ôºå0Ôºâ Ê®™Â±èÂÆâÂÖ®Âå∫Âüü Ôºà0Ôºå44Ôºå21Ôºå44Ôºâ]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ÈÄÇÈÖç</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÂºÄÂèë‰∏≠ÈÅáÂà∞ÁöÑÈóÆÈ¢òÊ±áÊÄª-ÊåÅÁª≠Êõ¥Êñ∞...]]></title>
    <url>%2F2018%2F10%2F12%2FiOS%E5%BC%80%E5%8F%91%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%2F</url>
    <content type="text"><![CDATA[1. Ë∞ÉËØïÁöÑÊó∂ÂÄôÂèëÁé∞ÂÆö‰πâÁöÑÂ±ÄÈÉ®ÂèòÈáèÂßãÁªà‰∏∫nil„ÄÇÂú®„Äålldb„Äç‰∏≠ÈÄöËøá„Äåpo„ÄçÂëΩ‰ª§Êù•Êü•ÁúãÊÄªÊòØÊèêÁ§∫ÂèòÈáèÊú™ÊâæÂà∞„ÄÇ‰∏îÁºñËØëÁöÑÊó∂ÂÄôÊèêÁ§∫Ôºö‚ÄòXXXX‚Äô was compiled with optimization - stepping may behave oddly; variables may not be availableÂàÜÊûêÔºöÂ∑•Á®ãÂú®ÁºñËØë‰πãÂêéË¢´‰ºòÂåñ‰∫ÜÔºåÂØºËá¥ÂçïÊ≠•Ë∞ÉËØïÁöÑÊó∂ÂÄôÁ®ãÂ∫èË°®Áé∞ÂºÇÂ∏∏ÔºåÂèòÈáè‰πüÈÉΩ‰∏çËÉΩËÆøÈóÆ‰∫Ü„ÄÇËøôÊòØÁî±‰∫éÁºñËØëÁöÑÊó∂ÂÄôÈÄâÊã©ÁöÑÊòØ releaseÔºåËÄå release ÁöÑÊó∂ÂÄôÊòØ‰ºöÂÅöÂæàÂ§ö‰ºòÂåñÔºåÂØºËá¥‰∏äËø∞ÁªìÊûú„ÄÇ Ëß£ÂÜ≥ÊñπÊ≥ïÔºöÊääÁºñËØëÊñπÂºèÊîπ‰∏∫Debug„ÄÇ 2. Ëß£ÂÜ≥Ê†áÂáÜÊó∂Èó¥‰∏™Âåó‰∫¨Êó∂Èó¥Áõ∏Â∑ÆÁöÑ8‰∏™Â∞èÊó∂12345678NSDateFormatter *dateFormatter = [[NSDateFormatter alloc]init];[dateFormatter setDateFormat:@&quot;yyyy-MM-dd HH:mm:ss&quot;];NSDate *date = [dateFormatter dateFromString:@&quot;2013-2-25 12:22:00&quot;];NSTimeZone *zone = [NSTimeZone systemTimeZone];NSInteger interval = [zone secondsFromGMTForDate:date]; NSDate *fireDate = [date dateByAddingTimeInterval: interval];NSLog(@&quot;%@&quot;,fireDate); 3.Ëá™ÂÆö‰πâÈîÆÁõòÂ±ïÁ§∫Êî∂ÂêØÂä®Áîª12345678910111213141516171819202122232425262728293031323334 [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]; [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil];- (void)keyboardWillShow:(NSNotification *)notification &#123; NSDictionary *userInfo = [notification userInfo]; NSValue *animationDurationValue = [userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey]; NSTimeInterval animationDuration; [animationDurationValue getValue:&amp;animationDuration]; [UIView beginAnimations:nil context:nil]; [UIView setAnimationDuration:animationDuration]; NSValue* aValue = [userInfo objectForKey:UIKeyboardFrameEndUserInfoKey]; CGRect keyboardRect = [aValue CGRectValue]; CGRect rect = self.view.frame; rect.origin.y = -(keyboardRect.size.height-44); self.view.frame = rect; [UIView commitAnimations];&#125;- (void)keyboardWillHide:(NSNotification *)notification &#123; NSDictionary* userInfo = [notification userInfo]; NSValue *animationDurationValue = [userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey]; NSTimeInterval animationDuration; [animationDurationValue getValue:&amp;animationDuration]; [UIView beginAnimations:nil context:nil]; [UIView setAnimationDuration:animationDuration]; self.view.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height); [UIView commitAnimations];&#125; 4. XCODE8ÊîØÊåÅIOS7ËÆæÂ§áË∞ÉËØïÁöÑÊñπÊ≥ïÈ¶ñÂÖàÊàë‰ª¨Â¶ÇÊûú‰ΩøÁî®Xcode8Êñ∞Âª∫ÁöÑÂ∑•Á®ãÔºåÈªòËÆ§ÊîØÊåÅÁöÑÊúÄ‰ΩéÁâàÊú¨ÊòØiOS8ÔºåÂ¶ÇÊûúÊÉ≥ÊîØÊåÅiOS7 Êàë‰ª¨ÂèØ‰ª•ÊâãÂä®ÊîπÂä®ÁâàÊú¨Âà∞7.0ÔºàËá™Â∑±Âú®Ôºâ TargetÊ∑ªÂä† ‰∏çÊîØÊåÅÁúüÊú∫Ë∞ÉËØï ÊòØÂõ†‰∏∫ /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport ÈáåÈù¢ÊúâÁ±ª‰ººËøôÊ†∑ÁöÑ‰∏Ä‰∫õÊñá‰ª∂Â§πÔºåÂ¶ÇÊûúËøô‰∫õÊñá‰ª∂Â§π‰∏≠Ê≤°ÊúâÂåÖÂê´Êàë‰ª¨ÁúüÊú∫ÁöÑÁ≥ªÁªüÔºåÂàô‰∏çËÉΩËøõË°åÁúüÊú∫ÊµãËØï„ÄÇ‰ΩÜÊòØÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáÂ∞ÜÁõ∏Â∫îÁöÑÈÖçÁΩÆÂåÖÊ∑ªÂä†ÂÖ•Ëøô‰∏™Êñá‰ª∂Â§πÊù•Ëß£ÂÜ≥ÈóÆÈ¢òÔºö üëáÈìæÊé•ÔºåÈáåÈù¢Êúâ‰ªéiOS4.2Âà∞9.1ÊâÄÊúâÁâàÊú¨ÁöÑÈÖçÁΩÆÂåÖ ],ÊãñËøõÂéª ÈáçÂêØÁîµËÑëÂç≥ÂèØ„ÄÇ https://pan.baidu.com/s/1hsx4VAk ÊèêÂèñÂØÜÁ†Å h5zt 5. Ê£ÄÊµãÈ°πÁõÆ‰∏≠ÊòØÂê¶‰ΩøÁî®ÂπøÂëäÊ†áÁ§∫Á¨¶IDFAÊèê‰∫§appStoreÂÆ°Ê†∏Êó∂Âá∫Áé∞Â¶Ç‰∏ãÊèêÁ§∫„ÄÇ‰ΩÜAPPÈáåÊ≤°ÊúâÈõÜÂêà‰ªª‰ΩïÂπøÂëäSDK.‰∏îÊ≤°ÊúâÊòéÁ°Æ‰ΩøÁî®Ëé∑ÂèñÂπøÂëäÊ†áÁ§∫ÁöÑÊñπÊ≥ï [[ASIdentifierManager sharedManager] advertisingIdentifier]„ÄÇÂè™ÊòØÂõ†‰∏∫shareSDKÁöÑÂéüÂõ†ÈõÜÊàê‰∫Ü AdSupport.frameworkÂ∫ì„ÄÇÊïÖÊÄÄÁñëÊòØSDKÁî®‰∫Ü. Ê£ÄÊµãÊñπÊ≥ïÔºö //Âú®È°πÁõÆÁöÑÊ†πÁõÆÂΩï‰∏ãÁî®ÁªàÁ´ØÊâßË°å grep -r advertisingIdentifier . Â¶ÇÂõæÂæóÂà∞ÁªìÊûúÔºåshareSDK‰∏≠ÁöÑÊñ∞Êµ™ÂæÆÂçösdkÂåÖÂê´ 6. UITabBarÈ°∂ÈÉ®ÂàÜÂâ≤Á∫øÈóÆÈ¢òÊúÄËøëÈúÄË¶ÅËá™ÂÆö‰πâ‰∏Ä‰∏™‰∏≠Èó¥ÊúâÂá∏Âá∫ÊåâÈíÆÁöÑUITabBar,ÂèëÁé∞tabbarÁöÑ‰∏äÊñπÊúâ‰∏ÄÊù°ÁªÜÁªÜÁöÑÂàÜÂâ≤Á∫øÔºåÂØºËá¥‰∏≠Èó¥ÊåâÈíÆÊÄªÊòØË¢´Êà™Êñ≠ÔºåÂæà‰∏çÁæéËßÇ„ÄÇ ÂÖ∂ÂÆûËøôÊù°ÂàÜÂâ≤Á∫øÊòØShadowImageÔºåÊâÄ‰ª•Âè™ÈúÄË¶ÅÁî®ÈÄèÊòéÂõæÁâáÊõøÊç¢‰ªñÂ∞±ÂèØ‰ª•„ÄÇËß£ÂÜ≥ÊñπÊ≥ïÂ¶Ç‰∏ãÔºö 1234567891011121314151617181920212223//ÊîπÂèòtabbar Á∫øÊù°È¢úËâ≤CGRect rect = CGRectMake(0, 0, FullScreenWidth, 1);UIGraphicsBeginImageContext(rect.size);CGContextRef context = UIGraphicsGetCurrentContext();CGContextSetFillColorWithColor(context,[UIColor clearColor].CGColor);CGContextFillRect(context, rect);UIImage *img = UIGraphicsGetImageFromCurrentImageContext();UIGraphicsEndImageContext();[self.tabBar setShadowImage:img];[self.tabBar setBackgroundImage:[[UIImage alloc]init]];Áº∫‰∏Ä‰∏çÂèØÔºåÂê¶ÂàôÂ∞ÜÊó†Ê≥ïÊîπÂèòÂàÜÂâ≤Á∫øÈ¢úËâ≤ 7. ShareSDK‚ÄîSMS_SDKv1.1.1ÁâàÊú¨ÊõøÊç¢ÈóÆÈ¢òÈ°πÁõÆ‰∏≠Áî®Âà∞‰∫ÜShareSDKÁöÑÂàÜ‰∫´sdkÂíåÁü≠‰ø°sdk,ÊúÄËøëÁî±‰∫éShareSDKÁöÑËøô‰∏§‰∏™sdkÊõ¥Êñ∞ÂØºËá¥Áü≠‰ø°Ëé∑ÂèñÈ™åËØÅÁ†ÅÊÄªÊòØÂá∫ÈóÆÈ¢ò„ÄÇËøõË°åÊõøÊç¢ÂêéÔºåÈ™åËØÅÁ†ÅÂèØ‰ª•Ê≠£Â∏∏Êî∂Âà∞Ôºå‰ΩÜÊòØËá™Â∑±ÁöÑÊúçÂä°Âô®ÊÄªÊòØÊó†Ê≥ïÈ™åËØÅÈÄöËøáÔºåÁªèËøáÂíåÂîÆÂêéÊ≤üÈÄöÔºåÊúÄÁªàÈóÆÈ¢òÊòØÔºåiosV1.1.1 Âíå android1.3‰πãÂêéÔºåÊúçÂä°Âô®Âú∞ÂùÄÊõ¥Êç¢https://web.sms.mob.com/sms/verify 8. Objective-C GCC Code Block Evaluation C Extension ({‚Ä¶})ËØ≠Ê≥ï123456789101112131415161718192021//‰ª£Á†ÅÁªìÊûÑÂåñÊñπÊ≥ï//Objective-C GCC Code Block Evaluation C Extension (&#123;‚Ä¶&#125;)ËØ≠Ê≥ï_label = (&#123;UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(10, 60, 300, 60)];label.backgroundColor = [UIColor darkGrayColor];label.textColor = [UIColor blackColor];label.font = [UIFont systemFontOfSize:12.0f];label.numberOfLines = 0;label.text = @&quot; Objective-C GCC Code Block Evaluation C Extension (&#123;‚Ä¶&#125;)ËØ≠Ê≥ï&quot;;label;&#125;); 9. iOS9Â∫üÂºÉËÆæÁΩÆÁä∂ÊÄÅÊ†èÈ¢úËâ≤ÁöÑÊñπÊ≥ï1234567 [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent]; ‰øÆÊîπÊñπÂºèÊòØÂ∞Üinfo.plistÈáåÈù¢ÁöÑView controller-based status bar appearanceËÆæÁΩÆ‰∏∫YESÔºåÁÑ∂ÂêéÂú®ÊéßÂà∂Âô®ÈáåÈáçÂÜôÊñπÊ≥ï- (UIStatusBarStyle)preferredStatusBarStyle &#123; return UIStatusBarStyleLightContent;&#125; 10. ÂõæÊñáÊ∑∑Êéí1234567891011121314151617- (NSMutableAttributedString *)address&#123; NSMutableAttributedString *attrStr = [[NSMutableAttributedString alloc] initWithString:@&quot; ‰∏≠ÂõΩ Á¶èÂ∑û &quot;]; UIImage *image = [UIImage imageNamed:@&quot;digital_entrance_addressIndicatorRight&quot;]; NSTextAttachment *attachment = [[NSTextAttachment alloc] init]; attachment.image = image; attachment.bounds = CGRectMake(0, 0, 25, 11); [attrStr insertAttributedString: [NSAttributedString attributedStringWithAttachment:attachment] atIndex:0]; image = [UIImage imageNamed:@&quot;digital_entrance_addressIndicatorLeft&quot;]; attachment = [[NSTextAttachment alloc] init]; attachment.image = image; attachment.bounds = CGRectMake(0, 0, 25, 11); [attrStr appendAttributedString:[NSAttributedString attributedStringWithAttachment:attachment]]; return attrStr;&#125; 11. Ë°åÈó¥Ë∑ù1234567891011- (NSAttributedString *)setLineSpaceWith:(CGFloat)space font:(UIFont *)font text:(NSString *)text&#123; NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc]init]; paragraphStyle.lineSpacing = space - (font.lineHeight - font.pointSize); NSDictionary *dic = @&#123;NSParagraphStyleAttributeName: paragraphStyle&#125;; NSAttributedString *attr = [[NSAttributedString alloc]initWithString:text attributes:dic]; return attr; &#125; 12.RAC‰ø°Âè∑Èáè12345678910111213141516171819202122232425@weakify(self);[[[[[[[self requestAccessToSinaWeiboSignal] then:^RACSignal *&#123;//Á≠âÂæÖ,Áî®‰∫éËøûÊé•‰∏§‰∏™‰ø°Âè∑ÔºåÂΩìÁ¨¨‰∏Ä‰∏™‰ø°Âè∑ÂÆåÊàêÔºåÊâç‰ºöËøûÊé•thenËøîÂõûÁöÑ‰ø°Âè∑,Ê≥®ÊÑè‰ΩøÁî®thenÔºå‰πãÂâç‰ø°Âè∑ÁöÑÂÄº‰ºöË¢´ÂøΩÁï•Êéâ. @strongify(self); return self.searchText.rac_textSignal; &#125;] filter:^BOOL(NSString *text) &#123;//ËøáÊª§ @strongify(self); return [self isValidSearchText:text]; &#125;] throttle:0.5]//ËäÇÊµÅ flattenMap:^RACStream *(NSString *text) &#123;//Êò†Â∞Ñ @strongify(self); return [self signalForSearchWithText:text]; &#125;] deliverOn:[RACScheduler mainThreadScheduler]]//ÂàÜÂèë subscribeNext:^(NSDictionary *jsonSearchResult) &#123;//ËÆ¢ÈòÖ NSArray *statuses = jsonSearchResult[@&quot;statuses&quot;]; NSArray *tweets = [statuses linq_select:^id(id item) &#123; return [RWTweet tweetWithStatus:item]; &#125;]; [self.resultsViewController displayTweets:tweets]; &#125; error:^(NSError *error) &#123; NSLog(@&quot;error:%@&quot;,error);&#125;]; 13. git cloneÈÅáÂà∞ÁöÑÂùëgit cloneÈ°πÁõÆÊúâ‰∫åÁßçÊñπÂºèÔºö 1.‰ΩøÁî®http urlÂÖãÈöÜ, git clone http://xxxx.git 2.‰ΩøÁî® SSH url ÂÖãÈöÜÔºåÈúÄË¶ÅÂú®ÂÖãÈöÜ‰πãÂâçÂÖàÈÖçÁΩÆÂíåÊ∑ªÂä†Â•Ω SSH key, Âπ∂‰∏îÂøÖÈ°ªÊã•ÊúâÊùÉÈôê„ÄÇ ÈÖçÁΩÆssh keyÁöÑÊñπÊ≥ï bogon:~ wangpo$ ssh-keygen -t rsa -C ‚Äúwangpo@syswin.com‚Äú -b 4096‚Ä¶..‰∏ÄÁõ¥ÂõûËΩ¶Âá∫Áé∞üëáÊèêÁ§∫‰ª£Ë°®ÊàêÂäü 12345678910111213141516Your identification has been saved in /Users/devil/.ssh/id_rsa. Your public key has been saved in /Users/devil/.ssh/id_rsa.pub. The key fingerprint is: SHA256:cBM85BXm3xnPFhFCmgFYhygVLZxGHGYgCKYo5ko0FPc devil@devildeMacBook-Pro.local The key&apos;s randomart image is: +---[RSA 2048]----+ |o+oo .*X@o*+.o o.| |=.. o.oXoB. + . .| |++ E+ =..o .. | |= . o . . . =.| | o S . o +| |o . | |. | | | | | +----[SHA256]-----+ ‰ºöÂú® ~/.ssh/ÁîüÊàê2‰∏™Êñá‰ª∂Ôºöid_rsaid_rsa.pubÂ∞Üid_rsa.pubÈáåÈù¢ÁöÑÂÜÖÂÆπÔºåüëá Êã∑Ë¥ùÂà∞gitLabÂØπÂ∫îÁöÑsettings/SSH KeyÈáå 123ssh-rsaAAAAB3NzaC1yc2EAAAABIwAAAQEAlgjiMw7AskxbvpQY9rmZPQxQBzh9laxFvbaini2EgmQkNsXBA9WJOXn2YBJauoiVsdUKBWA97avjsobrTxsCYvFr1yQQvTfTlbqlqGNIhQc/3HjTl2pIkClpDWvBrRN+jpyESS4MNbfOL1qjT4c/QhGvj6U6HrN6kUyn58oyyJpTzOLG74AZELJ2Led57QvTw1yJXZuAMWioR0A3BGd25fdocLX3ebux6ya8AsloOVYfsAqGlggrARe6FXjLfMH4a/nxaAdiDYVXU/Vr1ybK9P7SfyEDGJi3JtgiPUlA6vPxUCE+9IJPQaqqeqCGzrJ6G/XO7om1v9YLLG/H/ZN2tQ== test key ‰ªéÂÖ¨Âè∏Êê≠Âª∫ÁöÑgitLab‰∏äcloneÈ°πÁõÆÊó∂ÔºåÂêÑÁßçÂ∞¥Â∞¨ÂêÑÁßçÂùë 1„ÄÅÈááÁî®httpÁöÑÊñπÂºè‰∏ÄÁõ¥ÊèêÁ§∫ÔºåÁªèËøáÊü•ËØ¢Êó∂gitLabÁöÑÊúçÂä°Âô®ÁºìÂ≠òÂ§ßÂ∞èÁöÑÈôêÂà∂RPC failed; HTTP 504 curl 22 The requested URL returned error: 504 Gateway Time-out The remote end hung up unexpectedly 2„ÄÅÈááÁî®sshÁöÑÊñπÂºèÂàô‰∏ÄÁõ¥ÊèêÁ§∫ËæìÂÖ•ÂØÜÁ†ÅÔºå‰∏âÊ¨°‰πãÂêéÊèêÁ§∫Ê≤°ÊúâÊùÉÈôêÔºåÊúüÈó¥‰∏ÄÁõ¥ÊÄÄÁñësshÈÖçÁΩÆÈóÆÈ¢òÔºåÊúÄÁªàÂÆö‰ΩçÂà∞gitLabÊúçÂä°Áº∫Â∞ëÂüüÂêçËß£ÊûêÔºåÈúÄË¶ÅÊ∑ªÂä†hostsÊåáÂêëÂØπÂ∫îÁöÑipÂÜçÊ¨°cloneÁöÑÊó∂ÂÄô‰ºöÂú® /Áî®Êà∑/wangpo/.sshÁöÑÊñá‰ª∂Â§πÈáåÂ§ö‰∏Ä‰∏™know_hostsÁöÑÊñá‰ª∂ÔºåÈáåÈù¢ÂåÖÂê´Ê∑ªÂä†ÁöÑhost‰∏ªÊú∫ÔºåÁªà‰∫écloneÊàêÂäü 14. safari‰∏çËÉΩËß£Êûêhtml‰ª£Á†ÅÁ¨¨‰∏ÄÊ≠•Ôºöshift+command+TËÆ©‰ª£Á†Å‰ª•Á∫ØÊñáÊú¨ÊòæÁ§∫„ÄÇÔºà‰Ω†‰ºöÂèëÁé∞Á™óÂè£‰∏äÊñπÁöÑÊ†áÂ∞∫Á≠âÊ†èÁõÆÊ∂àÂ§±‰∫ÜÔºâ Á¨¨‰∫åÊ≠•ÔºöÊñáÊú¨ÁºñËæë &gt; ÂÅèÂ•ΩËÆæÁΩÆ‚Äî‚ÄîÂú®‚ÄúÊâìÂºÄÂíåÂ≠òÂÇ®‚ÄùÊ†èÁõÆ‰∏≠ÔºåÂãæ‰∏ä‚ÄúÂ∞ÜHTMLÊñá‰ª∂ÊòæÁ§∫‰∏∫HTML‰ª£Á†ÅËÄå‰∏çÊòæÁ§∫‰∏∫Ê†ºÂºèÂåñÁöÑÊñáÊú¨‚ÄùÔºåÂãæÊéâ‚ÄúÁªôÁ∫ØÊñáÊú¨Êñá‰ª∂Ê∑ªÂä†.txtÊâ©Â±ïÂêç‚Äù„ÄÇ Á¨¨‰∏âÊ≠•ÔºöÂ≠òÂÇ®Êñá‰ª∂„ÄÇËøôÊ†∑ÂæóÂà∞ÁöÑÊñá‰ª∂ÂèåÂáª‰ºöÂú®ÊµèËßàÂô®‰∏≠‰ª•ÁΩëÈ°µÊòæÁ§∫ÔºåÂè≥ÈîÆÈÄâÊã©‚ÄúÊñáÊú¨ÁºñËæëÔºàTextEditÔºâ‚ÄùÊâìÂºÄÊó∂Ôºå‰ºö‰ª•‰ª£Á†ÅÊ†ºÂºèÊòæÁ§∫Ôºå‰ªçÂèØÁªßÁª≠ÁºñËæë„ÄÇ 15. iOS crash Êó•ÂøóÂ†ÜÊ†àËß£Êûêhttps://mp.weixin.qq.com/s/6gyRe8EHIJzgutvQq01KEA]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ËÄóÁîµÈáè‰ºòÂåñ]]></title>
    <url>%2F2018%2F10%2F09%2F%E8%80%97%E7%94%B5%E9%87%8F%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[ËÄóÁîµÊ®°Âùó Â±èÂπï Ôºà‰∫ÆÂ±èÊó∂Èó¥Ôºâ CPU (Â§çÊùÇËøêÁÆó„ÄÅÊó†ÈôêÂæ™ÁéØÂØºËá¥CPUËøáËΩΩ) ÁΩëÁªú ÔºàÁΩëÁªúËØ∑Ê±Ç„ÄÅÊï∞ÊçÆ‰º†Ëæì„ÄÅÁΩëÁªúÂàáÊç¢„ÄÅÂ§ßÈáèËß£ÊûêÊï∞ÊçÆÁ≠âÔºâ GPS Camera ÁîµÈáè‰ºòÂåñÊúÄ‰Ω≥ÂÆûË∑µ ÁΩëÁªúÁõ∏ÂÖ≥ ÂèëËµ∑ÁΩëÁªúËØ∑Ê±ÇÊó∂Êú∫„ÄÇ‰∏öÂä°Âå∫ÂàÜÊòØÂê¶ÈúÄË¶ÅÂèäÊó∂ËøîÂõûÔºà‰∏ãÊãâÔºâÔºåËøòÊòØÂèØ‰ª•Âª∂ËøüÊâßË°å„ÄÇ ÂáèÂ∞ëÁΩëÁªúË¢´ÊøÄÊ¥ªÊó∂Èó¥ÂíåÊ¨°Êï∞„ÄÇ ÈÅøÂÖçÂõ∫ÂÆöÈ¢ëÁπÅÁöÑËØ∑Ê±ÇÔºåËøîÂõûÊï∞ÊçÆÁõ∏ÂêåÊàñËÄÖÊó†Êï∞ÊçÆÊó∂ÔºåÊé®Ëøü‰∏ãÊ¨°ËØ∑Ê±ÇÊó∂Èó¥„ÄÇ ÊâπÂ§ÑÁêÜÔºåÂêàÂπ∂Âêå‰∏Ä‰∏öÂä°ÁöÑÂ§öÊ¨°ËØ∑Ê±Ç„ÄÇ È¢ÑÂ§ÑÁêÜÔºåÊèêÂâçËØ∑Ê±ÇÊüê‰∫õÊï∞ÊçÆÔºåÈò≤Ê≠¢ÂêéÁª≠È¢ëÁπÅËØ∑Ê±Ç„ÄÇ Êï∞ÊçÆÂ§ÑÁêÜ ÁΩëÁªúÊï∞ÊçÆ‰º†ËæìÂâçÂéãÁº©Â§ÑÁêÜ Â§ßÊï∞ÊçÆ‰∏ãËΩΩ‰ΩøÁî® GZIP ÊñπÂºè È´òÊïàÊï∞ÊçÆÊ†ºÂºèJSON&amp;Protobuf ÊÖéÁî®ËΩÆËØ¢ÊñπÂºèÊâßË°åÁΩëÁªúËØ∑Ê±ÇÔºåiOSÈááÁî®APNs ÂáèÂ∞ëÊé®ÈÄÅÊ∂àÊÅØÊ¨°Êï∞ÂíåÈ¢ëÁéá Â§ÑÁêÜÂÖ∑‰Ωì‰∏öÂä°Ââç‰ºòÂÖàÂà§Êñ≠ÁΩëÁªúÁä∂ÊÄÅ„ÄÇÁßªÂä®ÁΩëÁªú‰∏ãÔºåÂáèÂ∞ëÊï∞ÊçÆ‰º†ËæìÊàñÈôç‰ΩéÈ¢ëÁéáÔºàwifi‰∏ãÁΩëÁªú‰º†Ëæì ËÄóÁîµËøú‰Ωé‰∫éÁßªÂä®ÁΩëÁªúÔºâÔºõÁΩëÁªú‰∏çÂèØÁî®‰∏ãÔºåÂ∞ΩÊó©ËøõÂÖ•ÁΩëÁªúÂºÇÂ∏∏ÈÄªËæëÔºåÈÅøÂÖç‰∏çÂøÖË¶ÅÁöÑËøêÁÆó ÁïåÈù¢Áõ∏ÂÖ≥ Á¶ªÂºÄÈ°µÈù¢ÂÅúÊ≠¢ÂØπÂ∫îËÄóÁîµÊ¥ªÂä® ËøõÂÖ•ÂêéÂè∞ÔºåÁ¶ÅÊ≠¢ÂºÇÂ∏∏Ê∂àËÄó ÂÆö‰ΩçÁõ∏ÂÖ≥ ÂèäÊó∂ÂÖ≥Èó≠GPS,ÂáèÂ∞ëÊõ¥Êñ∞È¢ëÁéáÔºåÊ†πÊçÆÂÆûÈôÖÊÉÖÂÜµÂàáÊç¢GPSÂíåÁΩëÁªúÔºå‰∏çË¶Å‰ªª‰ΩïÊó∂ÂÄôÈÉΩÂêåÊó∂‰ΩøÁî®„ÄÇ ÂÆö‰ΩçË¶ÅÊ±Ç‰∏çÈ´òÁöÑ‰∏öÂä°Âú∫ÊôØÔºåÁΩëÁªúÂÆö‰Ωç‰ª£ÊõøGPS ÊÖéÁî®ÊåÅÁª≠ÂÆö‰ΩçÔºå‰ΩøÁî®‰∏ÄÊ¨°ÂÆö‰ΩçÊé•Âè£Âç≥ÂèØ ÊÖéÁî®Ë¢´Âä®ÂÆö‰Ωç„ÄÇ ÁîµÊ±†Áä∂ÊÄÅ Â§ÑÁêÜËÄóÊó∂ËÄóÁîµÂπ∂‰∏î‰∏çÁ¥ßÊÄ•‰ªªÂä°Êó∂ÔºàÂ¶ÇÊõ¥Êñ∞ÂåÖÔºâÔºå‰ºòÂÖàÂà§Êñ≠ÁîµÊ±†ÁîµÈáèÔºåÂèØ‰ª•Âª∂ËøüÂà∞ÁîµÈáèË∂≥Êó∂ÊâßË°å ÁõëÂê¨ÂÖÖÁîµÁä∂ÊÄÅÔºåÊù•Â§ÑÁêÜÁâπÂÆö‰∏öÂä°ÔºàÊõ¥Êñ∞ÂåÖÔºålogÊó•Âøó‰∏ä‰º†„ÄÅÁî®Êà∑Êï∞ÊçÆÂêåÊ≠•ÔºâÔºåÊèêÈ´òÁî®Êà∑‰ΩìÈ™å Ê∂àÊÅØÂπøÊí≠ ÁÅµÊ¥ªÊéßÂà∂ÊòØÂê¶ÁõëÂê¨ÂπøÊí≠Ê∂àÊÅØ H5ÁïåÈù¢]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ÊÄßËÉΩ‰ºòÂåñ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Èü≥ËßÜÈ¢ë‰πãËßÜÈ¢ëÈááÈõÜÔºàGPUImageÔºâËøáÁ®ã]]></title>
    <url>%2F2018%2F08%2F29%2F%E9%9F%B3%E8%A7%86%E9%A2%91%E4%B9%8B%E8%A7%86%E9%A2%91%E9%87%87%E9%9B%86%EF%BC%88GPUImage%EF%BC%89%E8%BF%87%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425262728293031GPUImageVideoCamera *videoCamera;//ÈááÈõÜÂô®GPUImageFilter *filter;//Êª§ÈïúÔºàÂ¶ÇÊûú‰ΩøÁî®ÁæéÈ¢úÂäüËÉΩÔºåÊõøÊç¢ÁæéÈ¢úÁõ∏ÂÖ≥Êª§ÈïúÔºåÂ¶ÇGPUImageBeautyFilterÔºâGPUImageFilter *output;//ËæìÂá∫GPUImageView *gpuImageView;//OpenGL ÈááÈõÜÁªòÂà∂GPUImageAlphaBlendFilter *blendFilter;//Ê∑∑ÂêàÊª§ÈïúGPUImageUIElement *uiElementInput;//Ë¥¥ÂõæÊ∞¥Âç∞ËæìÂÖ•UIView *waterMarkView;//Ê∞¥Âç∞GPUImageMovieWriter *movieWriter;//‰øùÂ≠òÊú¨Âú∞/*‰º™‰ª£Á†Å*/[videoCamera addTarget:filter];if(/*Ê∑ªÂä†Ê∞¥Âç∞*/)&#123;[filter addTarget:blendFilter];[uiElementInput addTarget:blendFilter];[blendFilter addTarget:gpuImageView];[blendFilter addTarget:output];[uiElementInput update];&#125; else&#123;[filter addTarget:output];&#125;[output addTarget:gpuImageView];//Êú¨Âú∞ÊòæÁ§∫if(/*‰øùÂ≠òÊú¨Âú∞*/)&#123;[output addTarget:movieWriter];&#125;[output setFrameProcessingCompletionBlock:^(GPUImageOutput *output, CMTime time) &#123;//Â§ÑÁêÜÈááÈõÜÊï∞ÊçÆCVPixelBufferRef pixelBuffer = [output.framebufferForOutput pixelBuffer];&#125;];]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>GPUImage</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Èü≥ËßÜÈ¢ë‰πãÈü≥È¢ëÈááÈõÜAudio Unit]]></title>
    <url>%2F2018%2F08%2F28%2F%E9%9F%B3%E8%A7%86%E9%A2%91%E4%B9%8B%E9%9F%B3%E9%A2%91%E9%87%87%E9%9B%86Audio-Unit%2F</url>
    <content type="text"><![CDATA[Èü≥È¢ëÊäÄÊúØÊ†àÊâÄÊúâ iOS Èü≥È¢ëÊäÄÊúØÈÉΩÊòØÂü∫‰∫é audio units„ÄÇÊ≠§Â§ÑÊòæÁ§∫ÁöÑÊõ¥È´òÁ∫ßÂà´ÁöÑÊäÄÊúØÔºåÂ¶Ç Media PlayerÔºåAV FoundationÔºåOpenALÔºåAudioToolboxÔºåÊòØÂØπ audio units ÁöÑÂ∞ÅË£ÖÔºå‰∏∫ÁâπÂÆöÁöÑ‰ªªÂä°Êèê‰æõ‰∏ìÁî®‰∏îÁÆÄÂåñÁöÑ API„ÄÇ ÂΩì‰Ω†ÈúÄË¶ÅÂÆûÁé∞‰ª•‰∏ãÈúÄÊ±ÇÊó∂Ôºå‰∏ç‰ΩøÁî®È´òÁ∫ß APIÔºåÁõ¥Êé•‰ΩøÁî® audio units ‰ΩéÂª∂Êó∂Èü≥È¢ëI/OÔºå‰æãÂ¶Ç VoIP Â∫îÁî® Â§öË∑ØÂ£∞Èü≥ÁöÑÂêàÊàêÂõûÊîæÔºå‰æãÂ¶ÇÈü≥‰πêÊ∏∏ÊàèÊàñÂêàÊàê‰πêÂô® ‰ΩøÁî®ÁâπÂÆöÁöÑ audio unit ÁâπÂæÅÔºå‰æãÂ¶ÇÂõûÂ£∞Ê∂àÈô§ÔºåÊ∑∑Èü≥ÔºåÂùáË°°Âô®„ÄÅÊ∑∑ÂìçÁ≠â ÈúÄË¶ÅÂõæÁä∂ÁªìÊûÑÊù•Â§ÑÁêÜÈü≥È¢ëÔºåÂèØÂ∞ÜÈü≥È¢ëÂ§ÑÁêÜÊ®°ÂùóÁªÑË£ÖÂà∞ÂõæÁä∂ÁªìÊûÑ‰∏≠„ÄÇ Audio UnitÂ∑•‰ΩúÊñπÂºè:Â∫îÁî®Á®ãÂ∫èÈÄöËøá‰∏Ä‰∏™ÊàñËÄÖÂ§ö‰∏™ÂõûË∞ÉÂáΩÊï∞Â∞ÜÈü≥È¢ëÂèëÈÄÅÂà∞ graph ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™Èü≥È¢ëÂçïÂÖÉÔºåÂπ∂ÂØπÊØè‰∏Ä‰∏™Èü≥È¢ëÂçïÂÖÉËøõË°åÂçïÁã¨ÊéßÂà∂„ÄÇÂú® I/O unit ÁöÑËæìÂá∫(audio processing graph ‰∏≠ÊúÄÂêé‰∏Ä‰∏™ audio unit)Áõ¥Êé•ËøûÊé•Âà∞ËæìÂá∫Á°¨‰ª∂ Audio Unit ÂàÜÁ±ª1234567891011121314151. Effect Units kAudioUnitType_Effect ‰∏ªË¶ÅÊèê‰æõÂ£∞Èü≥ÁâπÊïàÂ§ÑÁêÜ ÔºàÂùáË°°„ÄÅÂéãÁº©„ÄÅÊ∑∑Âìç...Ôºâ2. Mixer Units kAudioUnitType_Mixer Êèê‰æõMixÂ§öË∑ØÂ£∞Èü≥ÁöÑÂäüËÉΩ3. I/O Units kAudioUnitType_Output I/OÈááÈõÜÈü≥È¢ë‰∏éÊí≠ÊîæÈü≥È¢ëÂäüËÉΩ4. Format Converter Units kAudioUnitType_FormatConverter Ê†ºÂºèËΩ¨Êç¢ eg:ÈááÊ†∑Ê†ºÂºèFloatËΩ¨SInt16„ÄÅ‰∫§ÈîôÊàñÂπ≥Èì∫„ÄÅÂçïÂèåÂ£∞ÈÅìÁöÑËΩ¨Êç¢5. Generator Units kAudioUnitType_Generator Êèê‰æõÊí≠ÊîæÂô®ÂäüËÉΩ Audio Units Â±ûÊÄßËÆæÁΩÆÂ±ûÊÄßÔºåÂèØ‰ª•‰ΩøÁî®ÂáΩÊï∞ AudioUnitSetProperty kAudioOutputUnitProperty_EnableIO ÂêØÁî®ÊàñÁ¶ÅÊ≠¢ I/OÔºåÈªòËÆ§ËæìÂá∫ÂºÄÂêØÔºåËæìÂÖ•Á¶ÅÊ≠¢„ÄÇ kAudioUnitProperty_ElementCount ÈÖçÁΩÆÂÖÉÁ¥†‰∏™Êï∞ kAudioUnitProperty_MaximumFramesPerSlice ËÆæÁΩÆ audio unit ÁöÑÊúÄÂ§ßÂ∏ßÊï∞ kAudioUnitProperty_StreamFormat ÊåáÂÆöËæìÂÖ• audio unit ËæìÂÖ•ËæìÂá∫ÂÖÉÁ¥†ÁöÑÊï∞ÊçÆÊ†ºÂºè Audio UnitsÁöÑÂõûË∞ÉÂáΩÊï∞ÔºàAURenderCallbackÔºâ123456static OSStatus MyAURenderCallBack(void *inRefCon,AudioUnitRenderActionFlags *ioActionFlags,const AudioTimeStamp *inTimeStamp,UInt32 inBusNumber,UInt32 inNumberFrames,AudioBufferList *ioData); inRefConÔºåÂèÇÊï∞ÊåáÂêëÂõûË∞ÉÈôÑÂä†Âà∞ audio unit ËæìÂÖ•Êó∂ÊåáÂÆöÁöÑÁºñÁ®ã‰∏ä‰∏ãÊñá ioActionFlagsÔºåÂèÇÊï∞ÂÖÅËÆ∏Êèê‰æõÊèêÁ§∫ÂΩìÊ≤°ÊúâÈü≥È¢ëÊï∞ÊçÆÂ§ÑÁêÜÊó∂Ôºå‰æãÂ¶ÇÂΩì‰Ω†ÁöÑÂ∫îÁî®Á®ãÂ∫èÊòØÂêàÊàêÂêâ‰ªñÔºåÁî®Êà∑ÂΩìÈù¢Ê≤°ÊúâÊí≠ÊîæÔºåËØ∑ÊâßË°åÊ≠§Êìç‰Ωú„ÄÇÂΩì‰Ω†ÊÉ≥Ë¶ÅËæìÂá∫ÈùôÈü≥ÔºåÂèØ‰ª•Âú®ÂõûË∞É‰∏ª‰Ωì‰∏≠‰ΩøÁî®Â¶Ç‰∏ãËØ≠Âè•Ôºö*ioActionFlags |= kAudioUnitRenderAction_OutputIsSilenceÔºåÂπ∂‰∏î‰Ω†ÂøÖÈ°ªÊòéÁ°ÆÂú∞Â∞Ü ioData ÂèÇÊï∞ÊåáÂêëÁöÑÁºìÂÜ≤Âå∫ËÆæÁΩÆ‰∏∫0„ÄÇ inTimeStampÔºåÂõûË∞ÉÂáΩÊï∞Ë¢´Ëß¶ÂèëÊó∂Èó¥ÔºåÂåÖÂê´‰∏Ä‰∏™ AudioTimeStamp ÁªìÊûÑ‰Ωì„ÄÇ inBusNumberÔºåÂèÇÊï∞ÊåáÁ§∫Ë∞ÉÁî®ÂõûË∞ÉÁöÑÈü≥È¢ëÂçïÂÖÉÊÄªÁ∫ø inNumberFramesÔºåÂΩìÂâçË∞ÉÁî®ÁöÑÈü≥È¢ëÈááÊ†∑Êï∞ ioDataÔºåÊåáÂêëÈü≥È¢ëÊï∞ÊçÆÁºìÂ≠òÂå∫ Audio Units ÁªìÊûÑÂõæ I/O Units ÁöÑÂü∫Êú¨ÁâπÊÄß Input element Âíå Output element ÈÉΩÊòØ I/O unit ÁöÑ‰∏ÄÈÉ®ÂàÜÔºåÂèØ‰ª•Â∞ÜÂÆÉ‰ª¨ËßÜ‰∏∫‰∏Ä‰∏™Áã¨Á´ãÁöÑ‰∏™‰ΩìÔºåÂçïÁã¨ÂêØÂä®ÊàñÁ¶ÅÊ≠¢ÊØè‰∏Ä‰∏™ ElementÔºåÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåElement 1 Á¶ÅÁî®ÔºåElement 0 ÂºÄÂêØ„ÄÇ Èü≥È¢ëËæìÂÖ•Á°¨‰ª∂È∫¶ÂÖãÈ£éÁõ¥Êé•ËøûÁùÄ Element 1Ôºå Element 1 ÁöÑ Input scope ÂØπ‰Ω†ÊòØ‰∏çÂèØËßÅÁöÑÔºå‰Ω†È¶ñÊ¨°ËÆøÈóÆÁ°¨‰ª∂ËæìÂÖ•ÁöÑÈü≥È¢ëÊï∞ÊçÆÊòØ‰Ωç‰∫é Element 1 ÁöÑ Output scope„ÄÇ Èü≥È¢ëËæìÂá∫Á°¨‰ª∂Êâ¨Â£∞Âô®Áõ¥Êé•ËøûÁùÄ Element 0ÔºåElement 0 ÁöÑ Output scope ÂØπ‰Ω†ÊòØ‰∏çÂèØËßÅÁöÑÔºåÊï∞ÊçÆ‰ªé Element 1 ÁöÑ Output scope ‰º†ÈÄíÂà∞ Element 0 ÁöÑ Input scope„ÄÇ ÊØè‰∏Ä‰∏™ ElementÈÉΩÊúâËá™Â∑±ÁöÑ input scope Âíå output scopeÔºåÂΩìÊèèËø∞ I/O unit ÁöÑÊó∂ÂÄôÂèØËÉΩ‰ºöÊúâÂõ∞ÊÉëÔºåÁõ∏ÂΩì‰∫éËøôÊ†∑ÊèèËø∞Ôºå‰Ω†Êî∂Âà∞Êî∂ÊçÆÊù•Ëá™ input element ÁöÑ output scopeÔºåÂèëÈÄÅÊï∞ÊçÆÂà∞ output element ÁöÑ input scope„ÄÇI/O unit ÊòØÂîØ‰∏ÄËÉΩÂ§üÂú® audio processing graph ‰∏≠ÂêØÂä®ÂíåÂÅúÊ≠¢Èü≥È¢ëÊµÅÁöÑ audio unit„ÄÇI/O unit Ë¥üË¥£Âú®Èü≥È¢ëÂçïÂÖÉAPP‰∏≠ÁöÑÈü≥È¢ëÊµÅ„ÄÇ ÊûÑÂª∫Audio UnitÔºà‰ª•Remote I/O Unit‰∏∫‰æãÂ≠êÔºâÁõ¥Êí≠‰∏≠‰∏ÄËà¨‰ΩøÁî®Remote I/O unitÊù•ËøõË°åÈááÈõÜÂ∑•‰Ωú 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071#define kOutputBus 0#define kInputBus 1//ÈÖçÁΩÆ‰ºöËØùÁõ∏ÂÖ≥AVAudioSession *session = [AVAudioSession sharedInstance];[session setPreferredSampleRate:44100 error:nil];[session setCategory:AVAudioSessionCategoryPlayAndRecord withOptions:AVAudioSessionCategoryOptionDefaultToSpeaker | AVAudioSessionCategoryOptionInterruptSpokenAudioAndMixWithOthers error:nil];[session setActive:YES error:nil];// Describe audio componentAudioComponentDescription acd;acd.componentType = kAudioUnitType_Output;acd.componentSubType = kAudioUnitSubType_RemoteIO;acd.componentManufacturer = kAudioUnitManufacturer_Apple;acd.componentFlags = 0;acd.componentFlagsMask = 0;// Get audio unitsAudioComponent component = AudioComponentFindNext(NULL, &amp;acd);// Get audio unitsAudioComponentInstanceNew(component, &amp;_componetInstance);// ËøûÊé•È∫¶ÂÖãÈ£éÂΩïÈü≥UInt32 flagOne = 1;AudioUnitSetProperty(self.componetInstance, kAudioOutputUnitProperty_EnableIO, kAudioUnitScope_Input, kInputBus, &amp;flagOne, sizeof(flagOne));// ËøûÊé•Êâ¨Â£∞Âô®Êí≠ÊîæAudioUnitSetProperty(self.componetInstance, kAudioOutputUnitProperty_EnableIO, kAudioUnitScope_Output, kOutputBus, &amp;flagOne, sizeof(flagOne));//ÈÖçÁΩÆÈ∫¶ÂÖãÈ£éËæìÂÖ•ÁöÑÂèÇÊï∞ASBDAudioStreamBasicDescription desc = &#123;0&#125;;desc.mSampleRate = 44100;//ÈááÊ†∑Áéádesc.mFormatID = kAudioFormatLinearPCM;//ÁºñÁ†ÅÊ†ºÂºèdesc.mFormatFlags = kAudioFormatFlagIsSignedInteger | kAudioFormatFlagsNativeEndian | kAudioFormatFlagIsPacked;//Â£∞Èü≥Ê†ºÂºèdesc.mChannelsPerFrame = 2;// ÊØè‰∏™FrameÊúâÂá†‰∏™channeldesc.mFramesPerPacket = 1;//ÊØè‰∏™PacketÊúâÂá†Framedesc.mBitsPerChannel = 16;desc.mBytesPerFrame = desc.mBitsPerChannel / 8 * desc.mChannelsPerFrame;desc.mBytesPerPacket = desc.mBytesPerFrame * desc.mFramesPerPacket;//ËÆæÁΩÆÁªôËæìÂÖ•Á´Ø ÈÖçÁΩÆÈ∫¶ÂÖãÈ£éËæìÂá∫ÁöÑÊï∞ÊçÆÊòØ‰ªÄ‰πàÊ†ºÂºèAudioUnitSetProperty(self.componetInstance, kAudioUnitProperty_StreamFormat, kAudioUnitScope_Output, kInputBus, &amp;desc, sizeof(desc));//ËÆæÁΩÆÁªôËæìÂá∫Á´Ø ÈÖçÁΩÆÊâ¨Â£∞Âô®ËæìÂ¶ÇÁöÑÊï∞ÊçÆÊòØ‰ªÄ‰πàÊ†ºÂºèAudioUnitSetProperty(self.componetInstance, kAudioUnitProperty_StreamFormat, kAudioUnitScope_Input, kOutputBus, &amp;desc, sizeof(desc));// Êï∞ÊçÆÂõûË∞ÉAURenderCallbackStruct cb;cb.inputProcRefCon = (__bridge void *)(self);cb.inputProc = handleInputBuffer;AudioUnitSetProperty(self.componetInstance, kAudioOutputUnitProperty_SetInputCallback, kAudioUnitScope_Global, kInputBus, &amp;cb, sizeof(cb));/*// Set output callbackcb.inputProcRefCon = (__bridge void *)(self);cb.inputProc = handleOutputBuffer;AudioUnitSetProperty(self.componetInstance, kAudioOutputUnitProperty_SetInputCallback, kAudioUnitScope_Global, kOutputBus, &amp;cb, sizeof(cb));*/// Initialisestatus = AudioUnitInitialize(self.componetInstance);if (noErr != status) &#123;[self handleAudioComponentCreationFailure];&#125;]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>AudioUnit</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MACÊê≠Âª∫Âü∫‰∫éNginxÁöÑRTMPÊµÅÂ™í‰ΩìÊúçÂä°Âô®]]></title>
    <url>%2F2018%2F08%2F23%2FMAC%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8ENginx%E7%9A%84RTMP%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[ÂÖãÈöÜnginxÂà∞Êú¨Âú∞ bogon:~ wangpo$ brew tap denji/homebrew-nginx ÂÆâË£Önginx bogon:~ wangpo$ brew install nginx-full --with-rtmp-module ÂêØÂä®nginxÊúçÂä° bogon:~ wangpo$ nginx Âú®ÊµèËßàÂô®ÈáåÊâìÂºÄhttp://localhost:8080Â¶ÇÊûúÂá∫Áé∞Welcome to nginx!, ÂàôË°®Á§∫ÂÆâË£ÖÊàêÂäü Êü•ÁúãÂÆâË£Ö‰ø°ÊÅØ bogon:~ wangpo$ brew info nginx -full nginxÂÆâË£ÖÊâÄÂú®‰ΩçÁΩÆ/usr/local/opt/nginx-full/bin/nginx nginxÈÖçÁΩÆÊñá‰ª∂ÊâÄÂú®‰ΩçÁΩÆ/usr/local/etc/nginx/nginx.conf ÈÖçÁΩÆrtmp 12345678910111213141516171819202122#ÊîØÊåÅrtmpÂçèËÆÆÊé®ÊµÅrtmp &#123;server &#123;listen 1935;#Áõ¥Êí≠ÊµÅÈÖçÁΩÆapplication rtmplive &#123;live on;# ‰∏∫rtmpÂºïÊìéËÆæÁΩÆÊúÄÂ§ßËøûÊé•Êï∞„ÄÇÈªòËÆ§offmax_connections 1024;&#125;#HLSÂçèËÆÆÊîØÊåÅapplication hls&#123;live on;hls on;hls_path /usr/local/var/www/hls;hls_fragment 1s;&#125;&#125;&#125; ÈáçÂêØ bogon:~ wangpo$ nginx -s reload Êé®RTMPÊµÅ ffmpeg -re -i /Users/wangpo/Desktop/test.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://localhost:1935/rtmplive/room rtmpÊí≠ÊîæÂú∞ÂùÄrtmp://localhost:1935/rtmplive/room Êé®HLSÊµÅ ffmpeg -re -i /Users/wangpo/Desktop/test.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://localhost:1935/hls/room hlsÊí≠ÊîæÂú∞ÂùÄhttp://localhost:8080/hls/room.m3u8 httpÁÇπÊí≠ÁÇπÊí≠ËßÜÈ¢ëÊîæÂÖ•/usr/local/var/wwwÊñá‰ª∂Â§π ÁÇπÊí≠Êí≠ÊîæÂú∞ÂùÄÔºöhttp://localhost:8080/test.mp4 ÂÆâË£ÖffmepgÂ∑•ÂÖ∑(ÁøªÂ¢ô)bogon:~ wangpo$ brew install ffmpeg Âá∫Áé∞ üç∫ /usr/local/Cellar/ffmpeg/4.0.2: 246 files, 49.7MB Ë°®Á§∫ÂÆâË£ÖÊàêÂäü]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>RTMP</tag>
        <tag>HLS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Objective-C Associated Objects ÁöÑÂÆûÁé∞ÂéüÁêÜ]]></title>
    <url>%2F2018%2F08%2F17%2FObjective-C-Associated-Objects-%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[Áõ∏ÂÖ≥ÂáΩÊï∞123456//Áî®‰∫éÁªôÂØπË±°Ê∑ªÂä†ÂÖ≥ËÅîÂØπË±°Ôºå‰º†ÂÖ• nil ÂàôÂèØ‰ª•ÁßªÈô§Â∑≤ÊúâÁöÑÂÖ≥ËÅîÂØπË±°Ôºõ* void objc_setAssociatedObject(id object, const void *key, id value, objc_AssociationPolicy policy);//Áî®‰∫éËé∑ÂèñÂÖ≥ËÅîÂØπË±°Ôºõ* id objc_getAssociatedObject(id object, const void *key);//Áî®‰∫éÁßªÈô§‰∏Ä‰∏™ÂØπË±°ÁöÑÊâÄÊúâÂÖ≥ËÅîÂØπË±°* void objc_removeAssociatedObjects(id object); key ÂÄºkey ÂÄºÂøÖÈ°ª‰øùËØÅÊòØ‰∏Ä‰∏™ÂØπË±°Á∫ßÂà´ÁöÑÂîØ‰∏ÄÂ∏∏Èáè„ÄÇ‰ª•‰∏ã‰∏âÁßçÊé®ËçêÁöÑ key ÂÄºÔºö Â£∞Êòé static char kAssociatedObjectKey; Ôºå‰ΩøÁî® &amp;kAssociatedObjectKey ‰Ωú‰∏∫ key ÂÄº; Â£∞Êòé static void *kAssociatedObjectKey = &kAssociatedObjectKey; Ôºå‰ΩøÁî® kAssociatedObjectKey ‰Ωú‰∏∫ key ÂÄºÔºõ Áî® selector Ôºå‰ΩøÁî® getter ÊñπÊ≥ïÁöÑÂêçÁß∞‰Ωú‰∏∫ key ÂÄº„ÄÇ ÂÖ≥ËÅîÁ≠ñÁï•OBJC_ASSOCIATION_ASSIGN Âº±ÂºïÁî®ÂÖ≥ËÅîÂØπË±° OBJC_ASSOCIATION_RETAIN_NONATOMIC Âº∫ÂºïÁî®ÂÖ≥ËÅîÂØπË±°Ôºå‰∏î‰∏∫ÈùûÂéüÂ≠êÊìç‰Ωú OBJC_ASSOCIATION_COPY_NONATOMIC Â§çÂà∂ÂÖ≥ËÅîÂØπË±°Ôºå‰∏î‰∏∫ÈùûÂéüÂ≠êÊìç‰Ωú OBJC_ASSOCIATION_RETAIN Âº∫ÂºïÁî®ÂÖ≥ËÅîÂØπË±°Ôºå‰∏î‰∏∫ÂéüÂ≠êÊìç‰Ωú OBJC_ASSOCIATION_COPY Â§çÂà∂ÂÖ≥ËÅîÂØπË±°Ôºå‰∏î‰∏∫ÂéüÂ≠êÊìç‰Ωú ÂÖ≥ËÅîÂØπË±°‰ªÄ‰πàÊó∂ÂÄô‰ºöË¢´ÈáäÊîæ:12345678910111213141516171819202122232425262728293031323334353637@interface ViewController (AssociatedObjects)@property (assign, nonatomic) NSString *associatedObject_assign;@property (strong, nonatomic) NSString *associatedObject_retain;@property (copy, nonatomic) NSString *associatedObject_copy;@end@implementation ViewController (AssociatedObjects)//- (NSString *)associatedObject_assign &#123;return objc_getAssociatedObject(self, _cmd);&#125;- (void)setAssociatedObject_assign:(NSString *)associatedObject_assign &#123;objc_setAssociatedObject(self, @selector(associatedObject_assign), associatedObject_assign, OBJC_ASSOCIATION_ASSIGN);&#125;//- (NSString *)associatedObject_retain &#123;return objc_getAssociatedObject(self, _cmd);&#125;- (void)setAssociatedObject_retain:(NSString *)associatedObject_retain &#123;objc_setAssociatedObject(self, @selector(associatedObject_retain), associatedObject_retain, OBJC_ASSOCIATION_RETAIN_NONATOMIC);&#125;//- (NSString *)associatedObject_copy &#123;return objc_getAssociatedObject(self, _cmd);&#125;- (void)setAssociatedObject_copy:(NSString *)associatedObject_copy &#123;objc_setAssociatedObject(self, @selector(associatedObject_copy), associatedObject_copy, OBJC_ASSOCIATION_COPY_NONATOMIC);&#125;@end Âú® ViewController+AssociatedObjects.h ‰∏≠Â£∞Êòé‰∫Ü‰∏â‰∏™Â±ûÊÄßÔºå OBJC_ASSOCIATION_ASSIGN „ÄÅOBJC_ASSOCIATION_RETAIN_NONATOMIC „ÄÅOBJC_ASSOCIATION_COPY_NONATOMIC ‰∏âÁßçÂÖ≥ËÅîÁ≠ñÁï•‰∏∫Ëøô‰∏â‰∏™Â±ûÊÄßÊ∑ªÂä†‚ÄúÂÆû‰æãÂèòÈáè‚Äù„ÄÇ 12345678910111213141516171819202122232425__weak NSString *string_weak_assign = nil;__weak NSString *string_weak_retain = nil;__weak NSString *string_weak_copy = nil;@implementation ViewController- (void)viewDidLoad &#123;[super viewDidLoad];self.associatedObject_assign = [NSString stringWithFormat:@&quot;leichunfeng1&quot;];self.associatedObject_retain = [NSString stringWithFormat:@&quot;leichunfeng2&quot;];self.associatedObject_copy = [NSString stringWithFormat:@&quot;leichunfeng3&quot;];string_weak_assign = self.associatedObject_assign;string_weak_retain = self.associatedObject_retain;string_weak_copy = self.associatedObject_copy;&#125;- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event &#123;// NSLog(@&quot;self.associatedObject_assign: %@&quot;, self.associatedObject_assign); // Will CrashNSLog(@&quot;self.associatedObject_retain: %@&quot;, self.associatedObject_retain);NSLog(@&quot;self.associatedObject_copy: %@&quot;, self.associatedObject_copy);&#125;@end Âú® ViewController ÁöÑ viewDidLoad ÊñπÊ≥ï‰∏≠ÔºåÊàë‰ª¨ÂØπ‰∏â‰∏™Â±ûÊÄßËøõË°å‰∫ÜËµãÂÄºÔºåÂπ∂Â£∞Êòé‰∫Ü‰∏â‰∏™ÂÖ®Â±ÄÁöÑ __weak ÂèòÈáèÊù•ËßÇÂØüÁõ∏Â∫îÂØπË±°ÁöÑÈáäÊîæÊó∂Êú∫„ÄÇÊ≠§Â§ñÔºåÊàë‰ª¨ÈáçÂÜô‰∫Ü touchesBegan:withEvent: ÊñπÊ≥ïÔºåÂú®ÊñπÊ≥ï‰∏≠ÂàÜÂà´ÊâìÂç∞‰∫ÜËøô‰∏â‰∏™Â±ûÊÄßÁöÑÂΩìÂâçÂÄº„ÄÇÂú®ÁªßÁª≠ÈòÖËØª‰∏ãÈù¢Á´†ËäÇÂâçÔºåÂª∫ËÆÆËØªËÄÖÂÖàËá™Ë°åÊÄùËÄÉ‰∏Ä‰∏ã self.associatedObject_assign „ÄÅself.associatedObject_retain Âíå self.associatedObject_copy ÊåáÂêëÁöÑÂØπË±°ÂàÜÂà´‰ºöÂú®‰ªÄ‰πàÊó∂ÂÄôË¢´ÈáäÊîæÔºå‰ª•Âä†Ê∑±ÁêÜËß£„ÄÇ ÂÆûÈ™åÊàë‰ª¨ÂÖàÂú® viewDidLoad ÊñπÊ≥ïÁöÑÁ¨¨ 28 Ë°åÊâì‰∏äÊñ≠ÁÇπÔºåÁÑ∂ÂêéËøêË°åÁ®ãÂ∫èÔºåÁÇπÂáªÂØºËà™Ê†èÂè≥‰∏äËßíÁöÑÊåâÈíÆ PushÂà∞ ViewController ÁïåÈù¢ÔºåÁ®ãÂ∫èÂ∞ÜÂÅúÂú®Êñ≠ÁÇπÂ§Ñ„ÄÇÊé•ÁùÄÔºåÊàë‰ª¨‰ΩøÁî® lldb ÁöÑ watchpoint ÂëΩ‰ª§Êù•ËÆæÁΩÆËßÇÂØüÁÇπÔºåËßÇÂØüÂÖ®Â±ÄÂèòÈáè string_weak_assign „ÄÅstring_weak_retain Âíå string_weak_copy ÁöÑÂÄºÁöÑÂèòÂåñ„ÄÇÊ≠£Á°ÆËÆæÁΩÆÂ•ΩËßÇÂØüÁÇπÂêéÔºåÂ∞Ü‰ºöÂú® console ‰∏≠ÁúãÂà∞Â¶Ç‰∏ãÁöÑÁ±ª‰ººËæìÂá∫ÔºöÔøº ÁÇπÂáªÁªßÁª≠ËøêË°åÊåâÈíÆÔºåÊúâ‰∏Ä‰∏™ËßÇÂØüÁÇπÂ∞ÜË¢´ÂëΩ‰∏≠„ÄÇÊàë‰ª¨ÂÖàÊü•Áúã console ‰∏≠ÁöÑËæìÂá∫ÔºåÈÄöËøáÂ∞ÜËøô‰∏ÄÊ≠•ÊâìÂç∞ÁöÑ old value Âíå‰∏ä‰∏ÄÊ≠•ÁöÑ new value ËøõË°åÂØπÊØîÔºåÊàë‰ª¨ÂèØ‰ª•Áü•ÈÅìÊú¨Ê¨°ÂëΩ‰∏≠ÁöÑËßÇÂØüÁÇπÊòØ string_weak_assign Ôºåstring_weak_assign ÁöÑÂÄºÂèòÊàê‰∫Ü 0x0000000000000000 Ôºå‰πüÂ∞±ÊòØ nil „ÄÇÊç¢Âè•ËØùËØ¥ self.associatedObject_assign ÊåáÂêëÁöÑÂØπË±°Â∑≤ÁªèË¢´ÈáäÊîæ‰∫ÜÔºåËÄåÈÄöËøáÊü•ÁúãÂ∑¶‰æßË∞ÉÁî®Ê†àÊàë‰ª¨ÂèØ‰ª•Áü•ÈÅìÔºåËøô‰∏™ÂØπË±°ÊòØÁî±‰∫éÂÖ∂ÊâÄÂú®ÁöÑ autoreleasepool Ë¢´ drain ËÄåË¢´ÈáäÊîæÁöÑÔøº Êé•‰∏ãÊù•ÔºåÊàë‰ª¨ÁÇπÂáª ViewController ÂØºËà™Ê†èÂ∑¶‰∏äËßíÁöÑÊåâÈíÆÔºåËøîÂõûÂâç‰∏Ä‰∏™ÁïåÈù¢ÔºåÊ≠§Êó∂ÔºåÂèàÂ∞ÜÊúâ‰∏Ä‰∏™ËßÇÂØüÁÇπË¢´ÂëΩ‰∏≠„ÄÇÂêåÁêÜÔºåÊàë‰ª¨ÂèØ‰ª•Áü•ÈÅìËøô‰∏™ËßÇÂØüÁÇπÊòØ string_weak_retain „ÄÇÊàë‰ª¨Êü•ÁúãÂ∑¶‰æßÁöÑË∞ÉÁî®Ê†àÔºåÂ∞Ü‰ºöÂèëÁé∞‰∏Ä‰∏™ÈùûÂ∏∏ÊïèÊÑüÁöÑÂáΩÊï∞Ë∞ÉÁî® _object_remove_assocations ÔºåË∞ÉÁî®Ëøô‰∏™ÂáΩÊï∞Âêé ViewController ÁöÑÊâÄÊúâÂÖ≥ËÅîÂØπË±°Ë¢´ÂÖ®ÈÉ®ÁßªÈô§„ÄÇÊúÄÁªàÔºåself.associatedObject_retain ÊåáÂêëÁöÑÂØπË±°Ë¢´ÈáäÊîæ„ÄÇÔøº ÁÇπÂáªÁªßÁª≠ËøêË°åÊåâÈíÆÔºåÊúÄÂêé‰∏Ä‰∏™ËßÇÂØüÁÇπ string_weak_copy Ë¢´ÂëΩ‰∏≠„ÄÇÂêåÁêÜÔºåself.associatedObject_copy ÊåáÂêëÁöÑÂØπË±°‰πüÁî±‰∫éÂÖ≥ËÅîÂØπË±°ÁöÑÁßªÈô§Ë¢´ÊúÄÁªàÈáäÊîæ„ÄÇÔøº ÁªìËÆ∫Ôºö ÂÖ≥ËÅîÂØπË±°ÁöÑÈáäÊîæÊó∂Êú∫‰∏éË¢´ÁßªÈô§ÁöÑÊó∂Êú∫Âπ∂‰∏çÊÄªÊòØ‰∏ÄËá¥ÁöÑÔºåÊØîÂ¶Ç‰∏äÈù¢ÁöÑ self.associatedObject_assign ÊâÄÊåáÂêëÁöÑÂØπË±°Âú® ViewController Âá∫Áé∞ÂêéÂ∞±Ë¢´ÈáäÊîæ‰∫ÜÔºå‰ΩÜÊòØ self.associatedObject_assign ‰ªçÁÑ∂ÊúâÂÄºÔºåËøòÊòØ‰øùÂ≠òÁöÑÂéüÂØπË±°ÁöÑÂú∞ÂùÄ„ÄÇÂ¶ÇÊûú‰πãÂêéÂÜç‰ΩøÁî® self.associatedObject_assign Â∞±‰ºöÈÄ†Êàê Crash ÔºåÊâÄ‰ª•Êàë‰ª¨Âú®‰ΩøÁî®Âº±ÂºïÁî®ÁöÑÂÖ≥ËÅîÂØπË±°Êó∂Ë¶ÅÈùûÂ∏∏Â∞èÂøÉÔºõ ‰∏Ä‰∏™ÂØπË±°ÁöÑÊâÄÊúâÂÖ≥ËÅîÂØπË±°ÊòØÂú®Ëøô‰∏™ÂØπË±°Ë¢´ÈáäÊîæÊó∂Ë∞ÉÁî®ÁöÑ _object_remove_assocations ÂáΩÊï∞‰∏≠Ë¢´ÁßªÈô§ÁöÑ„ÄÇ ÂÆûÁé∞ÂéüÁêÜ objc_setAssociatedObject 1234567891011121314151617181920212223242526272829303132333435363738394041424344void _object_set_associative_reference(id object, void *key, id value, uintptr_t policy) &#123;// retain the new value (if any) outside the lock.ObjcAssociation old_association(0, nil);id new_value = value ? acquireValue(value, policy) : nil;&#123;AssociationsManager manager;AssociationsHashMap &amp;associations(manager.associations());disguised_ptr_t disguised_object = DISGUISE(object);if (new_value) &#123;// break any existing association.AssociationsHashMap::iterator i = associations.find(disguised_object);if (i != associations.end()) &#123;// secondary table existsObjectAssociationMap *refs = i-&gt;second;ObjectAssociationMap::iterator j = refs-&gt;find(key);if (j != refs-&gt;end()) &#123;old_association = j-&gt;second;j-&gt;second = ObjcAssociation(policy, new_value);&#125; else &#123;(*refs)[key] = ObjcAssociation(policy, new_value);&#125;&#125; else &#123;// create the new association (first time).ObjectAssociationMap *refs = new ObjectAssociationMap;associations[disguised_object] = refs;(*refs)[key] = ObjcAssociation(policy, new_value);object-&gt;setHasAssociatedObjects();&#125;&#125; else &#123;// setting the association to nil breaks the association.AssociationsHashMap::iterator i = associations.find(disguised_object);if (i != associations.end()) &#123;ObjectAssociationMap *refs = i-&gt;second;ObjectAssociationMap::iterator j = refs-&gt;find(key);if (j != refs-&gt;end()) &#123;old_association = j-&gt;second;refs-&gt;erase(j);&#125;&#125;&#125;&#125;// release the old value (outside of the lock).if (old_association.hasValue()) ReleaseValue()(old_association);&#125; Âú®ÁúãËøôÊÆµ‰ª£Á†ÅÂâçÔºåÊàë‰ª¨ÈúÄË¶ÅÂÖà‰∫ÜËß£‰∏Ä‰∏ãÂá†‰∏™Êï∞ÊçÆÁªìÊûÑ‰ª•ÂèäÂÆÉ‰ª¨‰πãÈó¥ÁöÑÂÖ≥Á≥ªÔºö AssociationsManager ÊòØÈ°∂Á∫ßÁöÑÂØπË±°ÔºåÁª¥Êä§‰∫Ü‰∏Ä‰∏™‰ªé spinlock_t ÈîÅÂà∞ AssociationsHashMap ÂìàÂ∏åË°®ÁöÑÂçï‰æãÈîÆÂÄºÂØπÊò†Â∞ÑÔºõ AssociationsHashMap ÊòØ‰∏Ä‰∏™Êó†Â∫èÁöÑÂìàÂ∏åË°®ÔºåÁª¥Êä§‰∫Ü‰ªéÂØπË±°Âú∞ÂùÄÂà∞ ObjectAssociationMap ÁöÑÊò†Â∞ÑÔºõ ObjectAssociationMap ÊòØ‰∏Ä‰∏™ C++ ‰∏≠ÁöÑ map ÔºåÁª¥Êä§‰∫Ü‰ªé key Âà∞ ObjcAssociation ÁöÑÊò†Â∞ÑÔºåÂç≥ÂÖ≥ËÅîËÆ∞ÂΩïÔºõ ObjcAssociation ÊòØ‰∏Ä‰∏™ C++ ÁöÑÁ±ªÔºåË°®Á§∫‰∏Ä‰∏™ÂÖ∑‰ΩìÁöÑÂÖ≥ËÅîÁªìÊûÑÔºå‰∏ªË¶ÅÂåÖÊã¨‰∏§‰∏™ÂÆû‰æãÂèòÈáèÔºå_policy Ë°®Á§∫ÂÖ≥ËÅîÁ≠ñÁï•Ôºå_value Ë°®Á§∫ÂÖ≥ËÅîÂØπË±°„ÄÇ ÊØè‰∏Ä‰∏™ÂØπË±°Âú∞ÂùÄÂØπÂ∫î‰∏Ä‰∏™ ObjectAssociationMap ÂØπË±°ÔºåËÄå‰∏Ä‰∏™ ObjectAssociationMap ÂØπË±°‰øùÂ≠òÁùÄËøô‰∏™ÂØπË±°ÁöÑËã•Âπ≤‰∏™ÂÖ≥ËÅîËÆ∞ÂΩï„ÄÇ Ôøº objc_getAssociatedObject 123456789101112131415161718192021222324id _object_get_associative_reference(id object, void *key) &#123;id value = nil;uintptr_t policy = OBJC_ASSOCIATION_ASSIGN;&#123;AssociationsManager manager;AssociationsHashMap &amp;associations(manager.associations());disguised_ptr_t disguised_object = DISGUISE(object);AssociationsHashMap::iterator i = associations.find(disguised_object);if (i != associations.end()) &#123;ObjectAssociationMap *refs = i-&gt;second;ObjectAssociationMap::iterator j = refs-&gt;find(key);if (j != refs-&gt;end()) &#123;ObjcAssociation &amp;entry = j-&gt;second;value = entry.value();policy = entry.policy();if (policy &amp; OBJC_ASSOCIATION_GETTER_RETAIN) ((id(*)(id, SEL))objc_msgSend)(value, SEL_retain);&#125;&#125;&#125;if (value &amp;&amp; (policy &amp; OBJC_ASSOCIATION_GETTER_AUTORELEASE)) &#123;((id(*)(id, SEL))objc_msgSend)(value, SEL_autorelease);&#125;return value;&#125; Ê†πÊçÆÂØπË±°Âú∞ÂùÄÂú® AssociationsHashMap ‰∏≠Êü•ÊâæÂÖ∂ÂØπÂ∫îÁöÑ ObjectAssociationMap ÂØπË±°ÔºåÂ¶ÇÊûúËÉΩÊâæÂà∞ÂàôËøõ‰∏ÄÊ≠•Ê†πÊçÆ key Âú® ObjectAssociationMap ÂØπË±°‰∏≠Êü•ÊâæËøô‰∏™ key ÊâÄÂØπÂ∫îÁöÑÂÖ≥ËÅîÁªìÊûÑ ObjcAssociation ÔºåÂ¶ÇÊûúËÉΩÊâæÂà∞ÂàôËøîÂõû ObjcAssociation ÂØπË±°ÁöÑ value ÂÄºÔºåÂê¶ÂàôËøîÂõû nil „ÄÇ objc_removeAssociatedObjects 12345678910111213141516171819202122void _object_remove_assocations(id object) &#123;vector&lt; ObjcAssociation,ObjcAllocator&lt;ObjcAssociation&gt; &gt; elements;&#123;AssociationsManager manager;AssociationsHashMap &amp;associations(manager.associations());if (associations.size() == 0) return;disguised_ptr_t disguised_object = DISGUISE(object);AssociationsHashMap::iterator i = associations.find(disguised_object);if (i != associations.end()) &#123;// copy all of the associations that need to be removed.ObjectAssociationMap *refs = i-&gt;second;for (ObjectAssociationMap::iterator j = refs-&gt;begin(), end = refs-&gt;end(); j != end; ++j) &#123;elements.push_back(j-&gt;second);&#125;// remove the secondary table.delete refs;associations.erase(i);&#125;&#125;// the calls to releaseValue() happen outside of the lock.for_each(elements.begin(), elements.end(), ReleaseValue());&#125; ÂÖàÊ†πÊçÆÂØπË±°ÁöÑÂú∞ÂùÄËé∑ÂèñÂÖ∂ÂØπÂ∫îÁöÑ ObjectAssociationMap ÂØπË±°ÔºåÁÑ∂ÂêéÂ∞ÜÊâÄÊúâÁöÑÂÖ≥ËÅîÁªìÊûÑ‰øùÂ≠òÂà∞‰∏Ä‰∏™ vector ‰∏≠ÔºåÊúÄÁªàÈáäÊîæ vector‰∏≠‰øùÂ≠òÁöÑÊâÄÊúâÂÖ≥ËÅîÂØπË±°„ÄÇÊ†πÊçÆÂâçÈù¢ÁöÑÂÆûÈ™åËßÇÂØüÂà∞ÁöÑÊÉÖÂÜµÔºåÂú®‰∏Ä‰∏™ÂØπË±°Ë¢´ÈáäÊîæÊó∂Ôºå‰πüÊ≠£ÊòØË∞ÉÁî®ÁöÑËøô‰∏™ÂáΩÊï∞Êù•ÁßªÈô§ÂÖ∂ÊâÄÊúâÁöÑÂÖ≥ËÅîÂØπË±°„ÄÇ ÁªôÁ±ªÂØπË±°Ê∑ªÂä†ÂÖ≥ËÅîÂØπË±°ÁúãÂÆåÊ∫ê‰ª£Á†ÅÂêéÔºåÊàë‰ª¨Áü•ÈÅìÂØπË±°Âú∞ÂùÄ‰∏é AssociationsHashMap ÂìàÂ∏åË°®ÊòØ‰∏Ä‰∏ÄÂØπÂ∫îÁöÑ„ÄÇÈÇ£‰πàÊàë‰ª¨ÂèØËÉΩÂ∞±‰ºöÊÄùËÄÉËøôÊ†∑‰∏Ä‰∏™ÈóÆÈ¢òÔºåÊòØÂê¶ÂèØ‰ª•ÁªôÁ±ªÂØπË±°Ê∑ªÂä†ÂÖ≥ËÅîÂØπË±°Âë¢ÔºüÁ≠îÊ°àÊòØËÇØÂÆöÁöÑ„ÄÇÊàë‰ª¨ÂÆåÂÖ®ÂèØ‰ª•Áî®ÂêåÊ†∑ÁöÑÊñπÂºèÁªôÁ±ªÂØπË±°Ê∑ªÂä†ÂÖ≥ËÅîÂØπË±°ÔºåÂè™‰∏çËøáÊàë‰ª¨‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰∏ç‰ºöËøôÊ†∑ÂÅöÔºåÂõ†‰∏∫Êõ¥Â§öÊó∂ÂÄôÊàë‰ª¨ÂèØ‰ª•ÈÄöËøá static ÂèòÈáèÊù•ÂÆûÁé∞Á±ªÁ∫ßÂà´ÁöÑÂèòÈáè„ÄÇÊàëÂú®ÂàÜÁ±ª ViewController+AssociatedObjects ‰∏≠Áªô ViewController Á±ªÂØπË±°Ê∑ªÂä†‰∫Ü‰∏Ä‰∏™ÂÖ≥ËÅîÂØπË±° associatedObjectËØªËÄÖÂèØ‰ª•‰∫≤Ëá™Âú® viewDidLoadÊñπÊ≥ï‰∏≠Ë∞ÉÁî®‰∏Ä‰∏ã‰ª•‰∏ã‰∏§‰∏™ÊñπÊ≥ïÈ™åËØÅ‰∏Ä‰∏ãÔºö (NSString *)associatedObject; (void)setAssociatedObject:(NSString *)associatedObject; ÊÄªÁªì ÂÖ≥ËÅîÂØπË±°‰∏éË¢´ÂÖ≥ËÅîÂØπË±°Êú¨Ë∫´ÁöÑÂ≠òÂÇ®Âπ∂Ê≤°ÊúâÁõ¥Êé•ÁöÑÂÖ≥Á≥ªÔºåÂÆÉÊòØÂ≠òÂÇ®Âú®ÂçïÁã¨ÁöÑÂìàÂ∏åË°®‰∏≠ÁöÑÔºõ ÂÖ≥ËÅîÂØπË±°ÁöÑ‰∫îÁßçÂÖ≥ËÅîÁ≠ñÁï•‰∏éÂ±ûÊÄßÁöÑÈôêÂÆöÁ¨¶ÈùûÂ∏∏Á±ª‰ººÔºåÂú®ÁªùÂ§ßÂ§öÊï∞ÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨ÈÉΩ‰ºö‰ΩøÁî® OBJC_ASSOCIATION_RETAIN_NONATOMIC ÁöÑÂÖ≥ËÅîÁ≠ñÁï•ÔºåËøôÂèØ‰ª•‰øùËØÅÊàë‰ª¨ÊåÅÊúâÂÖ≥ËÅîÂØπË±°Ôºõ ÂÖ≥ËÅîÂØπË±°ÁöÑÈáäÊîæÊó∂Êú∫‰∏éÁßªÈô§Êó∂Êú∫Âπ∂‰∏çÊÄªÊòØ‰∏ÄËá¥ÔºåÊØîÂ¶ÇÂÆûÈ™å‰∏≠Áî®ÂÖ≥ËÅîÁ≠ñÁï• OBJC_ASSOCIATION_ASSIGNËøõË°åÂÖ≥ËÅîÁöÑÂØπË±°ÔºåÂæàÊó©Â∞±Â∑≤ÁªèË¢´ÈáäÊîæ‰∫ÜÔºå‰ΩÜÊòØÂπ∂Ê≤°ÊúâË¢´ÁßªÈô§ÔºåËÄåÂÜç‰ΩøÁî®Ëøô‰∏™ÂÖ≥ËÅîÂØπË±°Êó∂Â∞±‰ºöÈÄ†Êàê Crash „ÄÇ ÂéüÊñáÈìæÊé•Ôºöhttp://blog.leichunfeng.com/blog/2015/06/26/objective-c-associated-objects-implementation-principle/]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>Associated Objects</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[blockÂµåÂ•óÊó∂ @weakify(self)Ôºå@strongify(self)ÁöÑÈÖçÂØπ‰ΩøÁî®]]></title>
    <url>%2F2018%2F08%2F16%2Fblock%E5%B5%8C%E5%A5%97%E6%97%B6-weakify-self-%EF%BC%8C-strongify-self-%E7%9A%84%E9%85%8D%E5%AF%B9%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[ÂÖ≥‰∫éblockÂµåÂ•óÊó∂ÔºåÂ¶Ç‰ΩïÊ≠£Á°Æ‰ΩøÁî®@weakify(self);Âíå@strongify(self);Êù•ÈÅøÂÖçÂæ™ÁéØÂºïÁî®ÈóÆÈ¢òÂàÜ‰ª•‰∏ã‰∏âÁßçÊÉÖÂÜµ1„ÄÅÂ±ÄÈÉ®ÂèòÈáèÂµåÂ•óÂ±ÄÈÉ®ÂèòÈáè 2„ÄÅÊàêÂëòÂèòÈáèÂµåÂ•óÂ±ÄÈÉ®ÂèòÈáè 3„ÄÅÊàêÂëòÂèòÈáèÂµåÂ•óÊàêÂëòÂèòÈáè 1234&#123; void(^_block)(void);//ÊàêÂëòÂèòÈáè&#125;@property (nonatomic, copy) void(^nestedblock)(void); Á¨¨1ÁßçÊÉÖÂÜµÔºåblockÂíånestedBlock‰Ωú‰∏∫Â±ÄÈÉ®ÂèòÈáèÔºåÂÜÖÈÉ®‰ΩøÁî®self‰∏ç‰ºöÂºïËµ∑Âæ™ÁéØÂºïÁî®ÔºåÊâÄ‰ª•‰∏çÂøÖ‰ΩøÁî®@weakify(self);Âíå@strongify(self)1234567891011- (void)test1 &#123; void(^block)(void) = ^&#123; [self doSomething];//Âº∫ÂºïÁî®self,‰ΩÜÊòØself‰∏çÂº∫ÂºïÁî®block void(^nestedBlock)(void) = ^&#123; [self doSomethingElse];////Âº∫ÂºïÁî®self,‰ΩÜÊòØself‰∏çÂº∫ÂºïÁî®nestedBlock &#125;; nestedBlock(); &#125;; block();&#125; Á¨¨2ÁßçÊÉÖÂÜµÔºå_block‰Ωú‰∏∫ÊàêÂëòÂèòÈáèÔºåÂÜÖÈÉ®‰ΩøÁî®self‰ºöÂºïËµ∑Âæ™ÁéØÂºïÁî®ÔºåÊâÄ‰ª•Â∫îËØ•‰ΩøÁî®@weakify(self);Âíå@strongify(self)1234567891011121314- (void)test2 &#123; @weakify(self) _block = ^&#123; @strongify(self); [self doSomething]; void(^nestedBlock)(void) = ^&#123; //@strongify(self);//nestedBlock‰Ωú‰∏∫Â±ÄÈÉ®ÂèòÈáèÔºåÂÜÖÈÉ®‰ΩøÁî®self‰∏ç‰ºöÂºïËµ∑Âæ™ÁéØÂºïÁî®ÔºåÊâÄ‰ª•‰∏çÂøÖ‰ΩøÁî®@weakify(self);Âíå@strongify(self) [self doSomethingElse]; &#125;; nestedBlock(); &#125;; _block();&#125; Á¨¨3ÁßçÊÉÖÂÜµÔºå_block‰Ωú‰∏∫ÊàêÂëòÂèòÈáèÔºåÂÜÖÈÉ®‰ΩøÁî®self‰ºöÂºïËµ∑Âæ™ÁéØÂºïÁî®ÔºåÊâÄ‰ª•Â∫îËØ•‰ΩøÁî®@weakify(self);Âíå@strongify(self)12345678910111213141516- (void)test3 &#123; @weakify(self) _block = ^&#123; @strongify(self); [self doSomething]; //nestedblockÁöÑÂºïÁî®ÈúÄË¶ÅÈÄöËøáself.Â±ûÊÄßÁöÑÊñπÂºèÊù•ÈÅøÂÖçÂæ™ÁéØÂºïÁî®ÔºåÂ¶ÇÊûúÁõ¥Êé•Áî®_nestedblockÂàô‰ºöÂæ™ÁéØÂºïÁî® self.nestedblock = ^&#123; @strongify(self);//***Ê≥®ÊÑèÊ≠§Â§ÑÂèØËÉΩÊúâÁñëÁÇπÔºå@strongify(self)ÊòØÂê¶ÈúÄË¶Å„ÄÇÂΩì‰Ω†ËøôÊ†∑ÂÜôÂÆåÁöÑÊó∂ÂÄôÔºåxcodeÂ∞±Â∑≤ÁªèÊèêÁ§∫reatin cycle‰∫ÜÔºåÂÆûÈôÖÊµãËØïËØÅÊòéÁ°ÆÂÆûÂèëÁîü‰∫ÜÂæ™ÁéØÂºïÁî®„ÄÇ*** //ÊâÄ‰ª•Ê≠§Â§ÑÈúÄË¶ÅÊ∑ªÂä†@strongify(self);ÂéüÂõ†ÊòØblockËÆøÈóÆÂ§ñÈÉ®ÂèòÈáèÊó∂‰ºöcopy,Ê≠§Â§ÑÂ¶ÇÊûú‰∏çÂä†@strongify(self);nestedblockÂÜÖÈÉ®ÊåáÈíà‰ºöÂº∫ÂºïÁî®self [self doSomethingElse]; &#125;; self.nestedblock(); &#125;; _block();&#125; 12345- (void)doSomething&#123;&#125;- (void)doSomethingElse&#123;&#125;]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>block</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ë∞ÉÁî®Á≥ªÁªüÁõ∏Êú∫/Áõ∏ÂÜå‰ª£Á†ÅÁâáÊÆµ]]></title>
    <url>%2F2018%2F08%2F16%2F%E8%B0%83%E7%94%A8%E7%B3%BB%E7%BB%9F%E7%9B%B8%E6%9C%BA-%E7%9B%B8%E5%86%8C%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%2F</url>
    <content type="text"><![CDATA[1234567[self showActionSheet:@[@&quot;ÊãçÊëÑ/‰∏ä‰º†&quot;,@&quot;‰ªéÁõ∏ÂÜå‰∏≠ÈÄâÊã©ÁÖßÁâá&quot;] callBackBlock:^(NSString *item) &#123; if ([item isEqualToString:@&quot;ÊãçÊëÑ/‰∏ä‰º†&quot;]) &#123; [self takePhotoWithCamer]; &#125;else if ([item isEqualToString:@&quot;‰ªéÁõ∏ÂÜå‰∏≠ÈÄâÊã©ÁÖßÁâá&quot;]) &#123; [self choosePhotoFromLibrary]; &#125; &#125;]; 123456789101112131415161718//ÂºπÂá∫ÈÄâÈ°π- (void)showActionSheet:(NSArray *)items callBackBlock:(void(^)(NSString *item))callBackBlock&#123; UIAlertController *alertController = [UIAlertController alertControllerWithTitle:nil message:nil preferredStyle:UIAlertControllerStyleActionSheet]; UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@&quot;ÂèñÊ∂à&quot; style:UIAlertActionStyleCancel handler:nil]; [alertController addAction:cancelAction]; for (NSString *item in items) &#123; UIAlertAction *action = [UIAlertAction actionWithTitle:item style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) &#123; if (callBackBlock) &#123; callBackBlock(item); &#125; &#125;]; [alertController addAction:action]; &#125; [self presentViewController:alertController animated:YES completion:nil];&#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849//‰ΩøÁî®Áõ∏Êú∫ÊãçÁÖß-(void)takePhotoWithCamer&#123; if([self isCanUseCamera])&#123; UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init]; imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera; imagePicker.delegate = self; imagePicker.allowsEditing = YES; imagePicker.showsCameraControls = NO; UIView * customCameraView = [[UIView alloc] initWithFrame:[UIScreen mainScreen].bounds]; UIButton * takePicture = [UIButton buttonWithType:UIButtonTypeCustom]; takePicture.frame = CGRectMake(0, SGFullScreenHeight-44, SGFullScreenWidth, 44); [takePicture setTitle:@&quot;ÁÖßÁõ∏&quot; forState:UIControlStateNormal]; [takePicture sg_handleControlEvent:UIControlEventTouchUpInside withBlock:^(id sender) &#123; [imagePicker takePicture]; &#125;]; [customCameraView addSubview:takePicture]; imagePicker.cameraOverlayView = customCameraView; CGSize screenSize = [[UIScreen mainScreen] bounds].size; float aspectRatio = 4.0/3.0; float scale = screenSize.height/screenSize.width * aspectRatio; imagePicker.cameraViewTransform = CGAffineTransformMakeScale(scale, scale); [self presentViewController:imagePicker animated: YES completion: nil]; &#125;else&#123; //@&quot;Êó†Ê≥ï‰ΩøÁî®Áõ∏Êú∫, ËØ∑Âà∞ Á≥ªÁªüËÆæÁΩÆ -&gt; ÈöêÁßÅ -&gt; Áõ∏Êú∫ ÈáåÂêØÂä®ÊùÉÈôê&quot; &#125;&#125;//Âà§Êñ≠Áõ∏Êú∫ÊòØÂê¶ÂèØÁî®-(BOOL)isCanUseCamera&#123; AVAuthorizationStatus authStatus = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo]; if (authStatus == AVAuthorizationStatusRestricted || authStatus ==AVAuthorizationStatusDenied)&#123; return NO; &#125;else&#123; return YES; &#125;&#125;//‰ªéÁõ∏ÂÜåÈÄâÁÖß-(void)choosePhotoFromLibrary&#123; UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init]; imagePicker.view.tintColor = self.view.tintColor; imagePicker.sourceType = UIImagePickerControllerSourceTypeSavedPhotosAlbum; imagePicker.allowsEditing = NO; imagePicker.delegate = self; [self presentViewController:imagePicker animated: true completion: nil];&#125; 123456789101112//ÈÄâÁÖßÂÆåÊàê-(void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary&lt;NSString *,id&gt; *)info&#123; UIImage *pickedImage = (UIImage *)info[UIImagePickerControllerOriginalImage]; //... [self dismissViewControllerAnimated:YES completion:nil]; &#125;//ÂèñÊ∂àÈÄâÊã©- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker&#123; [picker dismissViewControllerAnimated:YES completion:nil];&#125;]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>Á≥ªÁªüÁõ∏Êú∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Á±ª‰∏éÂØπË±°Âü∫Á°ÄÊï∞ÊçÆÁªìÊûÑ]]></title>
    <url>%2F2018%2F08%2F12%2F%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[###Class Objective-CÁ±ªÊòØÁî±ClassÁ±ªÂûãÊù•Ë°®Á§∫ÁöÑÔºåÂÆÉÂÆûÈôÖ‰∏äÊòØ‰∏Ä‰∏™ÊåáÂêëobjc_classÁªìÊûÑ‰ΩìÁöÑÊåáÈíà„ÄÇ 12345678910111213141516typedef struct objc_class *Class;struct objc_class &#123; Class isa ;//Á±ªËá™Ë∫´‰πüÊòØÂØπË±°ÔºåisaÊåáÈíàÊåáÂêëmetaClass(ÂÖÉÁ±ª) Class super_class; // Áà∂Á±ª,ÊúÄÈ°∂Â±ÇÊ†πÁ±ªÁöÑsuper_classÊåáÂêëNULL const char *name Ôºõ // Á±ªÂêç long version Ôºõ // Á±ªÁöÑÁâàÊú¨‰ø°ÊÅØÔºåÈªòËÆ§‰∏∫0 long info Ôºõ // Á±ª‰ø°ÊÅØÔºå‰æõËøêË°åÊúü‰ΩøÁî®ÁöÑ‰∏Ä‰∫õ‰ΩçÊ†áËØÜ long instance_size Ôºõ // ËØ•Á±ªÁöÑÂÆû‰æãÂèòÈáèÂ§ßÂ∞è struct objc_ivar_list *ivars Ôºõ // ËØ•Á±ªÁöÑÊàêÂëòÂèòÈáèÈìæË°® struct objc_method_list **methodListsÔºõ // ÊñπÊ≥ïÂÆö‰πâÁöÑÈìæË°® struct objc_cache *cacheÔºõ // ÊñπÊ≥ïÁºìÂ≠ò struct objc_protocol_list *protocols Ôºõ // ÂçèËÆÆÈìæË°®&#125; ; cacheÔºöÁî®‰∫éÁºìÂ≠òÊúÄËøë‰ΩøÁî®ÁöÑÊñπÊ≥ï„ÄÇ‰∏Ä‰∏™Êé•Êî∂ËÄÖÂØπË±°Êé•Êî∂Âà∞‰∏Ä‰∏™Ê∂àÊÅØÊó∂ÔºåÂÆÉ‰ºöÊ†πÊçÆisaÊåáÈíàÂéªÁ±ª‰∏≠Êü•ÊâæËÉΩÂ§üÂìçÂ∫îÁöÑÊñπÊ≥ï„ÄÇÂú®ÂÆûÈôÖ‰ΩøÁî®‰∏≠ÔºåËøô‰∏™Á±ªÂè™Êúâ‰∏ÄÈÉ®ÂàÜÊñπÊ≥ïÊòØÂ∏∏Áî®ÁöÑÔºåÂæàÂ§öÊñπÊ≥ïÂÖ∂ÂÆûÂæàÂ∞ëÁî®ÊàñËÄÖÊ†πÊú¨Áî®‰∏ç‰∏ä„ÄÇËøôÁßçÊÉÖÂÜµ‰∏ãÔºåÂ¶ÇÊûúÊØèÊ¨°Ê∂àÊÅØÊù•Êó∂ÔºåÊàë‰ª¨ÈÉΩÊòØmethodLists‰∏≠ÈÅçÂéÜ‰∏ÄÈÅçÔºåÊÄßËÉΩÂäøÂøÖÂæàÂ∑Æ„ÄÇËøôÊó∂ÔºåcacheÂ∞±Ê¥æ‰∏äÁî®Âú∫‰∫Ü„ÄÇÂú®Êàë‰ª¨ÊØèÊ¨°Ë∞ÉÁî®Ëøá‰∏Ä‰∏™ÊñπÊ≥ïÂêéÔºåËøô‰∏™ÊñπÊ≥ïÂ∞±‰ºöË¢´ÁºìÂ≠òÂà∞cacheÂàóË°®‰∏≠Ôºå‰∏ãÊ¨°Ë∞ÉÁî®ÁöÑÊó∂ÂÄôruntimeÂ∞±‰ºö‰ºòÂÖàÂéªcache‰∏≠Êü•ÊâæÔºåÂ¶ÇÊûúcacheÊ≤°ÊúâÔºåÊâçÂéªmethodLists‰∏≠Êü•ÊâæÊñπÊ≥ï„ÄÇËøôÊ†∑ÔºåÂØπ‰∫éÈÇ£‰∫õÁªèÂ∏∏Áî®Âà∞ÁöÑÊñπÊ≥ïÁöÑË∞ÉÁî®Ôºå‰ΩÜÊèêÈ´ò‰∫ÜË∞ÉÁî®ÁöÑÊïàÁéá„ÄÇ Áî®‰∏ãÈù¢‰æãÂ≠êÊù•ËØ¥ÊòéÂÖ∂ÊâßË°åËøáÁ®ãÔºö NSArray *array = [[NSArray alloc] init]; 12345ÊµÅÁ®ãÔºö1. `[NSArray alloc]`ÂÖàË¢´ÊâßË°å„ÄÇÂõ†‰∏∫NSArrayÊ≤°Êúâ`+alloc`ÊñπÊ≥ïÔºå‰∫éÊòØÂéªÁà∂Á±ªNSObjectÂéªÊü•Êâæ„ÄÇ2. Ê£ÄÊµãNSObjectÊòØÂê¶ÂìçÂ∫î`+alloc`ÊñπÊ≥ïÔºåÂèëÁé∞ÂìçÂ∫îÔºå‰∫éÊòØÊ£ÄÊµãNSArrayÁ±ªÔºåÂπ∂Ê†πÊçÆÂÖ∂ÊâÄÈúÄÁöÑÂÜÖÂ≠òÁ©∫Èó¥Â§ßÂ∞èÂºÄÂßãÂàÜÈÖçÂÜÖÂ≠òÁ©∫Èó¥ÔºåÁÑ∂ÂêéÊää`isa`ÊåáÈíàÊåáÂêëNSArrayÁ±ª„ÄÇÂêåÊó∂Ôºå`+alloc`‰πüË¢´Âä†ËøõcacheÂàóË°®ÈáåÈù¢„ÄÇ3. Êé•ÁùÄÔºåÊâßË°å`-init`ÊñπÊ≥ïÔºåÂ¶ÇÊûúNSArrayÂìçÂ∫îËØ•ÊñπÊ≥ïÔºåÂàôÁõ¥Êé•Â∞ÜÂÖ∂Âä†ÂÖ•`cache`ÔºõÂ¶ÇÊûú‰∏çÂìçÂ∫îÔºåÂàôÂéªÁà∂Á±ªÊü•Êâæ„ÄÇ4. Âú®ÂêéÊúüÁöÑÊìç‰Ωú‰∏≠ÔºåÂ¶ÇÊûúÂÜç‰ª•`[[NSArray alloc] init]`ËøôÁßçÊñπÂºèÊù•ÂàõÂª∫Êï∞ÁªÑÔºåÂàô‰ºöÁõ¥Êé•‰ªécache‰∏≠ÂèñÂá∫Áõ∏Â∫îÁöÑÊñπÊ≥ïÔºåÁõ¥Êé•Ë∞ÉÁî®„ÄÇ objc_object‰∏éidobjc_objectÊòØË°®Á§∫‰∏Ä‰∏™Á±ªÁöÑÂÆû‰æãÁöÑÁªìÊûÑ‰ΩìÔºåÂÆÉÁöÑÂÆö‰πâÂ¶Ç‰∏ã: 1234struct objc_object &#123; Class isa ; //ÊåáÂêëÂÖ∂Á±ªÁöÑisaÊåáÈíà&#125;;typedef struct objc_object *id; ÂΩìÊàë‰ª¨Âêë‰∏Ä‰∏™Objective-CÂØπË±°ÂèëÈÄÅÊ∂àÊÅØÊó∂ÔºåËøêË°åÊó∂Â∫ì‰ºöÊ†πÊçÆÂÆû‰æãÂØπË±°ÁöÑisaÊåáÈíàÊâæÂà∞Ëøô‰∏™ÂÆû‰æãÂØπË±°ÊâÄÂ±ûÁöÑÁ±ª„ÄÇRuntimeÂ∫ì‰ºöÂú®Á±ªÁöÑÊñπÊ≥ïÂàóË°®ÂèäÁà∂Á±ªÁöÑÊñπÊ≥ïÂàóË°®‰∏≠ÂéªÂØªÊâæ‰∏éÊ∂àÊÅØÂØπÂ∫îÁöÑselectorÊåáÂêëÁöÑÊñπÊ≥ï„ÄÇÊâæÂà∞ÂêéÂç≥ËøêË°åËøô‰∏™ÊñπÊ≥ï„ÄÇ ÂΩìÂàõÂª∫‰∏Ä‰∏™ÁâπÂÆöÁ±ªÁöÑÂÆû‰æãÂØπË±°Êó∂ÔºåÂàÜÈÖçÁöÑÂÜÖÂ≠òÂåÖÂê´‰∏Ä‰∏™objc_objectÊï∞ÊçÆÁªìÊûÑÔºåÁÑ∂ÂêéÊòØÁ±ªÁöÑÂÆû‰æãÂèòÈáèÁöÑÊï∞ÊçÆ„ÄÇNSObjectÁ±ªÁöÑallocÂíåallocWithZone:ÊñπÊ≥ï‰ΩøÁî®ÂáΩÊï∞class_createInstanceÊù•ÂàõÂª∫objc_objectÊï∞ÊçÆÁªìÊûÑ„ÄÇ idÊòØ‰∏Ä‰∏™objc_objectÁªìÊûÑÁ±ªÂûãÁöÑÊåáÈíà„ÄÇÂÆÉÁöÑÂ≠òÂú®ÂèØ‰ª•ËÆ©Êàë‰ª¨ÂÆûÁé∞Á±ª‰ºº‰∫éC++‰∏≠Ê≥õÂûãÁöÑ‰∏Ä‰∫õÊìç‰Ωú„ÄÇËØ•Á±ªÂûãÁöÑÂØπË±°ÂèØ‰ª•ËΩ¨Êç¢‰∏∫‰ªª‰Ωï‰∏ÄÁßçÂØπË±°ÔºåÊúâÁÇπÁ±ª‰ºº‰∫éCËØ≠Ë®Ä‰∏≠void *ÊåáÈíàÁ±ªÂûãÁöÑ‰ΩúÁî®„ÄÇ ###objc_cacheobjc_classÁªìÊûÑ‰Ωì‰∏≠ÁöÑcacheÂ≠óÊÆµÔºåÂÆÉÁî®‰∫éÁºìÂ≠òË∞ÉÁî®ËøáÁöÑÊñπÊ≥ï„ÄÇÂÆÉÊåáÂêëobjc_cacheÁªìÊûÑ‰ΩìÁöÑÊåáÈíà 12345struct objc_cache &#123; unsigned int mask /* total = mask + 1 */ ; unsigned int occupied ; Method buckets[1];&#125;; maskÔºöÂàÜÈÖçÁöÑÁºìÂ≠òbucketÁöÑÊÄªÊï∞„ÄÇÂú®ÊñπÊ≥ïÊü•ÊâæËøáÁ®ã‰∏≠ÔºåObjective-C runtime‰ΩøÁî®Ëøô‰∏™Â≠óÊÆµÊù•Á°ÆÂÆöÂºÄÂßãÁ∫øÊÄßÊü•ÊâæÊï∞ÁªÑÁöÑÁ¥¢Âºï‰ΩçÁΩÆ„ÄÇÊåáÂêëÊñπÊ≥ïselectorÁöÑÊåáÈíà‰∏éËØ•Â≠óÊÆµÂÅö‰∏Ä‰∏™AND‰ΩçÊìç‰Ωú(index = (mask &amp; selector))„ÄÇËøôÂèØ‰ª•‰Ωú‰∏∫‰∏Ä‰∏™ÁÆÄÂçïÁöÑhashÊï£ÂàóÁÆóÊ≥ï„ÄÇ occupiedÔºöÂÆûÈôÖÂç†Áî®ÁöÑÁºìÂ≠òbucketÁöÑÊÄªÊï∞„ÄÇ bucketsÔºöÊåáÂêë MethodÊï∞ÊçÆÁªìÊûÑÊåáÈíà ÁöÑÊï∞ÁªÑ„ÄÇËøô‰∏™Êï∞ÁªÑÂèØËÉΩÂåÖÂê´‰∏çË∂ÖËøámask+1‰∏™ÂÖÉÁ¥†„ÄÇÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÊåáÈíàÂèØËÉΩÊòØNULLÔºåË°®Á§∫Ëøô‰∏™ÁºìÂ≠ò bucketÊ≤°ÊúâË¢´Âç†Áî®ÔºåÂè¶Â§ñË¢´Âç†Áî®ÁöÑbucketÂèØËÉΩÊòØ‰∏çËøûÁª≠ÁöÑ„ÄÇËøô‰∏™Êï∞ÁªÑÂèØËÉΩ‰ºöÈöèÁùÄÊó∂Èó¥ËÄåÂ¢ûÈïø„ÄÇ ####ÂÖÉÁ±ª(Meta Class) meta-classÊòØ‰∏Ä‰∏™Á±ªÂØπË±°ÁöÑÁ±ª„ÄÇ ÂΩìÊàë‰ª¨Âêë‰∏Ä‰∏™ÂØπË±°ÂèëÈÄÅÊ∂àÊÅØÊó∂Ôºåruntime‰ºöÂú®Ëøô‰∏™ÂØπË±°ÊâÄÂ±ûÁöÑËøô‰∏™Á±ªÁöÑÊñπÊ≥ïÂàóË°®‰∏≠Êü•ÊâæÊñπÊ≥ïÔºõËÄåÂêë‰∏Ä‰∏™Á±ªÂèëÈÄÅÊ∂àÊÅØÊó∂Ôºå‰ºöÂú®Ëøô‰∏™Á±ªÁöÑmeta-classÁöÑÊñπÊ≥ïÂàóË°®‰∏≠Êü•Êâæ„ÄÇ meta-classÂ≠òÂÇ®ÁùÄ‰∏Ä‰∏™Á±ªÁöÑÊâÄÊúâÁ±ªÊñπÊ≥ï„ÄÇÊØè‰∏™Á±ªÈÉΩ‰ºöÊúâ‰∏Ä‰∏™ÂçïÁã¨ÁöÑmeta-classÔºåÂõ†‰∏∫ÊØè‰∏™Á±ªÁöÑÁ±ªÊñπÊ≥ïÂü∫Êú¨‰∏çÂèØËÉΩÂÆåÂÖ®Áõ∏Âêå ÊâÄÊúâÁöÑmeta-classÁöÑisaÊåáÂêëÂü∫Á±ªÁöÑmeta-classÔºå‰ª•Ê≠§‰Ωú‰∏∫ÂÆÉ‰ª¨ÁöÑÊâÄÂ±ûÁ±ª„ÄÇÂç≥Ôºå‰ªª‰ΩïNSObjectÁªßÊâø‰ΩìÁ≥ª‰∏ãÁöÑmeta-classÈÉΩ‰ΩøÁî®NSObjectÁöÑmeta-class‰Ωú‰∏∫Ëá™Â∑±ÁöÑÊâÄÂ±ûÁ±ªÔºåËÄåÂü∫Á±ªÁöÑmeta-classÁöÑisaÊåáÈíàÊòØÊåáÂêëÂÆÉËá™Â∑±„ÄÇËøôÊ†∑Â∞±ÂΩ¢Êàê‰∫Ü‰∏Ä‰∏™ÂÆåÁæéÁöÑÈó≠ÁéØ„ÄÇ ÂØπ‰∫éNSObjectÁªßÊâø‰ΩìÁ≥ªÊù•ËØ¥ÔºåÂÖ∂ÂÆû‰æãÊñπÊ≥ïÂØπ‰ΩìÁ≥ª‰∏≠ÁöÑÊâÄÊúâÂÆû‰æã„ÄÅÁ±ªÂíåmeta-classÈÉΩÊòØÊúâÊïàÁöÑÔºõËÄåÁ±ªÊñπÊ≥ïÂØπ‰∫é‰ΩìÁ≥ªÂÜÖÁöÑÊâÄÊúâÁ±ªÂíåmeta-classÈÉΩÊòØÊúâÊïàÁöÑ„ÄÇ Á±ªÂØπË±°Ë∞ÉÁî®classÊñπÊ≥ïÊòØÊó†Ê≥ïËé∑Âèñmeta-classÔºåÂÆÉÂè™ÊòØËøîÂõûÁ±ªËÄåÂ∑≤„ÄÇÂÆû‰æãÂØπË±°Ë∞ÉÁî®classÊñπÊ≥ïÔºåËøîÂõûÂÆû‰æãÂØπË±°ÁöÑÁ±ª„ÄÇ]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>runtime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RunLoopÁõ∏ÂÖ≥ÊäÄÊúØÁÇπ]]></title>
    <url>%2F2018%2F08%2F10%2FRunLoop%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF%E7%82%B9%2F</url>
    <content type="text"><![CDATA[ÂéüÊñáÈìæÊé•1 RunLoopÂÆûÁé∞‰º™‰ª£Á†Å1234567891011121314int retVal = 1fun __CFRunLoopRun(CFRonLoopRef rl) &#123; var msg do &#123; msg = get_next_msg if (msg) &#123; rl.wakeUp() handle(msg) &#125;else &#123; rl.sleep() &#125; retVaule = msg==quit 0: 1 &#125;while (retVal == 1)&#125; CFRunLoopÊúâ‰∫îÂ§ßÁ±ª CFRunLoopRef 123456789struct __CFRunLoop &#123; ... CFMutableSets _commonModes; //Â≠òÊîæÂÖ∑Êúâ&quot;common&quot;Ê†áÁ§∫ÁöÑmode CFMutableSets _commonModeItems; CFRunLoopModeRef _currentMode; CFMutableSetRef _modes ...&#125; CFRunLoopMode ‰∏Ä‰∏™RunLoopÂåÖÂê´Ëã•Âπ≤‰∏™ModeÔºåMode‰∏≠ÂèàÂåÖÂê´Ëã•Âπ≤‰∏™Source/Timer/ObserverÔºåÂ¶ÇÊûúÂàáÊç¢ModeÔºåÂè™ËÉΩÈÄÄÂá∫ÂΩìÂâçÁöÑRunLoopÔºå‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜÂàÜÈöîÂºÄ‰∏çÂêåÁªÑÁöÑSource/Timer/Observer„ÄÇ 12345678910 struct __CFRunLoopMode &#123; ... CFStringRef _name;//modeÁöÑÂêçÂ≠ó:kCFRunLoopDefaultMode CFMutableSetRef _source0; CFMutableSetRef _source1; CFMutableArrayRef _observers; CFMutableArrayRef _timers; ...&#125; CFRunLoopObserverRef 123456789 typedef CF_OPTIONS(CFOptionFlags, CFRunLoopActivity) &#123; kCFRunLoopEntry = (1UL &lt;&lt; 0), //Âç≥Â∞ÜËøõÂÖ•RunLoop kCFRunLoopBeforeTimers = (1UL &lt;&lt; 1), //Âç≥Â∞ÜËß¶ÂèëTimer kCFRunLoopBeforeSources = (1UL &lt;&lt; 2),//Âç≥Â∞ÜËß¶ÂèëSource kCFRunLoopBeforeWaiting = (1UL &lt;&lt; 5),//Âç≥Â∞ÜËøõÂÖ•‰ºëÁú† kCFRunLoopAfterWaiting = (1UL &lt;&lt; 6), //Âç≥Â∞ÜË¢´Êç¢Êñ∞ kCFRunLoopExit = (1UL &lt;&lt; 7), //Âç≥Â∞ÜÈÄÄÂá∫&#125;; CFRunLoopSourceRef Source0 ÔºöÂè™ÂåÖÂê´‰∏Ä‰∏™ÂõûË∞ÉÂáΩÊï∞ÊåáÈíàÔºå‰ΩøÁî®Êó∂ÈúÄË¶ÅÂ∞Ü‰∫ã‰ª∂Ê†áËÆ∞‰∏∫ÂæÖÂ§ÑÁêÜÔºöCFRunLoopSourceSignal(source)ÔºåÂÜçË∞ÉÁî®CFRunLoopWakeUP(runloop)Êù•Âî§ÈÜíRunLoopÔºå‰ΩøÂÖ∂Â§ÑÁêÜÊï¥‰∏™‰∫ã‰ª∂ Source1 ÔºöÂåÖÂê´‰∏Ä‰∏™Áî®‰∫éÂÜÖÊ†∏ÂíåÂÖ∂‰ªñÁ∫øÁ®ãÂèëÈÄÅÊ∂àÊÅØÁöÑÊñπÊ≥ïÔºömach_port,ËøôÁßçsourceËÉΩ‰∏ªÂä®Âî§ÈÜíRunLoopÔºåÂÖ∑‰ΩìÂéüÂõ†ÁúãÂ∫ï‰∏ã‰ºöËÆ≤Âà∞ÁöÑmach_msg() CFRunLoopTimerRef Âü∫‰∫éÊó∂Èó¥ÁöÑËß¶ÂèëÂô®ÔºåÂΩìÂÖ∂Âä†ÂÖ•RunLoopÊó∂ÔºåRunLoop‰ºöÊ≥®ÂÜåÊó∂Èó¥ÁÇπÔºåÁ≠âÂà∞Êó∂Èó¥ÁÇπÂà∞‰∫ÜRunLoop‰ºöË¢´Âî§ÈÜíÂ§ÑÁêÜÂõûË∞ÉÊó∂Èó¥„ÄÇ ÂÖ∑‰ΩìÂÆûË∑µAutorealease ÊâãÂä®ÈáäÊîæÔºö@autoreleasepool { }‰∏≠ÁöÑËá™Âä®ÈáäÊîæÂèòÈáèÂú®ÂΩìÂâçÂ§ßÊã¨Âè∑‰ΩúÁî®ÂüüÁªìÊùüÊó∂ÈáäÊîæÔºõ Á≥ªÁªüÈáäÊîæÔºöÂú®ÂΩìÂâçRunLoopÊú¨Ê¨°LoopÁªìÊùüÂêéÈáäÊîæÔºõ 1„ÄÅ‰∏ªÁ∫øÁ®ãÊ≥®ÂÜå‰∫Ü‰∏§‰∏™observer1Ôºåobserver2Ôºõ 2„ÄÅobserver1ÁõëÊµãEntryÁä∂ÊÄÅÔºåÂΩìËøõÂÖ•RunLoopÊó∂ÔºåË∞ÉÁî®`_obj_autoreleasepool_push()`ÊñπÊ≥ïÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑautoreleasepoolÔºåËøô‰∏™observerÁöÑ‰ºòÂÖàÁ∫ßÊúÄÈ´òÔºåÁ°Æ‰øùautoreleasepoolÁöÑÂàõÂª∫Âú®ÊâÄÊúâÁöÑÂõûË∞É‰πãÂâçÔºõ 3„ÄÅobserver2ÁõëÊµãBeforeWaitingÁä∂ÊÄÅÔºåÂΩìRunLoopÂç≥Â∞ÜËøõÂÖ•‰ºëÁú†Êó∂ÔºåÂõûË∞É‰∏≠ÂÖàË∞ÉÁî®`_objc_autoreleasepool_pop()`ÊñπÊ≥ïÂ∞ÜautoreleasepoolÈáåÈù¢ÁöÑËá™Âä®ÈáäÊîæÁ±ªÂûãÁöÑÂèòÈáèÈáäÊîæÔºåÁÑ∂ÂêéÂÜçË∞ÉÁî®`_objc_autoreleasepool_push()`ÊñπÊ≥ïÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑautoreleasepool„ÄÇÂêåÊó∂observer2Ëøò‰ºöÊ£ÄÊµãExitÁä∂ÊÄÅÔºåÂΩìÈÄÄÂá∫RunLoopÊó∂Ë∞ÉÁî®`_objc_autoreleasepool_pop()`„ÄÇËøô‰∏™observerÁöÑ‰ºòÂÖàÁ∫ßÊúÄ‰ΩéÔºåÁ°Æ‰øùautoreleasepoolÁöÑÈáäÊîæÂú®ÊâÄÊúâÁöÑÂõûË∞É‰πãÂêé„ÄÇ È°µÈù¢Âà∑Êñ∞ ÂΩìÂú®Êìç‰Ωú UI Êó∂ÔºåÊØîÂ¶ÇÊîπÂèò‰∫Ü Frame„ÄÅÊõ¥Êñ∞‰∫Ü UIView/CALayer ÁöÑÂ±ÇÊ¨°Êó∂ÔºåÊàñËÄÖÊâãÂä®Ë∞ÉÁî®‰∫Ü UIView/CALayer ÁöÑ setNeedsLayout/setNeedsDisplayÊñπÊ≥ïÂêéÔºåËøô‰∏™ UIView/CALayer Â∞±Ë¢´Ê†áËÆ∞‰∏∫ÂæÖÂ§ÑÁêÜÔºåÂπ∂Ë¢´Êèê‰∫§Âà∞‰∏Ä‰∏™ÂÖ®Â±ÄÁöÑÂÆπÂô®Âéª„ÄÇ ËãπÊûúÊ≥®ÂÜå‰∫Ü‰∏Ä‰∏™ Observer ÁõëÂê¨ BeforeWaiting(Âç≥Â∞ÜËøõÂÖ•‰ºëÁú†) Âíå Exit (Âç≥Â∞ÜÈÄÄÂá∫Loop) ‰∫ã‰ª∂ÔºåÂõûË∞ÉÂéªÊâßË°åÔºö _ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv()„ÄÇËøô‰∏™ÂáΩÊï∞Èáå‰ºöÈÅçÂéÜÊâÄÊúâÂæÖÂ§ÑÁêÜÁöÑ UIView/CAlayer ‰ª•ÊâßË°åÂÆûÈôÖÁöÑÁªòÂà∂ÂíåË∞ÉÊï¥ÔºåÂπ∂Êõ¥Êñ∞ UI ÁïåÈù¢„ÄÇÂú®Ëøô‰∏™ÂáΩÊï∞‰πãÂêéÂ∞±Âú®Â±èÂπï‰∏äÁúãÂà∞UIÁöÑÂèòÂåñ TimerÂÆöÊó∂Âô®ÁöÑÂ§ßËá¥ÂéüÁêÜÔºöËÆæÂÆö‰∏Ä‰∏™Êó∂Èó¥ÁÇπÔºåÂ∞ÜÂÆöÊó∂Âô®Âä†ÂÖ•RunLoop‰∏≠ÔºåÁ≠âÂà∞ËææËÆæÂÆöÁöÑÊó∂Èó¥ÁÇπÁöÑÊó∂ÂÄôÂõûÂî§ÈÜíÁ∫øÁ®ãÂ§ÑÁêÜÂõûË∞É„ÄÇ PerfromSeletor:afterDelay:Êú¨Ë¥®‰∏äÊòØÂú®ÂΩìÂâçÁ∫øÁ®ãÁöÑRunLoop‰∏≠Ê∑ªÂä†‰∏Ä‰∏™ÂÆöÊó∂Âô®ÔºåÂΩìÊó∂Èó¥ÁÇπÂà∞‰∫Ü‰ºöÂî§ÈÜíRunLoopÊâßË°åÂõûË∞É„ÄÇ dispatch_main_queueÂΩìË∞ÉÁî® dispatch_async(dispatch_get_main_queue(), block) Êó∂ÔºålibDispatch ‰ºöÂêë‰∏ªÁ∫øÁ®ãÁöÑ RunLoop ÂèëÈÄÅÊ∂àÊÅØÔºåRunLoop‰ºöË¢´Âî§ÈÜíÔºåÂπ∂‰ªéÊ∂àÊÅØ‰∏≠ÂèñÂæóËøô‰∏™ blockÔºåÂπ∂Âú®ÂõûË∞É __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__()ÈáåÊâßË°åËøô‰∏™ block„ÄÇ‰ΩÜËøô‰∏™ÈÄªËæë‰ªÖÈôê‰∫é dispatch Âà∞‰∏ªÁ∫øÁ®ãÔºådispatch Âà∞ÂÖ∂‰ªñÁ∫øÁ®ã‰ªçÁÑ∂ÊòØÁî± libDispatch Â§ÑÁêÜÁöÑ„ÄÇ Â∏∏È©ªÊúçÂä°Á∫øÁ®ã12345678910111213141516171819 + (void)networkRequestThreadEntryPoint:(id)__unused object &#123; @autoreleasepool &#123; [[NSThread currentThread] setName:@&quot;AFNetworking&quot;]; NSRunLoop *runLoop = [NSRunLoop currentRunLoop]; [runLoop addPort:[NSMachPort port] forMode:NSDefaultRunLoopMode]; [runLoop run]; &#125;&#125; + (NSThread *)networkRequestThread &#123; static NSThread *_networkRequestThread = nil; static dispatch_once_t oncePredicate; dispatch_once(&amp;oncePredicate, ^&#123; _networkRequestThread = [[NSThread alloc] initWithTarget:self selector:@selector(networkRequestThreadEntryPoint:) object:nil]; [_networkRequestThread start]; &#125;); return _networkRequestThread; &#125; ÊªöÂä®ËßÜÂõæ‰∏≠Âª∂ËøüÂä†ËΩΩÂõæÁâá1234[imgView performSelector:@selector(loadImage:) withObject:image waitUntilDone:YES inModeS:@[NSDefaultRunLoopMode]];]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>RunLoop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RuntimeÁõ∏ÂÖ≥ÊäÄÊúØÁÇπ]]></title>
    <url>%2F2018%2F08%2F09%2FRuntime%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0%E8%BD%AC%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[ÂéüÊñáÈìæÊé•1 1„ÄÅclass_objectÁªìÊûÑÁ§∫ÊÑèÂõæ 2„ÄÅÊ∂àÊÅØËΩ¨ÂèëÊµÅÁ®ã 3„ÄÅÂΩíÊ°£Êé•Ê°£ 12345678910111213141516171819202122232425262728293031323334353637 //Ëß£Ê°£- (instancetype)initWithCoder:(NSCoder *)aDecoder &#123; self = [super init]; if (!self) return nil; unsigned int count = 0; Ivar *ivars = class_copyIvarList([self class], &amp;count); for (int i = 0 ; i &lt; count; i++) &#123; char const *ivarName = ivar_getName(ivars[i]); NSString *name = [NSString stringWithUTF8String:ivarName]; id value = [aDecoder decodeObjectForKey:name]; [self setValue:value forKey:name]; &#125; free(ivars); return self;&#125;//ÂΩíÊ°£- (void)encodeWithCoder:(NSCoder *)aCoder &#123; unsigned int count = 0; Ivar *ivars = class_copyIvarList([self class], &amp;count); for (int i = 0 ; i &lt; count; i++) &#123; char const *ivarName = ivar_getName(ivars[i]); NSString *name = [NSString stringWithUTF8String:ivarName]; id value = [self valueForKey:name]; [aCoder encodeObject:value forKey:name]; &#125; free(ivars);&#125; 4„ÄÅÈªëÈ≠îÊ≥ï Method Swizzling http://nucleardev.com/Method-Swizzling/]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ë°å‰∏∫È©±Âä®ÂºÄÂèëÔºàBDDÔºâ-- Kiwi]]></title>
    <url>%2F2018%2F06%2F10%2F%E8%A1%8C%E4%B8%BA%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%EF%BC%88BDD%EF%BC%89-Kiwi%2F</url>
    <content type="text"><![CDATA[‰∏Ä‰∏™ÂÖ∏ÂûãÁöÑBDDÁöÑÊµãËØïÁî®‰æãÂåÖÊ¥ªÂÆåÊï¥ÁöÑ‰∏âÊÆµÂºè‰∏ä‰∏ãÊñáÔºåÊµãËØïÂ§ßÂ§öÂèØ‰ª•ÁøªËØë‰∏∫Given..When..ThenÁöÑÊ†ºÂºè SPEC_BEGINÂíåSPEC_ENDÈÉΩÊòØÂÆèÔºåÂÆÉ‰ª¨ÂÆö‰πâ‰∫Ü‰∏Ä‰∏™KWSpecÁöÑÂ≠êÁ±ªÔºåÂπ∂Â∞ÜÂÖ∂‰∏≠ÁöÑÂÜÖÂÆπÂåÖË£ÖÂú®‰∏Ä‰∏™ÂáΩÊï∞‰∏≠ describeÊèèËø∞ÈúÄË¶ÅÊµãËØïÁöÑÂØπË±°ÂÜÖÂÆπÔºå‰πüÂç≥Êàë‰ª¨‰∏âÊÆµÂºè‰∏≠ÁöÑGivenÔºå contextÊèèËø∞ÊµãËØï‰∏ä‰∏ãÊñáÔºå‰πüÂ∞±ÊòØËøô‰∏™ÊµãËØïÂú®WhenÊù•ËøõË°åÔºå ÊúÄÂêéit‰∏≠ÁöÑÊòØÊµãËØïÁöÑÊú¨‰ΩìÔºåÊèèËø∞‰∫ÜËøô‰∏™ÊµãËØïÂ∫îËØ•Êª°Ë∂≥ÁöÑÊù°‰ª∂Ôºå‰∏âËÄÖÂÖ±ÂêåÊûÑÊàê‰∫ÜKiwiÊµãËØï‰∏≠ÁöÑË°å‰∏∫ÊèèËø∞„ÄÇ ÂÆÉ‰ª¨ÊòØÂèØ‰ª•nestÁöÑÔºå‰πüÂ∞±ÊòØ‰∏Ä‰∏™SpecÊñá‰ª∂‰∏≠ÂèØ‰ª•ÂåÖÂê´Â§ö‰∏™describeÔºõ ‰∏Ä‰∏™describeÂèØ‰ª•ÂåÖÂê´Â§ö‰∏™contextÔºåÊù•ÊèèËø∞Á±ªÂú®‰∏çÂêåÊÉÖÊôØ‰∏ãÁöÑË°å‰∏∫Ôºõ ‰∏Ä‰∏™contextÂèØ‰ª•ÂåÖÂê´Â§ö‰∏™itÁöÑÊµãËØï‰æã„ÄÇ 1234567891011121314151617181920212223242526272829303132333435363738394041#import &lt;Kiwi/Kiwi.h&gt;SPEC_BEGIN(SimpleStringSpec)describe(@&quot;SimpleString&quot;, ^&#123; context(@&quot;when assigned to &apos;Hello world&apos;&quot;, ^&#123; beforeAll(^&#123; //ÂΩìÂâçscopeÂÜÖÈÉ®ÁöÑÊâÄÊúâÁöÑÂÖ∂‰ªñblockËøêË°å‰πãÂâçË∞ÉÁî®‰∏ÄÊ¨° &#125;); afterAll(^&#123; //ÂΩìÂâçscopeÂÜÖÈÉ®ÁöÑÊâÄÊúâÁöÑÂÖ∂‰ªñblockËøêË°å‰πãÂêéË∞ÉÁî®‰∏ÄÊ¨° &#125;); beforeEach(^&#123; //Âú®scopeÂÜÖÁöÑÊØè‰∏™it‰πãÂâçË∞ÉÁî®‰∏ÄÊ¨°ÔºåÂØπ‰∫écontextÁöÑÈÖçÁΩÆ‰ª£Á†ÅÂ∫îËØ•ÂÜôÂú®ËøôÈáå &#125;); afterEach(^&#123; //Âú®scopeÂÜÖÁöÑÊØè‰∏™it‰πãÂêéË∞ÉÁî®‰∏ÄÊ¨°ÔºåÁî®‰∫éÊ∏ÖÁêÜÊµãËØïÂêéÁöÑ‰ª£Á†Å &#125;); specify(^&#123; //Áõ¥Êé•‰π¶ÂÜô‰∏çÈúÄË¶ÅÊèèËø∞ÁöÑÊµãËØï &#125;); pending_(@&quot;&quot;, ^&#123; // Âè™ÊâìÂç∞‰∏ÄÊù°log‰ø°ÊÅØÔºå‰∏çÂÅöÊµãËØï„ÄÇ //Ëøô‰∏™ËØ≠Âè•‰ºöÁªôÂá∫‰∏ÄÊù°Ë≠¶ÂëäÔºåÂèØ‰ª•‰Ωú‰∏∫‰∏ÄÂºÄÂßãÈõÜ‰∏≠‰π¶ÂÜôË°å‰∏∫ÊèèËø∞Êó∂ËøòÊú™ÂÆûÁé∞ÁöÑÊµãËØïÁöÑÊèêÁ§∫„ÄÇ &#125;); NSString *greeting = @&quot;Hello world&quot;; it(@&quot;should exist&quot;, ^&#123; [[greeting shouldNot] beNil]; &#125;); it(@&quot;should equal to &apos;Hello world&apos;&quot;, ^&#123; [[greeting should] equal:@&quot;Hello world&quot;]; &#125;); &#125;);&#125;);SPEC_END]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>Kiwi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊµãËØïÈ©±Âä®ÂºÄÂèëÔºàTDDÔºâ-- XCTest]]></title>
    <url>%2F2018%2F06%2F08%2F%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%EF%BC%88TDD%EF%BC%89-XCTest%2F</url>
    <content type="text"><![CDATA[XCTestCaseÊòØXCTestÊµãËØïÊ°ÜÊû∂‰∏≠ÁöÑÊµãËØïÁî®‰æãÁ±ªÔºå XCTestÂú®ËøõË°åÊµãËØïÊó∂Â∞Ü‰ºöÂØªÊâæÊµãËØïtarget‰∏≠ÁöÑÊâÄÊúâXCTestCaseÂ≠êÁ±ªÔºå Âπ∂ËøêË°åÂÖ∂‰∏≠‰ª•testÂºÄÂ§¥ÁöÑÊâÄÊúâÂÆû‰æãÊñπÊ≥ï„ÄÇÂú®ËøôÈáåÔºåÈªòËÆ§ÂÆûÁé∞ÁöÑ-testExampleÂ∞ÜË¢´ÊâßË°å ÈªòËÆ§ËøòÊúâ‰∏§‰∏™ÊñπÊ≥ï-setUpÂíå-tearDownÔºåÂàÜÂà´Âú®ÊØè‰∏™ÊµãËØïÂºÄÂßãÂíåÁªìÊùüÁöÑÊó∂ÂÄôË¢´Ë∞ÉÁî® 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#import &lt;XCTest/XCTest.h&gt;#import &quot;ViewController.h&quot;@interface XCTestDemoTests : XCTestCase@property (nonatomic, strong) ViewController *vc;@end@implementation XCTestDemoTests- (void)setUp &#123;[super setUp];// Put setup code here. This method is called before the invocation of each test method in the class.//ÂÆû‰æãÂåñÈúÄË¶ÅÊµãËØïÁöÑÁ±ªself.vc = [[ViewController alloc] init];&#125;- (void)tearDown &#123;// Put teardown code here. This method is called after the invocation of each test method in the class.self.vc = nil;[super tearDown];&#125;- (void)testVCExist&#123;XCTAssertNotNil([ViewController class],@&quot;ViewController class should exit&quot;);&#125;- (void)testVCObjectCanBeCreated&#123;XCTAssertNotNil(self.vc, @&quot;VVStack object can be created.&quot;);&#125;- (void)testExample &#123;// This is an example of a functional test case.// Use XCTAssert and related functions to verify your tests produce the correct results.NSInteger result = [self.vc getNum];XCTAssertEqual(result, 100, @&quot;ÊµãËØï‰∏çÈÄöËøá&quot;);&#125;//ÊÄßËÉΩÊµãËØï- (void)testPerformanceExample &#123;// This is an example of a performance test case.[self measureBlock:^&#123;// Put the code you want to measure the time of here.for (int i = 0; i &lt; 100; i++) &#123;NSLog(@&quot;%d&quot;,i);&#125;&#125;];&#125;//ÂºÇÊ≠•ÂõûË∞ÉÊµãËØï- (void)testAsynchronousTask&#123;XCTestExpectation *expectation = [self expectationWithDescription:@&quot;asy&quot;];[expectation fulfill];//ÂºÇÊ≠•‰ªªÂä°ÁªìÊùüÊó∂Ë∞ÉÁî®//Â¶ÇÊûúË∂ÖÊó∂ÔºåÂàôËÆ§‰∏∫ÂèëÈÄÅÂ§±Ë¥•[self waitForExpectationsWithTimeout:3 handler:^(NSError * _Nullable error) &#123;if (error) &#123;XCTFail(@&quot;Expectation Failed with error %@&quot;,error);&#125;&#125;];&#125;@end]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>XCTest</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊÄßËÉΩ‰ºòÂåñ‰πãASDK(Texture)]]></title>
    <url>%2F2018%2F06%2F06%2F%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8BASDK-Texture%2F</url>
    <content type="text"><![CDATA[AsyncDisplayKit is now Texture! Ê∫êÁ†ÅÂú∞ÂùÄ ASDK‰∏âÈÉ®Êõ≤Ôºö ÊèêÂçá iOS ÁïåÈù¢ÁöÑÊ∏≤ÊüìÊÄßËÉΩ ‰ªé Auto Layout ÁöÑÂ∏ÉÂ±ÄÁÆóÊ≥ïË∞àÊÄßËÉΩ È¢ÑÂä†ËΩΩ‰∏éÊô∫ËÉΩÈ¢ÑÂä†ËΩΩÔºàiOSÔºâ È´òÊÄßËÉΩÂ§çÊùÇ‰ª£Á†ÅÂ∏¶Êù•‰ºòÂåñÁöÑÂêåÊó∂‰πüÂØºËá¥ÂèØÁª¥Êä§ÊÄßÈôç‰ΩéÔºåÊâÄ‰ª•È°πÁõÆÁöÑ‰ºòÂåñÊó∂Èó¥ÁÇπÂÄºÂæóËÄÉËôëÔºåÈÅøÂÖçËøáÂ∫¶‰ºòÂåñ ÈòªÂ°û‰∏ªÁ∫øÁ®ãÂØºËá¥‰∫§‰∫íÂèçÈ¶àÂª∂ËøüÊòØÁî®Êà∑‰Ωì‰ºöÂà∞ÁöÑ‰∏ªË¶ÅÊÄßËÉΩÈóÆÈ¢ò„ÄÇ ASDK‰∏ªË¶Å‰ªéËßÜÂõæÊ∏≤Êüì„ÄÅÂ∏ÉÂ±Ä„ÄÅÈ¢ÑÂä†ËΩΩ‰∏â‰∏™ÊñπÈù¢ÂØπappÊÄßËÉΩËøõË°å‰∫Ü‰ºòÂåñ„ÄÇ ###ËßÜÂõæÊ∏≤Êüì ÂΩ±ÂìçÊÄßËÉΩÁöÑÂéüÂõ† Ê∏≤ÊüìÊó∂Èó¥ËæÉÈïø Â§çÊùÇËÆ°ÁÆóÂØºËá¥‰∏ªÁ∫øÁ®ãÈòªÂ°ûÔºåÊó†Ê≥ïÊ∏≤Êüì ÁΩëÁªúÊÖ¢ÔºåÊó†modelÂèØÊ∏≤Êüì GPUÁîüÊàêÂõæÂÉèÁöÑÈ¢ëÁéá ‰∏é ÊòæÁ§∫Âô®Âà∑Êñ∞È¢ëÁéá ÁöÑ‰∏ç‰∏ÄËá¥ÔºåÂØºËá¥Â±èÂπïÊíïË£ÇÔºàÂç°È°ø‰∏¢Â∏ßÔºâ„ÄÇ GPU‚Äì&gt;ÂêéÂ§áÁºìÂÜ≤Âå∫‚ÄîÂûÇÁõ¥ÂêåÊ≠•V-Sync‰ø°Âè∑‚Äî‚Äî‚Äî&gt;Â∏ßÁºìÂÜ≤Âå∫‚Äì&gt;üì±Â±èÂπï V-Sync:‰øùËØÅÂè™ÊúâÂú®Â∏ßÁºìÂÜ≤Âå∫‰∏≠ÁöÑÂõæÂÉèË¢´Ê∏≤ÊüìÂêéÔºåÂêéÂ§áÁºìÂÜ≤Âå∫ÂÜÖÂÆπÊâçcopyÂà∞Â∏ßÁºìÂÜ≤Âå∫„ÄÇ ###Â∏ÉÂ±Ä ÂêéÂè∞Â∏ÉÂ±Ä ‚Ä¶ ###È¢ÑÂä†ËΩΩÊñπÂºèÊºîÂèòÔºö Êó†ÈôêÊªöÂä® ÈòÄÂÄºthreshold Âä®ÊÄÅthreshold ÊÉ∞ÊÄßÂä†ËΩΩ Êô∫ËÉΩÈ¢ÑÂä†ËΩΩ]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ÊÄßËÉΩ‰ºòÂåñ</tag>
        <tag>ASDK</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÊÄßËÉΩ‰ºòÂåñÂàùÊé¢]]></title>
    <url>%2F2018%2F06%2F04%2FiOS%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%88%9D%E6%8E%A2%2F</url>
    <content type="text"><![CDATA[ÊÄßËÉΩÈóÆÈ¢òÁöÑËß£ÂÜ≥‰∏ªË¶Å‰ªé‰ª•‰∏ã5‰∏™ÊñπÈù¢ÂÖ•Êâã ‰ºòÂåñ‰∏öÂä°ÊµÅÁ®ã ÂêàÁêÜÁ∫øÁ®ãÂàÜÈÖç È¢ÑÂ§ÑÁêÜ„ÄÅÂª∂Êó∂Âä†ËΩΩ ÁºìÂ≠ò Ê≠£Á°ÆapiÁöÑ‰ΩøÁî® Êú¨ÊñáÂÖ∑‰Ωì‰ªéCPU„ÄÅGPU„ÄÅÂÜÖÂ≠ò‰∏âÊñπÈù¢ÂàÜÊûêÊÄßËÉΩ‰ºòÂåñÊñπÊ°àÔºåÂπ∂ÂØπUITableViewÂÅöÂÖ∑‰ΩìÂàÜÊûê„ÄÇ CPUËµÑÊ∫êÊ∂àËÄóÂéüÂõ†ÂèäËß£ÂÜ≥ÂäûÊ≥ï ÂØπË±°ÁöÑÂàõÂª∫ ÂØπË±°ÁöÑÂàõÂª∫ÂàÜÈÖçÂÜÖÂ≠ò„ÄÅËÆæÁΩÆÂ±ûÊÄßÁ≠â‰ºöÊ∂àËÄócpu; ‰ΩøÁî®Á∫Ø‰ª£Á†ÅÊâãÂÜôÔºåÊåâÈúÄÂä†ËΩΩÈò≤Ê≠¢Âêå‰∏ÄÊó∂Èó¥ÂàõÂª∫Â§ö‰∏™ÂØπË±°ÔºåÂáèÂ∞ëÂØπË±°ÁöÑÂàõÂª∫ ÂØπË±°ÁöÑË∞ÉÊï¥ ËßÜÂõæÂ±ÇÊ¨°Ë∞ÉÊï¥Êó∂ÔºåUIView„ÄÅCALayer ‰πãÈó¥‰ºöÂá∫Áé∞ÂæàÂ§öÊñπÊ≥ïË∞ÉÁî®‰∏éÈÄöÁü• Â±ûÊÄß‰øÆÊîπÊó∂‰πü‰ºöÊ∂àËÄóËµÑÊ∫ê Â∞ΩÈáèÂáèÂ∞ë‰∏çÂøÖË¶ÅÁöÑÂ±ûÊÄß‰øÆÊîπÔºõÂáèÂ∞ëËßÜÂõæÁöÑÊ∑ªÂä†ÂíåÁßªÈô§ÔºåÈÅøÂÖçÂ±ÇÊ¨°‰øÆÊîπ ÂØπË±°ÁöÑÈîÄÊØÅ Â§ßÈáèÂØπË±°ÈîÄÊØÅÊó∂ÔºåËµÑÊ∫êÊ∂àËÄóÊòéÊòæ Âª∫ËÆÆÂàõÂª∫ÈîÄÊØÅÁöÑÂºÇÊ≠•ÈòüÂàóÔºåÂ∞ÜÈúÄË¶ÅÈîÄÊØÅÁöÑÂØπË±°ÊîæÂà∞ÈòüÂàó‰∏≠ÈîÄÊØÅ„ÄÇ Â∏ÉÂ±ÄËÆ°ÁÆó UITableView‰∏≠ÊúÄÂ∏∏ËßÅÊ∂àËÄóËµÑÊ∫êÁöÑÂú∞Êñπ systemLayoutSizeFittingSize:Ëá™Âä®ËÆ°ÁÆóÈ´òÂ∫¶ Âª∫ËÆÆÁºìÂ≠òÈ´òÂ∫¶ FDTemplateLayoutCell Autolayout ÂØπ‰∫éÂ§çÊùÇËßÜÂõæÊù•ËØ¥Â∏∏Â∏∏‰ºö‰∫ßÁîü‰∏•ÈáçÁöÑÊÄßËÉΩÈóÆÈ¢òÔºåAutoLayoutÁõ∏ÂØπ‰ΩéÊïàÁöÑÂéüÂõ†ÊòØÈöêËóèÂú®Â∫ïÂ±ÇÁöÑÂëΩÂêç ‰∏∫‚ÄùCassowary‚ÄúÁöÑÁ∫¶ÊùüÊ±ÇËß£Á≥ªÁªüÔºåÈöèÁùÄËßÜÂõæÊï∞ÈáèÁöÑÂ¢ûÈïøÔºåAutolayout Â∏¶Êù•ÁöÑ CPU Ê∂àËÄó‰ºöÂëàÊåáÊï∞Á∫ß ‰∏äÂçáÔºåÂΩìCellÂÜÖÁ∫¶ÊùüË∂ÖËøá25‰∏™ÁöÑÊó∂ÂÄôÔºå‰ºöÈôç‰ΩéÊªëÂä®ÁöÑÂ∏ßÁéá„ÄÇ È°µÈù¢ÂÖÉÁ¥†Â§öÁöÑÊó∂ÂÄôÔºåÂáèÂ∞ëautolayoutÂ∏ÉÂ±ÄÔºåÈááÁî®frame„ÄÇ ÊñáÊú¨ËÆ°ÁÆóÂèäÊ∏≤Êüì Â∏∏ËßÅÁöÑÊñáÊú¨Êéß‰ª∂ ÔºàUILabel„ÄÅUITextView Á≠âÔºâÔºåÂÖ∂ÊéíÁâàÂíåÁªòÂà∂ÈÉΩÊòØÂú®‰∏ªÁ∫øÁ®ãËøõË°åÁöÑÔºåÂΩìÊòæÁ§∫Â§ßÈáèÊñá Êú¨Êó∂ÔºåCPU ÁöÑÂéãÂäõ‰ºöÈùûÂ∏∏Â§ß„ÄÇËß£ÂÜ≥ÂäûÊ≥ïÊòØÂà©Áî®TextKitÊàñËÄÖÊòØCoreTextËá™ÂÆö‰πâÊñáÊú¨Êéß‰ª∂„ÄÇ Â¶ÇÔºöYYText ÂõæÁâáËß£Á†ÅÂèäÂõæÁâáÁªòÂà∂ ÂΩìÁî®UIImageÁöÑÊñπÊ≥ïÂàõÂª∫ÂõæÁâáÊó∂ÔºåÂõæÁâáÊï∞ÊçÆÂπ∂‰∏ç‰ºöÁ´ãÂàªËß£Á†Å„ÄÇÂõæÁâáËÆæÁΩÆÂà∞ UIImageView ÂâçÔºåCGImage ‰∏≠ÁöÑÊï∞ÊçÆÊâç‰ºöÂæóÂà∞Ëß£Á†Å„ÄÇËøô‰∏ÄÊ≠•ÊòØÂèëÁîüÂú®‰∏ªÁ∫øÁ®ãÁöÑÔºåÂπ∂‰∏î‰∏çÂèØÈÅøÂÖç„ÄÇ Â¶ÇÊûúÊÉ≥Ë¶ÅÁªïÂºÄËøô‰∏™Êú∫Âà∂ÔºåÂ∏∏ËßÅÁöÑÂÅöÊ≥ïÊòØÂú®ÂêéÂè∞Á∫øÁ®ãÂÖàÊääÂõæÁâáÁªòÂà∂Âà∞ CGBitmapContext ‰∏≠ÔºåÁÑ∂Âêé‰ªé Bitmap Áõ¥Êé•ÂàõÂª∫ÂõæÁâá„ÄÇÁõÆÂâçÂ∏∏ËßÅÁöÑÁΩëÁªúÂõæÁâáÂ∫ìÈÉΩËá™Â∏¶Ëøô‰∏™ÂäüËÉΩ„ÄÇSDWebImage/YYImage Êñá‰ª∂Á≥ªÁªüÁöÑË∞ÉÁî® NSFileManagerËé∑Âèñ‰∏Ä‰∏™ÁõÆÂΩïËé∑ÂèñÊñá‰ª∂‰ø°ÊÅØÔºåËøõË°åÂ§öÊ¨°ÈÄíÂΩíËÆ°ÁÆóÔºåstatÂá†‰πéÁû¨Èó¥ÂÆåÊàêÔºåNSFileManagerËÄóÊó∂ËæÉÈïø‰∏îÊ∂àËÄóCPU„ÄÇ GPUËµÑÊ∫êÊ∂àËÄóÂéüÂõ†ÂèäËß£ÂÜ≥ÂäûÊ≥ï Á∫πÁêÜÁöÑÊ∏≤Êüì Áü≠Êó∂Èó¥ÊòæÁ§∫Â§ßÈáèÂõæÁâáÊó∂ÔºåÂ¶ÇÂø´ÈÄüÊªëÂä®TableViewÔºåGPUÂç†Áî®ÈùûÂ∏∏È´ò ÂáèÂ∞ëÁü≠Êó∂Èó¥Â§ßÈáèÂõæÁâáÊòæÁ§∫ÔºåÂ§öÂº†ÂõæÁâáÂêàÊàê‰∏ÄÂº†ÊòæÁ§∫ ËßÜÂõæÊ∑∑ÂêàÔºàBlended LayersÔºâ ËßÜÂõæÁªìÊûÑËøá‰∫éÂ§çÊùÇÔºåÊ∑∑ÂêàÁöÑËøáÁ®ã„ÄÅ‰ºöÊ∂àËÄóÂæàÂ§ö GPU ËµÑÊ∫ê„ÄÇ Â∞ΩÈáèÂáèÂ∞ëËßÜÂõæÊï∞ÈáèÂíåÂ±ÇÊ¨°ÔºåÂπ∂Âú®‰∏çÈÄèÊòéÁöÑËßÜÂõæÈáåÊ†áÊòé opaque Â±ûÊÄß‰ª•ÈÅøÂÖçÊó†Áî®ÁöÑ Alpha ÈÄöÈÅìÂêàÊàê„ÄÇÂ¢ûÂä†ËÉåÊôØËâ≤ÔºåÂáèÂ∞ëÈÄèÊòéÂõæÁâá ÂÉèÁ¥†ÂØπÂÖ∂ÔºàMisaligned ImagesÔºâ ÂõæÁâáÁöÑsizeÔºàÁâ©ÁêÜÂÉèÁ¥†ÔºâÂíåÊòæÁ§∫ÂõæÁâáÁöÑimageViewÁöÑsizeÔºàÈÄªËæëÂÉèÁ¥†ÔºàpointÔºâÔºâ‰∏çÁõ∏Á≠â„ÄÇ ËøáÂ§ßÂõæÁâáÂØπÂÜÖÂ≠òÊ∂àËÄóÂ∑®Â§ßÔºàÂõæÁâáÂç†Áî®ÂÜÖÂ≠ò = ÂõæÂÉèÈ´ò√óÂõæÂÉèÂÆΩ√óÂÉèÁ¥†‰ΩçÊï∞ÔºâÔºõ ‰∏çÁ¨¶ÂêàUIImageViewÂ∞∫ÂØ∏ÁöÑÂõæÁâáÔºåËøõË°åÈáçÊñ∞Áº©Âáè/ÊîæÂ§ßÂ∞∫ÂØ∏ÁöÑÊ∂àËÄóÊòØÈùûÂ∏∏Â∑®Â§ßÁöÑ„ÄÇ Ê¥ãÁ∫¢Ëâ≤ÔºöUIViewÁöÑframeÂÉèÁ¥†‰∏çÂØπÈΩêÔºåÂç≥‰∏çËÉΩÊç¢ÁÆóÊàêÊï¥Êï∞ÂÉèÁ¥†ÂÄº„ÄÇ ÈªÑËâ≤ÔºöUIImageViewÁöÑÂõæÁâáÂÉèÁ¥†Â§ßÂ∞è‰∏éÂÖ∂frame.size‰∏çÂØπÈΩêÔºåÂõæÁâáÂèëÁîü‰∫ÜÁº©ÊîæÈÄ†Êàê„ÄÇ Â∞ΩÈáè‰ΩøÁî®ceil()Ôºå‰øùËØÅÊ≤°ÊúâÂ∞èÊï∞ÁöÑUIÁªòÂà∂ Â∞ΩÈáè‰∏çÂÆûÁî®0.01fÊ†áËÆ∞UITableViewÊàñËÄÖUICollectionViewÁöÑheader‰ª•Âèäfooter ÁΩëÁªú‰∏äËé∑ÂèñÁöÑÂõæÁâáÊ≤°Êúâ@2xÂíå@3xÁöÑÂå∫Âà´ÔºåÈúÄË¶ÅÊàë‰ª¨Áº©ÊîæÂõæÁâáÂà∞‰∏éUIImageViewÂØπÂ∫îÁöÑÂ∞∫ÂØ∏Ôºå‰∏îÁº©ÊîæÂêéÁöÑÂõæÁâáÁöÑscaleÂíå[UIScreen mainScreen].scaleÁõ∏Á≠âÔºåÂÜçÊòæÁ§∫Âá∫Êù•„ÄÇÂª∫ËÆÆ‰ªéÊúçÂä°Âô®ÊãâÂèñÂêàÈÄÇÂ∞∫ÂØ∏ÁöÑÂõæÁâáÔºà‰æãÂ¶Ç‰∏ÉÁâõÁöÑÊúçÂä°Â∞±Â∏¶Ë£ÅÂâ™/ÂéãÁº©ÂèÇÊï∞ÔºâÔºõ Á¶ªÂ±èÊ∏≤Êüì CALayer ÁöÑ border„ÄÅÂúÜËßí„ÄÅÈò¥ÂΩ±shadow „ÄÅÈÅÆÁΩ©ÔºàmaskÔºâ„ÄÅmasksToBounds„ÄÅclipsToBoundsÔºåÈÄöÂ∏∏‰ºöËß¶ÂèëÁ¶ªÂ±èÊ∏≤ÊüìÔºàoffscreen renderingÔºâÔºåËÄåÁ¶ªÂ±èÊ∏≤ÊüìÈÄöÂ∏∏ÂèëÁîüÂú® GPU ‰∏≠„ÄÇ ÂèØ‰ª•Â∞ùËØïÂºÄÂêØ CALayer.shouldRasterize ÔºàÂÖâÊ†ÖÂåñÔºâÂ±ûÊÄßÔºå‰ΩÜËøô‰ºöÊääÂéüÊú¨Á¶ªÂ±èÊ∏≤ÊüìÁöÑÊìç‰ΩúËΩ¨Â´ÅÂà∞ CPU ‰∏äÂéª„ÄÇÂ•ΩÁöÑÊñπÊ≥ïÊòØ‰ΩøÁî®ÂõæÁâáÈÅÆÁΩ©Á≠âÊñπÊ≥ïÔºåÈÅøÂÖç‰ΩøÁî®ÂúÜËßíÂíåÈöêÂΩ¢Á≠â„ÄÇ ÂºÇÊ≠•ÁªòÂà∂ FacebookÁöÑÂºÄÊ∫êÈ°πÁõÆTexture UIKit‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÊâÄ‰ª•ÂøÖÈ°ªÂú®‰∏ªÁ∫øÁ®ãÊîπÂä®„ÄÇTextureÂà©Áî®‰∏≠Èó¥ÂèòÈáèÂ≠òÂÇ®ÊîπÂä®Ôºå‰øùËØÅÁ∫øÁ®ãÂÆâÂÖ®ÔºåÂú®ÂêàÈÄÇÁöÑÊú∫‰ºöÂ∞ÜÂπ∂ÂèëÊìç‰ΩúÂêåÊ≠•Âà∞‰∏ªÁ∫øÁ®ã„ÄÇÊàêÊú¨ËæÉÈ´ò È¢ÑÂä†ËΩΩ ÂàóË°®ÂΩì‰∏≠ÔºåÂΩìÊªëÂä®Âà∞‰∏Ä‰∏™ÂèØ‰ª•ËÆæÂÆöÁöÑ‰ΩçÁΩÆÁöÑÊó∂ÂÄôÔºåÊèêÂâçËé∑Âèñ‰∏ãËΩΩ‰∏ã‰∏ÄÈ°µÁöÑÊï∞ÊçÆÔºåÂπ∂ÁªòÂà∂UI„ÄÇ ÂÜÖÂ≠òËµÑÊ∫êÊ∂àËÄóÂéüÂõ†ÂèäËß£ÂÜ≥ÂäûÊ≥ï imageNamedÂíåimageWithContentsOfFile Â∏∏Áî®ÁöÑÂÖÉÁ¥†‰æãÂ¶Çicon‰πãÁ±ªÁöÑÔºåÈááÁî®imageNamed:ÔºåÁ≥ªÁªü‰ºöÊúâÁºìÂ≠ò„ÄÇ Â¶ÇÊûúÊòØËæÉÂ§ßÊàñËÄÖ‰∏çÂ∏∏Áî®ÁöÑÂõæÁâáËµÑÊ∫êÔºåÈááÁî®imageWithContentsOfFile:„ÄÇ NSDateFormatter‰∫ßÁîüËæÉÂ§ßÊ∂àËÄó UITableViewÁöÑ‰ºòÂåñ Âú®UITableViewÁöÑdataSource‰∏≠ÂÆûÁé∞ÁöÑtableView:cellForRowAtIndexPath:ÊñπÊ≥ïÔºåÈúÄË¶Å‰∏∫ÊØè‰∏™cellË∞ÉÁî®‰∏ÄÊ¨°ÔºåÂÆÉÂ∫îËØ•Âø´ÈÄüÊâßË°å„ÄÇÊâÄ‰ª•‰Ω†ÈúÄË¶ÅÂ∞ΩÂèØËÉΩÂø´Âú∞ËøîÂõûÈáçÁî®cellÂÆû‰æã„ÄÇ‰∏çË¶ÅÂú®ËøôÈáåÂéªÊâßË°åÊï∞ÊçÆÁªëÂÆöÔºåÂõ†‰∏∫ÁõÆÂâçÂú®Â±èÂπï‰∏äËøòÊ≤°Êúâcell„ÄÇ Êï∞ÊçÆÁªëÂÆöÂèØ‰ª•Âú®UITableViewÁöÑdelegateÊñπÊ≥ïtableView:willDisplayCell:forRowAtIndexPath:‰∏≠ËøõË°å„ÄÇËøô‰∏™ÊñπÊ≥ïÂú®ÊòæÁ§∫cell‰πãÂâç‰ºöË¢´Ë∞ÉÁî®„ÄÇ UITableView‰∏ç‰ºöÂêåÊó∂Áª¥Êä§ÊâÄÊúâcellÁöÑÂÆû‰æã„ÄÇÁõ∏ÂèçÔºåÂÆÉÂè™ÈúÄË¶ÅÁª¥Êä§ÊòæÁ§∫ÁªôÁî®Êà∑ÁöÑÈÇ£‰∫õcell„ÄÇÈÄöËøáËÆ°ÁÆóÊâÄÊúâcellÁöÑÈ´òÂ∫¶‰πãÂíåÊù•ËÆ°ÁÆócontentSizeÁöÑÂÄº„ÄÇUITableViewÁöÑdelegateÊñπÊ≥ïtableView:heightForRowAtIndexPath:‰ºö‰∏∫ÊØè‰∏™cellË∞ÉÁî®‰∏ÄÊ¨°ÔºåÊâÄ‰ª•‰Ω†Â∫îËØ•ÈùûÂ∏∏Âø´Âú∞ËøîÂõûÈ´òÂ∫¶ÂÄº„ÄÇÊùúÁªùÂú®Â∏ÉÂ±ÄÂàùÂßãÂåñcellÂÆû‰æãÂπ∂ÁªëÂÆöÊï∞ÊçÆÂêéÂéªËé∑ÂèñÂÆÉ‰ª¨ÁöÑÈ´òÂ∫¶„ÄÇ ‰ªéiOS8ÂºÄÂßãÔºåÊàë‰ª¨ÂèØ‰ª•Âú®UITableViewÁöÑdelegate‰∏≠‰ΩøÁî®Ëá™Âä®È´òÂ∫¶ËÆ°ÁÆóÔºåËÄå‰∏çÈúÄË¶ÅÂÆûÁé∞Â§çÊùÇÁöÑÈ´òÂ∫¶ËÆ°ÁÆóÊñπÊ≥ï„ÄÇ‰∏∫‰∫ÜÂÆûÁé∞Ëøô‰∏ÄÂäüËÉΩÔºå‰Ω†ÈúÄË¶Å‰ΩøÁî®AutoLayoutÔºåÂπ∂Â∞ÜrowHeightÂèòÈáèËÆæÁΩÆ‰∏∫UITableViewAutomaticDimension„ÄÇ‰ΩÜÊòØ„ÄÇ„ÄÇÁî±‰∫éÂú®Â∫ïÂ±ÇÁöÑÂëΩÂêç‰∏∫‚ÄùCassowary‚ÄúÁöÑÁ∫¶ÊùüÊ±ÇËß£Á≥ªÁªüÔºåÂú®Â≠êËßÜÂõæË∂äÂ§öÔºåÊ±ÇËß£Á∫¶Êùü‰πüË∂äÂ§öÔºåÂØºËá¥ÊïàÁéáÊûÅ‰ΩéÔºåÂª∫ËÆÆÈááÁî®frame,ÈÄöËøáÁÆÄÂçïËÆ°ÁÆóÊ±ÇËß£È´òÂ∫¶„ÄÇ ‰ΩøÁî®‰∫ÜÊâãÂä®Â∏ÉÂ±ÄÂíå‰ºòÂåñÈ´òÂ∫¶ÔºåUITableView‰æùÁÑ∂ÁºìÊÖ¢ÁöÑÈóÆÈ¢òÂ∞±Âú®‰∫éÊ∏≤Êüì‰∫ÜÔºö UIViewÁöÑopaqueÂ±ûÊÄßËÆæ‰∏∫Yes,ÁªòÂõæÁ≥ªÁªüÊ∏≤ÊüìÊó∂‰ºöÂÅö‰∏Ä‰∫õ‰ºòÂåñ ÂáèÂ∞ëÊ∑∑ÂêàÔºàblendingÔºâÊ¨°Êï∞Ôºå‰∏çË¶Å‰ΩøÁî®ÈÄèÊòéËÉåÊôØÔºåÊ®°ÊãüÂô®-&gt;Debug-&gt;Color Blended Layers,Ê≠§Êó∂ÂÖ®ÈÉ®Âå∫Âüü‰∏≠Á∫¢Ëâ≤‰ª£Ë°®ÊúâÊ∑∑ÂêàÔºåÁªøËâ≤‰ª£Ë°®Ê≤°ÊúâÊ∑∑Âêà„ÄÇ ‰ºòÂåñ‰ª£Á†ÅÔºå‰ª•Âπ≥Ë°°CPUÂíåGPUÁöÑË¥üËΩΩ„ÄÇ Â≠êÂÉèÁ¥†Ê∏≤Êüì(ÊµÆÁÇπÊï∞ÂùêÊ†áÔºåÂõæÁâáËµÑÊ∫êÂ§ßÂ∞è‰∏çÂêàÈÄÇÁ≠â) Ê®°ÊãüÂô®-&gt;Debug-&gt;Color Misaligned ImageÂìÅÁ∫¢Ëâ≤Âå∫Âüü‰ºöÊâßË°åÂ≠êÂÉèÁ¥†Ê∏≤ÊüìÔºåËÄåÈªÑËâ≤Âå∫ÂüüÊòØÂõæÁâáÂ§ßÂ∞èÊ≤°ÊúâÂØπÈΩêÁöÑÊÉÖÂÜµ,ÂØπÊâÄÊúâÂÉèÁ¥†Áõ∏ÂÖ≥ÁöÑÊï∞ÊçÆÂÅöÂõõËàç‰∫îÂÖ•Â§ÑÁêÜÔºåÂåÖÊã¨ÁÇπÂùêÊ†áÔºåUIViewÁöÑÈ´òÂ∫¶ÂíåÂÆΩÂ∫¶„ÄÇË∑üË∏™‰Ω†ÁöÑÂõæÂÉèËµÑÊ∫êÔºöÂõæÁâáÂøÖÈ°ªÊòØÂÉèÁ¥†ÂÆåÁæéÁöÑÔºåÂê¶ÂàôÂú®RetinaÂ±èÂπï‰∏äÊ∏≤ÊüìÊó∂ÔºåÂÆÉ‰ºöÂÅö‰∏çÂøÖË¶ÅÁöÑÊäóÈîØÈΩøÂ§ÑÁêÜ„ÄÇ ÂºÇÊ≠•ÂåñUI Ê®°ÊãüÂô®-&gt;Debug-&gt;Color Offscreen-Rendered ÈªÑËâ≤‰ª£Ë°®Á¶ªÂ±èÊ∏≤ÊüìÂå∫Âüü ÊâæÂá∫ËÆ©cellÊó†Ê≥ïÂø´ÈÄüËøîÂõûÁöÑÁì∂È¢à Â∞ÜÊìç‰ΩúÁßªÂà∞ÂêéÂè∞Á∫øÁ®ãÔºåÂπ∂Âú®‰∏ªÁ∫øÁ®ãÂà∑Êñ∞ËÆ©ÂÜÖÂÆπÊòæÁ§∫ ËÆæÁΩÆCALayerÁöÑdrawsAsynchronouslyÂ±ûÊÄß‰∏∫YES]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ÊÄßËÉΩ‰ºòÂåñ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Èü≥ËßÜÈ¢ëÊäÄÊúØÁü•ËØÜ]]></title>
    <url>%2F2018%2F05%2F31%2F%E7%9B%B4%E6%92%AD%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Â∏∏ËßÅÁöÑËßÜÈ¢ëÊñá‰ª∂Êúâavi,mp4,rmvb,ts,flv,mkvÁ≠âÊ†ºÂºèÔºåËøô‰∫õÊ†ºÂºè‰ª£Ë°®Â∞ÅË£ÖÊ†ºÂºè,Âç≥ÊääÈü≥ËßÜÈ¢ëÁºñÁ†ÅÁöÑÊï∞ÊçÆÊâìÂåÖÊàê‰∏Ä‰∏™Êñá‰ª∂ÁöÑËßÑËåÉ„ÄÇ ‰∏çÂêåÁöÑÂ∞ÅË£ÖÊ†ºÂºèÊîØÊåÅÁöÑÈü≥ËßÜÈ¢ëÁºñÁ†ÅÊ†áÂáÜÊúâÊâÄÂ∑ÆÂºÇ„ÄÇ Èü≥ËßÜÈ¢ëÊäÄÊúØ‰∏ªË¶ÅÂåÖÂê´ÔºöÂ∞ÅË£ÖÊäÄÊúØÔºåËßÜÈ¢ëÂéãÁº©ÁºñÁ†ÅÔºåÈü≥È¢ëÂéãÁº©ÁºñÁ†ÅÔºåÊµÅÂ™í‰ΩìÂçèËÆÆ ËßÜÈ¢ëÊí≠ÊîæÂéüÁêÜ Êí≠Êîæ‰∫íËÅîÁΩëËßÜÈ¢ëÔºö Ëß£ÂçèËÆÆÔºåËß£Â∞ÅË£ÖÔºåËß£Á†ÅÈü≥ËßÜÈ¢ëÔºåÈü≥ËßÜÈ¢ëÂêåÊ≠• Êí≠ÊîæÊú¨Âú∞ËßÜÈ¢ëÔºö Ëß£Â∞ÅË£ÖÔºåËß£Á†ÅÈü≥ËßÜÈ¢ëÔºåÈü≥ËßÜÈ¢ëÂêåÊ≠• Ëß£ÂçèËÆÆÔºöÂ∏∏Áî®ÊµÅÂ™í‰ΩìÂçèËÆÆHTTP,RTMPÁ≠âÔºåÊ≠§ËøáÁ®ãÂéªÈô§ÊµÅÂ™í‰ΩìÂçèËÆÆÊï∞ÊçÆ‰∏≠ÁöÑ‰ø°‰ª§Êï∞ÊçÆÔºåÂè™‰øùÁïôÈü≥ËßÜÈ¢ëÊï∞ÊçÆ„ÄÇ Ëß£Â∞ÅË£ÖÔºöÂ∞ÅË£ÖÊ†ºÂºèÊï∞ÊçÆÂàÜÁ¶ªÊàêÈü≥È¢ëÂéãÁº©ÁºñÁ†ÅÊï∞ÊçÆÂíåËßÜÈ¢ëÂéãÁº©ÁºñÁ†ÅÊï∞ÊçÆ„ÄÇ Ëß£Á†ÅÔºöÈü≥È¢ëÁöÑÂéãÁº©ÁºñÁ†ÅÊ†áÂáÜÂåÖÂê´AACÔºåMP3ÔºåAC-3Á≠â,ËßÜÈ¢ëÁöÑÂéãÁº©ÁºñÁ†ÅÊ†áÂáÜÂàôÂåÖÂê´H.264ÔºåMPEG2ÔºåVC-1Á≠âÁ≠â„ÄÇÈÄöËøáËß£Á†ÅÔºåÂéãÁº©ÁºñÁ†ÅÁöÑËßÜÈ¢ëÊï∞ÊçÆËæìÂá∫Êàê‰∏∫ÈùûÂéãÁº©ÁöÑÈ¢úËâ≤Êï∞ÊçÆÔºå‰æãÂ¶ÇYUV420PÔºåRGBÁ≠âÁ≠âÔºõÂéãÁº©ÁºñÁ†ÅÁöÑÈü≥È¢ëÊï∞ÊçÆËæìÂá∫Êàê‰∏∫ÈùûÂéãÁº©ÁöÑÈü≥È¢ëÊäΩÊ†∑Êï∞ÊçÆÔºå‰æãÂ¶ÇPCMÊï∞ÊçÆ„ÄÇ ËßÜÈü≥È¢ëÂêåÊ≠•ÔºöÊ†πÊçÆËß£Â∞ÅË£ÖÊ®°ÂùóÂ§ÑÁêÜËøáÁ®ã‰∏≠Ëé∑ÂèñÂà∞ÁöÑÂèÇÊï∞‰ø°ÊÅØÔºåÂêåÊ≠•Ëß£Á†ÅÂá∫Êù•ÁöÑËßÜÈ¢ëÂíåÈü≥È¢ëÊï∞ÊçÆÔºåÂπ∂Â∞ÜËßÜÈ¢ëÈü≥È¢ëÊï∞ÊçÆÈÄÅËá≥Á≥ªÁªüÁöÑÊòæÂç°ÂíåÂ£∞Âç°Êí≠ÊîæÂá∫Êù•„ÄÇ ÊµÅÂ™í‰ΩìÂçèËÆÆ Â∞ÅË£ÖÊ†ºÂºè ËßÜÈ¢ëÁºñÁ†Å HEVC &gt; VP9 &gt; H.264&gt; VP8 &gt; MPEG4 &gt; H.263 &gt; MPEG2„ÄÇ Èü≥È¢ëÁºñÁ†Å ÁΩëÁªúÈü≥ËßÜÈ¢ëÂπ≥Âè∞ÂèÇÊï∞ÂØπÊØî Áõ¥Êí≠ÔºöÁõ¥Êí≠ÊúçÂä°ÊôÆÈÅçÈááÁî®‰∫ÜRTMP‰Ωú‰∏∫ÊµÅÂ™í‰ΩìÂçèËÆÆÔºåFLV‰Ωú‰∏∫Â∞ÅË£ÖÊ†ºÂºèÔºåH.264‰Ωú‰∏∫ËßÜÈ¢ëÁºñÁ†ÅÊ†ºÂºèÔºåAAC‰Ωú ‰∏∫Èü≥È¢ëÁºñÁ†ÅÊ†ºÂºè„ÄÇ ÁÇπÊí≠ÔºöÁÇπÊí≠ÊúçÂä°ÊôÆÈÅçÈááÁî®‰∫ÜHTTP‰Ωú‰∏∫ÊµÅÂ™í‰ΩìÂçèËÆÆÔºåH.264‰Ωú‰∏∫ËßÜÈ¢ëÁºñÁ†ÅÊ†ºÂºèÔºåAAC‰Ωú‰∏∫Èü≥È¢ëÁºñÁ†ÅÊ†ºÂºè„ÄÇÈááÁî®ÁöÑÂ∞ÅË£ÖÊ†ºÂºèÊúâÂ§öÁßçÔºöMP4ÔºåFLVÔºåF4VÁ≠â„ÄÇ RGB/YUVËßÜÈ¢ëÂÉèÁ¥†Êï∞ÊçÆÂ§ÑÁêÜYUVÊ†ºÂºèÊúâ‰∏§Â§ßÁ±ªÔºöÊâìÂåÖÔºàpackedÔºâÊ†ºÂºèÂíåÂπ≥Èù¢ÔºàplanarÔºâÊ†ºÂºè„ÄÇ ÂØπ‰∫éplanarÁöÑYUVÊ†ºÂºèÔºåÂÖàËøûÁª≠Â≠òÂÇ®ÊâÄÊúâÂÉèÁ¥†ÁÇπÁöÑYÔºåÁ¥ßÊé•ÁùÄÂ≠òÂÇ®ÊâÄÊúâÂÉèÁ¥†ÁÇπÁöÑUÔºåÈöèÂêéÊòØÊâÄÊúâÂÉèÁ¥†ÁÇπÁöÑV„ÄÇÂØπ‰∫épackedÁöÑYUVÊ†ºÂºèÔºåÊØè‰∏™ÂÉèÁ¥†ÁÇπÁöÑY,U,VÊòØËøûÁª≠‰∫§ÂèâÂ≠òÂÇ®ÁöÑ„ÄÇ YUVÔºåÂàÜ‰∏∫‰∏â‰∏™ÂàÜÈáèÔºå‚ÄúY‚ÄùË°®Á§∫Êòé‰∫ÆÂ∫¶ÔºõËÄå‚ÄúU‚ÄùÂíå‚ÄúV‚Äù Ë°®Á§∫ÁöÑÂàôÊòØËâ≤Â∫¶„ÄÇ ÂÆÉÂ∞Ü‰∫ÆÂ∫¶‰ø°ÊÅØÔºàYÔºâ‰∏éËâ≤ÂΩ©‰ø°ÊÅØÔºàUVÔºâÂàÜÁ¶ªÔºåÊ≤°ÊúâUV‰ø°ÊÅØ‰∏ÄÊ†∑ÂèØ‰ª•ÊòæÁ§∫ÂÆåÊï¥ÁöÑÂõæÂÉèÔºåÂè™‰∏çËøáÊòØÈªëÁôΩÁöÑ ‰∏ªÊµÅÁöÑÈááÊ†∑ÊñπÂºèÊúâ‰∏âÁßçÔºåYUV4:4:4ÔºåYUV4:2:2ÔºåYUV4:2:0ÔºåRGB24 PCMÈü≥È¢ëÈááÊ†∑Êï∞ÊçÆÂ§ÑÁêÜPCM16LE PCM8 H.264ËßÜÈ¢ëÁ†ÅÊµÅËß£Êûê‚Ä¶NALU‚Ä¶NALU‚Ä¶ AACÈü≥È¢ëÁ†ÅÊµÅËß£Êûê‚Ä¶ADTS frame‚Ä¶ADTS frame‚Ä¶ FLVÂ∞ÅË£ÖÊ†ºÂºèËß£ÊûêFLV Header..Tag(metadata)..Tag(video)..Tag(audio)‚Ä¶H.264 AAC UDP/RTPÂçèËÆÆËß£ÊûêMPEG-TSÂ∞ÅË£ÖÊ†ºÂºèÊï∞ÊçÆÊâìÂåÖ‰∏∫RTP/UDPÂçèËÆÆÁÑ∂ÂêéÂèëÈÄÅÂá∫ÂéªÁöÑÊµÅÁ®ãÂ¶Ç‰∏ãÂõæÊâÄÁ§∫„ÄÇ Âõæ‰∏≠È¶ñÂÖàÊØè7‰∏™MPEG-TS PacketÊâìÂåÖ‰∏∫‰∏Ä‰∏™RTPÔºåÁÑ∂ÂêéÊØè‰∏™RTPÂÜçÊâìÂåÖ‰∏∫‰∏Ä‰∏™UDP„ÄÇÂÖ∂‰∏≠ÊâìÂåÖRTPÁöÑÊñπÊ≥ïÂ∞±ÊòØÂú®MPEG-TSÊï∞ÊçÆÂâçÈù¢Âä†‰∏äRTP HeaderÔºåËÄåÊâìÂåÖRTPÁöÑÊñπÊ≥ïÂ∞±ÊòØÂú®RTPÊï∞ÊçÆÂâçÈù¢Âä†‰∏äUDP Header„ÄÇ Êú™ÂÆå‚Ä¶..]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ÂÆâË£ÖCocoapods]]></title>
    <url>%2F2018%2F05%2F31%2F%E5%AE%89%E8%A3%85Cocoapods%2F</url>
    <content type="text"><![CDATA[1„ÄÅrubyÁéØÂ¢ÉÂú®ÂÆâË£ÖCocoapodÂâçË¶ÅÁ°ÆËÆ§rubyÊòØÂê¶Ê≠£Á°ÆÂÆâË£ÖÔºåÂèØ‰ª•Áî®Â¶Ç‰∏ãÂëΩ‰ª§Á°ÆËÆ§ÂΩìÂâçrubyÁéØÂ¢ÉÔºöbogon:~ wangpo$ ruby -vruby 2.3.3p222 (2016-11-21 revision 56859) [universal.x86_64-darwin17]bogon:~ wangpo$ gem -v2.7.6 2„ÄÅgemÊ∫ê Êü•ÁúãgemÊ∫êbogon:~ wangpo$ gem sources -l CURRENT SOURCES https://rubygems.org/ ÁßªÈô§Á≥ªÁªüËá™Â∏¶ÁöÑÊ∫êbogon:~ wangpo$ gem sources ‚Äìremove https://rubygems.org/https://rubygems.org/ removed from sourcesbogon:~ wangpo$ gem sources -l CURRENT SOURCES Ê∑ªÂä†Êñ∞Ê∫êbogon:~ wangpo$ sudo gem sources ‚Äìadd https://gems.ruby-china.org/Password:https://gems.ruby-china.org/ added to sources bogon:~ wangpo$ gem sources -l CURRENT SOURCES https://gems.ruby-china.org/ 3„ÄÅÂÆâË£ÖCocoapod Ê≤°ÊúâÊùÉÈôêÂÆâË£Ö bogon:~ wangpo$ gem install cocoapodsFetching: concurrent-ruby-1.0.5.gem (100%)ERROR: While executing gem ‚Ä¶ (Gem::FilePermissionError) You don‚Äôt have write permissions for the /Library/Ruby/Gems/2.3.0 directory.No permissions for the /usr/bin directory.bogon:~ wangpo$ sudo gem install cocoapods‚Ä¶‚Ä¶ERROR: While executing gem ‚Ä¶ (Gem::FilePermissionError) You don‚Äôt have write permissions for the /usr/bin directory. Ê≠£Á°ÆÊâìÂºÄÊñπÂºè bogon:~ wangpo$ sudo gem install cocoapods -n /usr/local/binSuccessfully installed fuzzy_match-2.0.4Fetching: cocoapods-core-1.4.0.gem (100%)‚Ä¶‚Ä¶22 gems installed ÂÆâË£ÖÊàêÂäü bogon:~ wangpo$ pod ‚Äìversion1.4.0]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>Cocoapods</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂàõÂª∫Ëá™Â∑±ÁöÑCocoaPodsÁßÅÊúâÂ∫ì&ÂÖ¨ÂÖ±Â∫ì]]></title>
    <url>%2F2018%2F05%2F31%2F%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84CocoaPods%E7%A7%81%E6%9C%89%E5%BA%93-%E5%85%AC%E5%85%B1%E5%BA%93%2F</url>
    <content type="text"><![CDATA[#####ÊâãÂä®ÁÆ°ÁêÜÁ¨¨‰∏âÊñπÂ∫ìÁöÑÂä£ÂäøÔºö1„ÄÅÂ∑•Á®ãÈÖçÁΩÆÁπÅÁêê2„ÄÅÈÅáÂà∞Êõ¥Êñ∞Êó∂ÔºåÈúÄÈáçÊñ∞ÊõøÊç¢3„ÄÅÂ§ö‰∏™È°πÁõÆÊó∂ÈúÄÈáçÂ§çÈÖçÁΩÆ #####‰ΩøÁî®CocoapodsÁÆ°ÁêÜÁ¨¨‰∏âÊñπÂ∫ìÁöÑ‰ºòÂäøÔºö Âú®PodfileÈáåÈù¢ÂÜôÂÖ•Ëøô‰∫õÂÜÖÂÆπÔºö12345678platform :ios, &apos;8.0&apos;inhibit_all_warnings!target :WPDevelopProject do pod &apos;AFNetworking&apos;, &apos;~&gt; 3.1.0&apos; pod &apos;YYKit&apos;, :git =&gt; &apos;https://github.com/cfxiao/YYKit.git&apos; pod &apos;DiskLog&apos;, :git =&gt; &apos;https://github.com/wangpo/MyPrivateaPods.git&apos;end Âú®Â∑•Á®ãÁõÆÂΩïÁî®ÁªàÁ´ØÂëΩ‰ª§Â∞±ÂèØ‰ª•ÂÆåÊàêÈÖçÁΩÆ„ÄÇ$ pod installÂ¶ÇÊûúÁ¨¨‰∏âÊñπÂ∫ìÊúâÊõ¥Êñ∞Ôºå$ pod update --no-repo-update #####ÂàõÂª∫podÁßÅÊúâÂ∫ìËøáÁ®ã 1„ÄÅ github‰∏äÂàõÂª∫pod‰ªìÂ∫ìSGNetworkService https://github.com/wangpo/SGNetworkService.git 2„ÄÅ‰ªégithubËøúÁ´Øclone‰ªìÂ∫ìSGNetworkServiceÂà∞Êú¨Âú∞ 3„ÄÅÂú®Êñá‰ª∂ÁõÆÂΩïSGNetworkService‰∏ãÂàõÂª∫ClassesÊñá‰ª∂ÔºåÂ∞ÜÊ∫ê‰ª£Á†ÅÊã∑ÂÖ•Êñá‰ª∂Â§π 4„ÄÅÂú®SGNetworkServiceÁõÆÂΩï‰∏ãÂàõÂª∫.podspecÊñá‰ª∂bogon:SGNetworkService wangpo$ pod spec create SGNetworkService 5„ÄÅÁÑ∂ÂêéÁî®XcodeÊâìÂºÄ.podspecÊñá‰ª∂ÔºåËøõË°åÁºñËæë„ÄÇÁºñËæëÂÆåÊàêÂêéÔºåÂú®ÁªàÁ´ØÂèØ‰ª•ËæìÂÖ•bogon:SGNetworkService wangpo$ pod lib lint --allow-warningsÊ≠§Â§ÑÂèØËÉΩ‰ºöÂá∫Áé∞ÂæàÂ§öerror Âíå warningÔºåÊ†πÊçÆÊèêÁ§∫ÈáçÊñ∞ÊâìÂºÄ.podspecÊñá‰ª∂ËøõË°å‰øÆÊîπÔºåÂ∞§ÂÖ∂Ê≥®ÊÑèÈúÄË¶ÅÂºïÁî®‰æùËµñ 6„ÄÅ‰∏∫‰∫ÜÂØπÁßÅÊúâÂ∫ìËøõË°åÁª¥Êä§Êõ¥Êñ∞ÔºåÂú®SGNetworkServiceÁõÆÂΩï‰∏ãÂàõÂª∫‰∏Ä‰∏™demoÂ∑•Á®ãÔºåÁî®podÊåáÂêëÊú¨Âú∞Â∫ìÁöÑÂΩ¢ÂºèÊâßË°åpod installÂ∞ÜClassesÂØºÂÖ•„ÄÇÊµãËØïÂ∑•Á®ãÊòØÂê¶Ê≠£Â∏∏ËøêË°å„ÄÇ pod &#39;SGNetworkService&#39;, :path =&gt; &#39;../&#39; 7„ÄÅpushÊú¨Âú∞‰ªìÂ∫ìÊ∫ê‰ª£Á†ÅÂà∞gihubËøúÁ´ØÔºåÂπ∂ÊâìtagÊ†áÁ≠æÔºå‰∏éÂàöÊâçÁºñËæë.podspecÈáåÈù¢ÂÜôÁöÑÁâàÊú¨Âè∑‰∏ÄËá¥„ÄÇ 8„ÄÅgithub‰∏äÂàõÂª∫ÁßÅÊúâ‰ªìÂ∫ì‰∏≠ÂøÉÔºåÁÆ°ÁêÜËá™Â∑±podÂ∫ìÁöÑpodspecÊñá‰ª∂ https://github.com/wangpo/MyPrivateaPods.git 9„ÄÅ Êú¨Âú∞ÂàõÂª∫ÁßÅÊúâÂ∫ì‰∏≠ÂøÉpod repo add wangpoPrivatePodsCenter https://github.com/wangpo/MyPrivateaPods.gitÂàõÂª∫ÊàêÂäüÂêéÔºåÂèØ‰ª•ËøõÂÖ•~/.cocoapods/reposÁõÆÂΩï‰∏ãÂèØ‰ª•ÁúãÂà∞wangpoPrivatePodsCenterÊñá‰ª∂ 10„ÄÅÊääSGNetworkService.podspecÊ∑ªÂä†Âà∞ÁßÅÊúâÂ∫ì‰∏≠ÂøÉbogon:SGNetworkService wangpo$ pod repo push wangpoPrivatePodsCenter SGNetworkService.podspec --allow-warnings 10„ÄÅÊ≠§Êó∂ÁßÅÊúâÂ∫ìÂà∂‰ΩúÂÆåÊàêÔºåÂú®PodfileÊñá‰ª∂‰∏≠ÂÜôÂÖ•123456789101112platform :ios, &apos;8.0&apos;inhibit_all_warnings!ÂøÖÈ°ªÊåáÊòé‰ªìÂ∫ìÂú∞ÂùÄÁßÅÊúâ‰ªìÂ∫ìsource &apos;https://github.com/wangpo/MyPrivateaPods.git&apos;ÂÖ¨Êúâ‰ªìÂ∫ìsource &apos;https://github.com/CocoaPods/Specs.git&apos;target :WPDevelopProject do pod &apos;SGNetworkService&apos;, end ËøêË°åpod install --no-repo-update(no Updating local specs repositories)Êñ∞ÁöÑÈ°πÁõÆÊàêÂäüÂ∞ÜÁßÅÊúâÂ∫ìÊñá‰ª∂Âä†ËΩΩ12.ÁßÅÊúâÂ∫ìÂçáÁ∫ßÔºåÈáçÊñ∞ÁºñËæë.podspecÊñá‰ª∂Ôºå‰øÆÊîπÁõ∏Â∫îÁöÑÁâàÊú¨Âè∑ÔºåÂÜçÊ¨°ÊâßË°å‰∏ãÈù¢ÂëΩ‰ª§Âç≥ÂèØÔºöbogon:SGNetworkService wangpo$ pod repo push wangpoPrivatePodsCenter SGNetworkService.podspec --allow-warnings 13„ÄÅÊú¨Âú∞ÁßÅÊúâÂ∫ìÂà†Èô§Âà∞~/.cocoapods/reposÁõÆÂΩï‰∏ãÔºåÈÄöËøá‰ª•‰∏ãÂëΩ‰ª§Ë°åÂç≥ÂèØÂà†Èô§Ôºörm -rf wangpoPrivatePodsCenter #####ÂàõÂª∫podÂÖ¨ÂÖ±Â∫ìËøáÁ®ã ÂÖ¨ÊúâÂ∫ìÁöÑÂà∂‰ΩúÊ≠•È™§1-7ÂíåÁßÅÊúâÂ∫ìÁöÑÂà∂‰ΩúÁõ∏ÂêåÔºåÂîØ‰∏Ä‰∏çÂêåÁöÑÂ∞±ÊòØÊää.podspecÊñá‰ª∂Êèê‰∫§Âà∞ÂÖ¨Êúâ‰ªìÂ∫ìÈáåÈù¢ CocoapodsÁªÑ‰ª∂ÁöÑÊèê‰∫§ÊñπÂºèÊòØtrunkËá™Âä®Âåñ8„ÄÅÊ≥®ÂÜåÔºö12bogon:~ wangpo$ pod trunk register wangpo1987718@163.com &quot;wangpo&quot;[!] Please verify the session by clicking the link in the verification email that has been sent to wangpo1987718@163.com 9„ÄÅÈ™åËØÅÔºö1234567bogon:~ wangpo$ pod trunk me - Name: wangpo - Email: wangpo1987718@163.com - Since: April 17th, 20:10 - Pods: None - Sessions: - April 17th, 20:10 - August 23rd, 20:13. IP: 111.207.251.32 10„ÄÅÊé®ÈÄÅÂà∞CocoapodsÁöÑ‰∏ª‰ªìÂ∫ìÔºö123456789101112131415161718192021222324252627282930bogon:MyPrivateaPods wangpo$ pod trunk push DiskLog.podspec --allow-warningsUpdating spec repo `master`CocoaPods 1.5.0 is available.To update use: `sudo gem install cocoapods`For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.5.0Validating podspec -&gt; DiskLog (0.0.1) - WARN | summary: The summary is not meaningful. - WARN | description: The description is shorter than the summary. - WARN | license: Unable to find a license fileUpdating spec repo `master`CocoaPods 1.5.0 is available.To update use: `sudo gem install cocoapods`For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.5.0-------------------------------------------------------------------------------- üéâ Congrats üöÄ DiskLog (0.0.1) successfully published üìÖ April 17th, 20:21 üåé https://cocoapods.org/pods/DiskLog üëç Tell your friends!-------------------------------------------------------------------------------- 11„ÄÅÊü•ÁúãÊòØÂê¶ÂèØ‰ª•ÊêúÁ¥¢Âà∞Ôºö12bogon:MyPrivateaPods wangpo$ pod search DiskLog[!] Unable to find a pod with name, author, summary, or description matching `DiskLog` Âà†Èô§Êú¨Âú∞ÁºìÂ≠òÈáçÊñ∞ÊêúÁ¥¢Ôºö123bogon:MyPrivateaPods wangpo$ rm ~/Library/Caches/CocoaPods/search_index.jsonbogon:MyPrivateaPods wangpo$ pod search DiskLogCreating search index for spec repo &apos;master&apos;.. Done! #####ÂÖ¨ÂÖ±podÂ∫ìÊõ¥Êñ∞12„ÄÅÂ∞ÜÊ∫ê‰ª£Á†ÅÊîπÂä®ÂíåpodspecÊñá‰ª∂ ÂèëÂ∏ÉÂà∞gitHub,Âπ∂ÊâìÊñ∞tag 13„ÄÅËøõÂÖ•È°πÁõÆÊ†πÁõÆÂΩïÔºåÊ†°È™åpodspecÊñá‰ª∂12345678910bogon:MyPrivateaPods wangpo$ pod lib lint DiskLog.podspec --allow-warnings//// ÂºïÁî®‰∫ÜÁ¨¨‰∏âÊñπÂ∫ì//bogon:MyPrivateaPods wangpo$pod lib lint DiskLog.podspec --allow-warnings --use-libraries -&gt; DiskLog (0.0.2) - WARN | attributes: Missing required attribute `license`. - WARN | license: Missing license type. - WARN | license: Unable to find a license fileDiskLog passed validation. 14„ÄÅÈáçÊñ∞push podspecÊñá‰ª∂Âà∞CocoaPodsÂÆòÊñπ‰ªìÂ∫ì12345678910111213141516171819202122232425262728293031bogon:MyPrivateaPods wangpo$ pod trunk push DiskLog.podspec --allow-warningsUpdating spec repo `master`CocoaPods 1.5.0 is available.To update use: `sudo gem install cocoapods`For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.5.0Validating podspec -&gt; DiskLog (0.0.2) - WARN | attributes: Missing required attribute `license`. - WARN | license: Missing license type. - WARN | license: Unable to find a license fileUpdating spec repo `master`CocoaPods 1.5.0 is available.To update use: `sudo gem install cocoapods`For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.5.0-------------------------------------------------------------------------------- üéâ Congrats üöÄ DiskLog (0.0.2) successfully published üìÖ April 17th, 21:25 üåé https://cocoapods.org/pods/DiskLog üëç Tell your friends!-------------------------------------------------------------------------------- Â§ßÂäüÂëäÊàêÔºåÊú™ÂÆåÂæÖÁª≠ÔºÅ]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>Cocoapods</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âü∫‰∫éGitHub Pages + Hexo + NexTÊê≠Âª∫‰∏™‰∫∫ÂçöÂÆ¢]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%9F%BA%E4%BA%8EGitHub-Pages-Hexo-NexT%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo ÁöÑÊñáÊ°£ ‰∏∫NexT‰∏ªÈ¢òÊ∑ªÂä†ÊñáÁ´†ÈòÖËØªÈáèÁªüËÆ°ÂäüËÉΩ NexT‰∏ªÈ¢ò command line hexo clean Ê∏ÖÈô§ Hexo ÁöÑÁºìÂ≠ò hexo new page tags ÂàõÂª∫Êñ∞È°µÈù¢ hexo new &quot;my new post3&quot; ÂàõÂª∫Êñ∞ÊñáÁ´† hexo g ÁîüÊàê hexo s ÂêØÂä®Êú¨Âú∞ÊúçÂä° hexo d ÂèëÂ∏É npm install hexo-deployer-git --save Ëß£ÂÜ≥hexo‰∏çËÉΩÈÉ®ÁΩ≤ÈóÆÈ¢ò]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[YYModelÁöÑÂÆûË∑µ]]></title>
    <url>%2F2018%2F05%2F02%2FYYModel%E7%9A%84%E5%AE%9E%E8%B7%B5%2F</url>
    <content type="text"><![CDATA[+(nullable NSDictionary *)modelCustomPropertyMapper; Ëá™ÂÆö‰πâÂ±ûÊÄßÊò†Â∞ÑÔºåÂ¶ÇÊûújsonÂ≠óÂÖ∏‰∏≠ÁöÑkey‰∏émodelÁöÑÂ±ûÊÄßÂêç‰∏çÂåπÈÖçÊó∂ÔºåÂÆûÁé∞Ëøô‰∏™ÊñπÊ≥ïÔºåËøîÂõûËøΩÂä†ÁöÑÊò†Â∞Ñ 123456789101112131415161718192021222324252627282930313233343536373839/** Custom property mapper. @discussion If the key in JSON/Dictionary does not match to the model&apos;s property name, implements this method and returns the additional mapper. Example: json: &#123; &quot;n&quot;:&quot;Harry Pottery&quot;, &quot;p&quot;: 256, &quot;ext&quot; : &#123; &quot;desc&quot; : &quot;A book written by J.K.Rowling.&quot; &#125;, &quot;ID&quot; : 100010 &#125; model: @code @interface YYBook : NSObject @property NSString *name; @property NSInteger page; @property NSString *desc; @property NSString *bookID; @end @implementation YYBook + (NSDictionary *)modelCustomPropertyMapper &#123; return @&#123;@&quot;name&quot; : @&quot;n&quot;, @&quot;page&quot; : @&quot;p&quot;, @&quot;desc&quot; : @&quot;ext.desc&quot;, @&quot;bookID&quot;: @[@&quot;id&quot;, @&quot;ID&quot;, @&quot;book_id&quot;]&#125;; &#125; @end @endcode @return A custom mapper for properties. */ +(nullable NSDictionary *)modelContainerPropertyGenericClass; ÂÆπÂô®Â±ûÊÄßÁöÑÊ≥õÂûãÁ±ªÊò†Â∞ÑÔºåÂ¶ÇÊûúÂ±ûÊÄßÊòØÂÆπÂô®Á±ªÂûãNSArray/NSSet/NSDictionaryÔºåÂÆûÁé∞ËØ•ÊñπÊ≥ïËøîÂõûÂ±ûÊÄß-&gt;Á±ªÁöÑÊò†Â∞ÑÔºåËØ¥ÊòéÊ∑ªÂä†Âà∞ÈõÜÂêà‰∏≠ÂØπË±°Á±ªÂûã 1234567891011121314151617181920212223242526272829/** The generic class mapper for container properties. @discussion If the property is a container object, such as NSArray/NSSet/NSDictionary, implements this method and returns a property-&gt;class mapper, tells which kind of object will be add to the array/set/dictionary. Example: @code @class YYShadow, YYBorder, YYAttachment; @interface YYAttributes @property NSString *name; @property NSArray *shadows; @property NSSet *borders; @property NSDictionary *attachments; @end @implementation YYAttributes + (NSDictionary *)modelContainerPropertyGenericClass &#123; return @&#123;@&quot;shadows&quot; : [YYShadow class], @&quot;borders&quot; : YYBorder.class, @&quot;attachments&quot; : @&quot;YYAttachment&quot; &#125;; &#125; @end @endcode @return A class mapper. */ +(nullable Class)modelCustomClassForDictionary:(NSDictionary *)dictionary; Á±ª‰ºº‰∫éÂ∑•ÂéÇÊñπÊ≥ïÔºåÂú®json-&gt;objectÁöÑËΩ¨Êç¢‰∏≠ÔºåÂàõÂª∫‰∏çÂêåÁöÑÁ±ªÂÆû‰æã 1234567891011121314151617181920212223242526272829/** If you need to create instances of different classes during json-&gt;object transform, use the method to choose custom class based on dictionary data. @discussion If the model implements this method, it will be called to determine resulting class during `+modelWithJSON:`, `+modelWithDictionary:`, conveting object of properties of parent objects (both singular and containers via `+modelContainerPropertyGenericClass`). Example: @code @class YYCircle, YYRectangle, YYLine; @implementation YYShape + (Class)modelCustomClassForDictionary:(NSDictionary*)dictionary &#123; if (dictionary[@&quot;radius&quot;] != nil) &#123; return [YYCircle class]; &#125; else if (dictionary[@&quot;width&quot;] != nil) &#123; return [YYRectangle class]; &#125; else if (dictionary[@&quot;y2&quot;] != nil) &#123; return [YYLine class]; &#125; else &#123; return [self class]; &#125; &#125; @end @endcode +(nullable NSArray *)modelPropertyBlacklist; ÈªëÂêçÂçïÂàóË°®ÔºåÊï∞ÁªÑ‰∏≠ÁöÑÂ±ûÊÄßÂêçÂú®ËΩ¨Êç¢‰∏≠Ë¢´ÂøΩÁï•ÔºõËøîÂõûnilÂøΩÁï•Ê≠§ÁâπÊÄß 123456789101112/** All the properties in blacklist will be ignored in model transform process. Returns nil to ignore this feature. @return An array of property&apos;s name. */+ (NSArray *)bfc_modelPropertyBlacklist &#123; return @[ @&quot;envelopType&quot;, ];&#125; +(nullable NSArray *)modelPropertyWhitelist; ÁôΩÂêçÂçïÂàóË°®Ôºå‰∏çÂú®ËøîÂõûÊï∞ÁªÑ‰∏≠ÁöÑÂ±ûÊÄßÂú®ËΩ¨Êç¢‰∏≠Â∞ÜË¢´ÂøΩÁï•ÔºõËøîÂõûnilÂøΩÁï•Ê≠§ÁâπÊÄß 12345678910/** If a property is not in the whitelist, it will be ignored in model transform process. Returns nil to ignore this feature. @return An array of property&apos;s name. */+ (NSArray *)bfc_modelPropertyWhitelist &#123; return nil;&#125; -(NSDictionary )modelCustomWillTransformFromDictionary:(NSDictionary )dic; Á±ª‰ºº‰∫é- (BOOL)modelCustomTransformFromDictionary:(NSDictionary *)dic;, ‰ΩÜÊòØÂú®modeËΩ¨Êç¢ÂâçË∞ÉÁî®ÔºåËøîÂõû‰∏Ä‰∏™‰øÆÊîπÁöÑdictionary‰æõËß£ÊûêËΩ¨Êç¢‰ΩøÁî®ÔºåÂ¶ÇÊûúËøîÂõûnil,ÂøΩÁï•Ëøô‰∏™modelÁöÑËá™ÂÆö‰πâËΩ¨Êç¢ 12345678910111213/** This method&apos;s behavior is similar to `- (BOOL)modelCustomTransformFromDictionary:(NSDictionary *)dic;`, but be called before the model transform. @discussion If the model implements this method, it will be called before `+modelWithJSON:`, `+modelWithDictionary:`, `-modelSetWithJSON:` and `-modelSetWithDictionary:`. If this method returns nil, the transform process will ignore this model. @param dic The json/kv dictionary. @return Returns the modified dictionary, or nil to ignore this model. */ -(BOOL)modelCustomTransformFromDictionary:(NSDictionary *)dic; Â¶ÇÊûúÈªòËÆ§ÁöÑjson-to-modelËΩ¨Êç¢‰∏çÈÄÇÁî®ÔºåÂÆûÁé∞Ê≠§ÊñπÊ≥ïËøΩÂä†È¢ùÂ§ñÁöÑÂ§ÑÁêÜÔºõËøîÂõûYES‰ª£Ë°®modelÊúâÊïàÔºåËøîÂõûNO,ÂøΩÁï•model 1234567891011121314151617181920212223242526272829/** If the default json-to-model transform does not fit to your model object, implement this method to do additional process. You can also use this method to validate the model&apos;s properties. @discussion If the model implements this method, it will be called at the end of `+modelWithJSON:`, `+modelWithDictionary:`, `-modelSetWithJSON:` and `-modelSetWithDictionary:`. If this method returns NO, the transform process will ignore this model. @param dic The json/kv dictionary. @return Returns YES if the model is valid, or NO to ignore this model. */ NSDictionary *vrargs = dic[@&quot;vrargs&quot;]; if (vrargs &amp;&amp; [vrargs isKindOfClass:[NSDictionary class]]) &#123; NSString *render_mode = vrargs[@&quot;render_mode&quot;]; if (render_mode &amp;&amp; [render_mode isKindOfClass:[NSString class]]) &#123; if ([render_mode isEqualToString:@&quot;sphere&quot;]) &#123; _renderMode = BFCVideoRenderModeSphere; &#125; else if ([render_mode isEqualToString:@&quot;skybox&quot;]) &#123; _renderMode = BFCVideoRenderModeSkybox; &#125; else if ([render_mode isEqualToString:@&quot;semisphere&quot;]) &#123; _renderMode = BFCVideoRenderModeSemisphere; &#125; &#125; &#125; return YES;&#125; (BOOL)modelCustomTransformToDictionary:(NSMutableDictionary *)dic; Â¶ÇÊûúÈªòËÆ§ÁöÑmodel-to-jsonËΩ¨Êç¢‰∏çÈÄÇÁî®ÔºåÂÆûÁé∞Ê≠§ÊñπÊ≥ïËøΩÂä†È¢ùÂ§ñÁöÑÂ§ÑÁêÜÔºõËøîÂõûYES‰ª£Ë°®modelÊúâÊïàÔºåËøîÂõûNO,ÂøΩÁï•model 12345678910111213141516171819202122232425262728293031323334/** If the default model-to-json transform does not fit to your model class, implement this method to do additional process. You can also use this method to validate the json dictionary. @discussion If the model implements this method, it will be called at the end of `-modelToJSONObject` and `-modelToJSONString`. If this method returns NO, the transform process will ignore this json dictionary. @param dic The json dictionary. @return Returns YES if the model is valid, or NO to ignore this model. */NSString *render_mode = nil; switch (_renderMode) &#123; case BFCVideoRenderModeSphere: render_mode = @&quot;sphere&quot;; break; case BFCVideoRenderModeSkybox: render_mode = @&quot;skybox&quot;; break; case BFCVideoRenderModeSemisphere: render_mode = @&quot;semisphere&quot;; break; default: break; &#125; if (render_mode) &#123; dic[@&quot;vrargs&quot;] = @&#123; @&quot;render_mode&quot;: render_mode &#125;; &#125; return YES;]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>YYModel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ReactiveCocoaÊïôÁ®ã Â≠¶‰π†Á¨îËÆ∞2]]></title>
    <url>%2F2018%2F05%2F01%2FReactiveCocoa%E6%95%99%E7%A8%8B-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02%2F</url>
    <content type="text"><![CDATA[ÂéüÊñáÔºöReactiveCocoa Tutorial ‚Äì The Definitive Introduction: Part 2/2 ÁøªËØëÔºöReactiveCocoaÊïôÁ®ãÔºö‰∏ãÂçäÈÉ®„ÄêÁøªËØë„Äë ËøôÈÉ®ÂàÜ‰Ω†Â∞ÜÂ≠¶Âà∞ReactiveCocoaÊõ¥Ê∑±Â±ÇÊ¨°ÁöÑÂäüËÉΩÔºåÂ¶ÇÔºö‰∫ã‰ª∂Á±ªÂûãÔºöerrorÂíåcompleteÈôêÊµÅÂ§öÁ∫øÁ®ãÊåÅÁª≠Âåñ 12345678910111213141516171819202122232425@weakify(self); [[[[[[[self requestAccessToSinaWeiboSignal] then:^RACSignal *&#123;//Á≠âÂæÖcompleted‰∫ã‰ª∂ @strongify(self); return self.searchText.rac_textSignal; &#125;] filter:^BOOL(NSString *text) &#123;//ËøáÊª§ @strongify(self); return [self isValidSearchText:text]; &#125;] throttle:0.5]//ËäÇÊµÅ flattenMap:^RACStream *(NSString *text) &#123;//Êò†Â∞Ñ @strongify(self); return [self signalForSearchWithText:text]; &#125;] deliverOn:[RACScheduler mainThreadScheduler]]//ÂàÜÂèë subscribeNext:^(NSDictionary *jsonSearchResult) &#123;//ËÆ¢ÈòÖ NSArray *statuses = jsonSearchResult[@&quot;statuses&quot;]; NSArray *tweets = [statuses linq_select:^id(id item) &#123; return [RWTweet tweetWithStatus:item]; &#125;]; [self.resultsViewController displayTweets:tweets]; &#125; error:^(NSError *error) &#123; NSLog(@&quot;error:%@&quot;,error); &#125;]; 12345678910111213141516171819- (RACSignal *)requestAccessToSinaWeiboSignal&#123; NSError *accessError = [NSError errorWithDomain:RWSinaWeiboInstantDomain code:RWSinaWeiboInstantErrorAccessDenied userInfo:nil]; @weakify(self); return [RACSignal createSignal:^RACDisposable *(id&lt;RACSubscriber&gt; subscriber) &#123; @strongify(self); [self.accountStore requestAccessToAccountsWithType:self.sinaWeiboAccountType options:nil completion:^(BOOL granted, NSError *error) &#123; if (!granted) &#123; [subscriber sendError:accessError]; &#125;else&#123; [subscriber sendNext:nil]; [subscriber sendCompleted]; &#125; &#125;]; return nil; &#125;]; &#125; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546- (SLRequest *)requestForTwitterSearchWithText:(NSString *)text&#123; NSURL *url = [NSURL URLWithString:@&quot;https://api.sina.com&quot;]; NSDictionary *params =@&#123;@&quot;q&quot;:@&quot;text&quot;&#125;; SLRequest *request = [SLRequest requestForServiceType:SLServiceTypeSinaWeibo requestMethod:SLRequestMethodGET URL:url parameters:params]; return request;&#125;- (RACSignal *)signalForSearchWithText:(NSString *)text&#123; NSError *noAccountsError = [NSError errorWithDomain:RWSinaWeiboInstantDomain code:RWSinaWeiboInstantErrorNoTwitterAccounts userInfo:nil]; NSError *invalidResponseError = [NSError errorWithDomain:RWSinaWeiboInstantDomain code:RWSinaWeiboInstantErrorInvalidResponse userInfo:nil]; @weakify(self); return [RACSignal createSignal:^RACDisposable *(id&lt;RACSubscriber&gt; subscriber) &#123; @strongify(self); SLRequest *request = [self requestForTwitterSearchWithText:text]; NSArray *sinaWeiboAccounts = [self.accountStore accountsWithAccountType:self.sinaWeiboAccountType]; if (sinaWeiboAccounts.count == 0) &#123; [subscriber sendError:noAccountsError]; &#125;else &#123; [request setAccount:[sinaWeiboAccounts lastObject]]; [request performRequestWithHandler:^(NSData *responseData, NSHTTPURLResponse *urlResponse, NSError *error) &#123; if (urlResponse.statusCode == 200) &#123; NSDictionary *timelineData = [NSJSONSerialization JSONObjectWithData:responseData options:NSJSONReadingAllowFragments error:nil]; [subscriber sendNext:timelineData]; [subscriber sendCompleted]; &#125;else&#123; [subscriber sendError:invalidResponseError]; &#125; &#125;]; &#125; return nil; &#125;]; &#125; 1234567891011121314151617181920//ÂºÇÊ≠•Âä†ËΩΩÂõæÁâá [[[self signalForLoadingImage:tweet.profileImageUrl] deliverOn:[RACScheduler mainThreadScheduler]] subscribeNext:^(UIImage *image) &#123; cell.twitterAvatarView.image = image; &#125;];- (RACSignal *)signalForLoadingImage:(NSString *)imageUrl&#123; RACScheduler *scheduler = [RACScheduler schedulerWithPriority:RACSchedulerPriorityBackground]; return [[RACSignal createSignal:^RACDisposable *(id&lt;RACSubscriber&gt; subscriber) &#123; NSData *data = [NSData dataWithContentsOfURL:[NSURL URLWithString:imageUrl]]; UIImage *image = [UIImage imageWithData:data]; [subscriber sendNext:image]; [subscriber sendCompleted]; return nil; &#125;] subscribeOn:scheduler]; &#125;]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ReactiveCocoa</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ReactiveCocoaÊïôÁ®ã Â≠¶‰π†Á¨îËÆ∞1]]></title>
    <url>%2F2018%2F05%2F01%2FReactiveCocoa%E6%95%99%E7%A8%8B-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01%2F</url>
    <content type="text"><![CDATA[ÂéüÊñáÔºöReactiveCocoa Tutorial ‚Äì The Definitive Introduction: Part 1/2 ÁøªËØëÔºöReactiveCocoaÊïôÁ®ãÔºö‰∏äÂçäÈÉ®„ÄêÁøªËØë„Äë ËøôÈÉ®ÂàÜÂ≠¶‰ºöÂ¶Ç‰ΩïÁî®ÂèëÈÄÅ‰∫ã‰ª∂ÊµÅÁöÑ‰ø°Âè∑ÊõøÊç¢Ê†áÂáÜÁöÑÂä®‰ΩúÂíå‰∫ã‰ª∂Â§ÑÁêÜÈÄªËæëÔºåÂ¶Ç‰ΩïÂØπËøô‰∫õ‰ø°Âè∑ËøõË°åËΩ¨Êç¢„ÄÅÊãÜÂàÜÂíåÈáçÁªÑ„ÄÇ È°πÁõÆ‰∏≠Ê∑ªÂä†ReactiveCocoaÊ°ÜÊû∂ÊúÄÁÆÄÂçïÁöÑÈÄîÂæÑÊòØ‰ΩøÁî®CocoaPods 1234platform :ios, &apos;7.0&apos;target &apos;TwitterInstant&apos; dopod &apos;ReactiveCocoa&apos;, &apos;2.1.8&apos;//(ReactiveCocoa2.X‰∏∫OCÁâàÊú¨Ôºå‰πãÂêéÂåÖÊã¨ÊúÄÊñ∞ÁöÑÁâàÊú¨ÈÉΩÂü∫‰∫éSwift)end 123456789101112131415161718192021222324252627282930313233343536373839404142#import &lt;ReactiveCocoa/ReactiveCocoa.h&gt;//ÂàõÂª∫Áä∂ÊÄÅÈ™åËØÅ‰ø°Âè∑ RACSignal *validUsernameSignal = [self.usernameTF.rac_textSignal map:^id(NSString *text) &#123; return @([self isValidUsername:text]); &#125;]; RACSignal *validPasswordSignal = [self.passwordTF.rac_textSignal map:^id(NSString *text) &#123; return @([self isValidPassword:text]); &#125;]; RAC(self.usernameTF, backgroundColor) = [validUsernameSignal map:^id(NSNumber *usernameValid) &#123; return [usernameValid boolValue] ? [UIColor clearColor] : [UIColor yellowColor]; &#125;]; RAC(self.passwordTF, backgroundColor) = [validPasswordSignal map:^id(NSNumber *passwordValid) &#123; return [passwordValid boolValue] ? [UIColor clearColor] : [UIColor yellowColor]; &#125;]; //‰ø°Âè∑ÂêàÊàê RACSignal *signUpActiveSignal = [RACSignal combineLatest:@[validUsernameSignal,validPasswordSignal] reduce:^id(NSNumber *usernameValid,NSNumber *passwordValid)&#123; return @([usernameValid boolValue] &amp;&amp; [passwordValid boolValue]); &#125;]; [signUpActiveSignal subscribeNext:^(NSNumber *signUpActive) &#123; self.loginBtn.enabled = [signUpActive boolValue]; &#125;]; - (BOOL)isValidUsername:(NSString *)username&#123; if ([username length] &gt; 3) &#123; return YES; &#125; return NO;&#125;- (BOOL)isValidPassword:(NSString *)password&#123; if ([password length] &gt; 3) &#123; return YES; &#125; return NO;&#125; 123456789101112131415161718192021222324252627282930313233 //ÂìçÂ∫îÂºèÁôªÂΩï [[[[self.loginBtn rac_signalForControlEvents:UIControlEventTouchUpInside] doNext:^(id x) &#123;//ÂâØ‰ΩúÁî® self.loginBtn.enabled = NO; &#125;] flattenMap:^id(id value) &#123; return [self loginSignal];//‰ø°Âè∑ÈáåÁöÑ‰ø°Âè∑ &#125;] subscribeNext:^(NSNumber *loginSuccess) &#123; self.loginBtn.enabled = YES; if ([loginSuccess boolValue]) &#123; [[[UIAlertView alloc] initWithTitle:@&quot;ÊèêÁ§∫&quot; message:@&quot;ÁôªÂΩïÊàêÂäü&quot; delegate:nil cancelButtonTitle:nil otherButtonTitles:@&quot;Á°ÆÂÆö&quot;, nil] show]; &#125;else&#123; [[[UIAlertView alloc] initWithTitle:@&quot;ÊèêÁ§∫&quot; message:@&quot;ÁôªÂΩïÂ§±Ë¥•&quot; delegate:nil cancelButtonTitle:nil otherButtonTitles:@&quot;Á°ÆÂÆö&quot;, nil] show]; &#125; &#125;];//ÂàõÂª∫‰ø°Âè∑- (RACSignal *)loginSignal&#123; return [RACSignal createSignal:^RACDisposable *(id&lt;RACSubscriber&gt; subscriber) &#123; [self.signInService signInWithUsername:self.usernameTF.text password:self.passwordTF.text complete:^(BOOL success) &#123; [subscriber sendNext:@(success)]; [subscriber sendCompleted]; &#125;]; return nil; &#125;];&#125;]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ReactiveCocoa</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂàùÊé¢]]></title>
    <url>%2F2018%2F03%2F30%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%88%9D%E6%8E%A2%2F</url>
    <content type="text"><![CDATA[Â∞èÁ®ãÂ∫èÈÖçÁΩÆ app.jsonapp.json ÊòØÂØπÂΩìÂâçÂ∞èÁ®ãÂ∫èÁöÑÂÖ®Â±ÄÈÖçÁΩÆÔºåÂåÖÊã¨‰∫ÜÂ∞èÁ®ãÂ∫èÁöÑÊâÄÊúâÈ°µÈù¢Ë∑ØÂæÑ„ÄÅÁïåÈù¢Ë°®Áé∞„ÄÅÁΩëÁªúË∂ÖÊó∂Êó∂Èó¥„ÄÅÂ∫ïÈÉ® tab Á≠â„ÄÇQuickStart È°πÁõÆÈáåËæπÁöÑ app.json ÈÖçÁΩÆÂÜÖÂÆπÂ¶Ç‰∏ãÔºö 1234567891011121314151617181920212223242526&#123; &quot;pages&quot;:[ &quot;pages/index/index&quot;,//ÂàùÂßãÈ°µÈù¢ &quot;pages/logs/logs&quot; ], &quot;window&quot;:&#123; &quot;backgroundTextStyle&quot;:&quot;light&quot;, &quot;navigationBarBackgroundColor&quot;: &quot;#fff&quot;, &quot;navigationBarTitleText&quot;: &quot;WeChat&quot;, &quot;navigationBarTextStyle&quot;:&quot;black&quot; &#125;&quot;tabBar&quot;: &#123; &quot;list&quot;: [&#123; &quot;pagePath&quot;: &quot;pages/index/index&quot;, &quot;text&quot;: &quot;È¶ñÈ°µ&quot; &#125;, &#123; &quot;pagePath&quot;: &quot;pages/logs/logs&quot;, &quot;text&quot;: &quot;Êó•Âøó&quot; &#125;] &#125;, &quot;networkTimeout&quot;: &#123; &quot;request&quot;: 10000, &quot;downloadFile&quot;: 10000 &#125;, &quot;debug&quot;: true&#125; 1„ÄÅpagesÂ≠óÊÆµÔºàString Array Ê≠§È°πÂøÖÂ°´Ôºâ ‚Äî‚Äî Êé•Âèó‰∏Ä‰∏™Êï∞ÁªÑÔºåÊØè‰∏ÄÈ°πÈÉΩÊòØÂ≠óÁ¨¶‰∏≤ÔºåÊù•ÊåáÂÆöÂ∞èÁ®ãÂ∫èÁî±Âì™‰∫õÈ°µÈù¢ÁªÑÊàê„ÄÇÊØè‰∏ÄÈ°π‰ª£Ë°®ÂØπÂ∫îÈ°µÈù¢ÁöÑ„ÄêË∑ØÂæÑ+Êñá‰ª∂Âêç„Äë‰ø°ÊÅØÔºåÊï∞ÁªÑÁöÑÁ¨¨‰∏ÄÈ°π‰ª£Ë°®Â∞èÁ®ãÂ∫èÁöÑÂàùÂßãÈ°µÈù¢„ÄÇÂ∞èÁ®ãÂ∫è‰∏≠Êñ∞Â¢û/ÂáèÂ∞ëÈ°µÈù¢ÔºåÈÉΩÈúÄË¶ÅÂØπ pages Êï∞ÁªÑËøõË°å‰øÆÊîπ„ÄÇÊñá‰ª∂Âêç‰∏çÈúÄË¶ÅÂÜôÊñá‰ª∂ÂêéÁºÄÔºåÂõ†‰∏∫Ê°ÜÊû∂‰ºöËá™Âä®ÂéªÂØªÊâæË∑ØÂæÑ‰∏ã .json, .js, .wxml, .wxss Âõõ‰∏™Êñá‰ª∂ËøõË°åÊï¥Âêà„ÄÇ 2„ÄÅwindowÂ≠óÊÆµ ‚Äî‚Äî Áî®‰∫éËÆæÁΩÆÂ∞èÁ®ãÂ∫èÁöÑÁä∂ÊÄÅÊ†è„ÄÅÂØºËà™Êù°„ÄÅÊ†áÈ¢ò„ÄÅÁ™óÂè£ËÉåÊôØËâ≤„ÄÇ ##Â∑•ÂÖ∑ÈÖçÁΩÆ project.config.json ÈíàÂØπÂºÄÂèëÂ∑•ÂÖ∑ÁöÑ‰∏™ÊÄßÂåñËÆæÁΩÆ‰ø°ÊÅØÂÜôÂÖ•Ê≠§Êñá‰ª∂ ##È°µÈù¢ÈÖçÁΩÆ page.json Áî®Êù•Ë°®Á§∫ pages/logs ÁõÆÂΩï‰∏ãÁöÑ logs.json ËøôÁ±ªÂíåÂ∞èÁ®ãÂ∫èÈ°µÈù¢Áõ∏ÂÖ≥ÁöÑÈÖçÁΩÆÔºåËÆ©ÂºÄÂèëËÄÖÂèØ‰ª•Áã¨Á´ãÂÆö‰πâÊØè‰∏™È°µÈù¢ÁöÑ‰∏Ä‰∫õÂ±ûÊÄß Flex Â∏ÉÂ±ÄÊïôÁ®ãËØ≠Ê≥ïÁØáÔºöhttp://www.ruanyifeng.com/blog/2015/07/flex-grammar.htmlÂÆû‰æãÔºöhttp://www.ruanyifeng.com/blog/2015/07/flex-examples.html]]></content>
      <categories>
        <category>JS</category>
      </categories>
      <tags>
        <tag>Â∞èÁ®ãÂ∫è</tag>
        <tag>JS</tag>
      </tags>
  </entry>
</search>
